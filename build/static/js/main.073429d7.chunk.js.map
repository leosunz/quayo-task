{"version":3,"sources":["external_libs/components/task-list/task-list-table.module.css","external_libs/components/task-list/task-list-header.module.css","external_libs/components/gantt/gantt.module.css","external_libs/components/task-item/project/project.module.css","external_libs/components/grid/grid.module.css","external_libs/components/task-item/task-list.module.css","external_libs/components/other/tooltip.module.css","external_libs/components/task-item/milestone/milestone.module.css","external_libs/components/other/vertical-scroll.module.css","external_libs/components/calendar/calendar.module.css","external_libs/components/other/horizontal-scroll.module.css","api/ApiControllers.ts","api/LoginErrors.ts","constants/Config.ts","api/AuthApi.ts","contexts/AuthContext.tsx","components/ProtectedComponents.tsx","constants/MenuConstants.tsx","api/AssignedTasksApi.tsx","components/ErrorComponent.tsx","components/Loading.tsx","components/reusable/CustomTable.tsx","components/reusable/CustomPaginationTable.tsx","images/empty_temp_1.png","utils/formatters.ts","utils/projectUtils.ts","api/ApiModels.ts","components/form/FormModels.ts","components/form/UpdatableInputFieldOG.tsx","components/dialogs/AddCommentDialog.tsx","components/dialogs/AddProgressDialog.tsx","components/dialogs/ScheduleTaskDialog.tsx","contexts/ThemeContext.tsx","components/reusable/HoverPopover.tsx","components/AssignedTasksDashboard.tsx","components/Dashboard.tsx","images/logo.png","screens/HomeScreen.tsx","components/dialogs/AlertDialog.tsx","components/LogoComponent.tsx","components/dialogs/ConfirmationDialog.tsx","screens/LoginScreen.tsx","api/ClientsApi.ts","components/reusable/LivePaginationTable.tsx","components/StyledComponents.tsx","images/empty_search.png","components/templates/DisplayTemplate.tsx","screens/ClientsScreen.tsx","components/form/CustomDynamicForm.tsx","components/templates/CreateTemplate.tsx","hooks/useFetch.tsx","screens/NewClientScreen.tsx","api/UsersApi.ts","screens/UsersScreen.tsx","components/templates/EditTemplate.tsx","components/dialogs/ChangeUserPasswordDialog.tsx","screens/UserDetailsScreen.tsx","screens/NewUserScreen.tsx","screens/ClientDetailsScreen.tsx","api/TaskTemplateApi.ts","screens/MainTemplatesScreen.tsx","api/ProjectApi.tsx","contexts/TaskTemplateContext.tsx","components/form/TaskComponentUpdatableInputField.tsx","components/reusable/TaskTempComponent.tsx","components/dialogs/NewProjectTaskTempFormDialog2.tsx","components/reusable/TaskTempGrid.tsx","components/reusable/PillComponent.tsx","screens/MainTemplateDetailsScreen.tsx","screens/NewMainTaskTemplateScreen.tsx","screens/NotFound.tsx","screens/ProjectsScreen.tsx","contexts/ProjectContext.tsx","components/dialogs/ProjectTaskTreeViewDialog.tsx","components/reusable/ProjectEditPill.tsx","components/dialogs/EditProjectTaskItemDialog.tsx","components/dialogs/TaskMoreDetailsDialog.tsx","screens/ProjectDetailsScreen.tsx","screens/NewProjectScreen.tsx","contexts/EditTaskScreenContext.tsx","components/dialogs/NewProjectTaskFormDialog2.tsx","components/form/TaskComponentUpdatableDateField.tsx","components/reusable/ProjectTaskComponent.tsx","components/reusable/TasksGrid.tsx","components/reusable/TaskTemplatePreview.tsx","screens/ProjectTasksEditScreen.tsx","api/ProjectPaymentApi.tsx","contexts/ProjectPaymentContext.tsx","components/NewProjectPaymentForm.tsx","screens/ProjectPaymentScreen.tsx","api/CurrenciesApi.ts","contexts/CurrenciesContext.tsx","components/NewCurrencyForm.tsx","screens/CurrenciesScreen.tsx","api/DropdownApi.tsx","contexts/DropdownContext.tsx","components/DropdownFormTemplate.tsx","screens/DropdownValuesScreen.tsx","api/RequestsScreenApi.ts","screens/RescheduleRequestsScreen.tsx","api/ProjectPreviewApi.ts","contexts/ProjectPreviewContext.tsx","components/InlinePill.tsx","components/ProjectPreviewTaskComponent.tsx","screens/ProjectPreviewWithAssignedTasks.tsx","api/OrdersApi.ts","components/OrderStatusComponent.tsx","screens/OrderStatusScreen.tsx","api/TasksByEmployeeApi.ts","images/no_task_selected.png","screens/TasksByEmployeeScreen.tsx","api/PipelineOrdersApi.ts","screens/PipelineOrdersScreen.tsx","api/GanttApi.ts","external_libs/types/public-types.ts","external_libs/helpers/date-helper.ts","external_libs/components/task-list/task-list-header.tsx","external_libs/components/task-list/task-list-table.tsx","external_libs/components/other/tooltip.tsx","external_libs/components/other/vertical-scroll.tsx","external_libs/components/task-list/task-list.tsx","external_libs/components/grid/grid-body.tsx","external_libs/components/grid/grid.tsx","external_libs/components/calendar/top-part-of-calendar.tsx","external_libs/components/calendar/calendar.tsx","external_libs/components/other/arrow.tsx","external_libs/helpers/bar-helper.ts","external_libs/helpers/other-helper.ts","external_libs/components/task-item/bar/bar-display.tsx","external_libs/components/task-item/bar/bar-date-handle.tsx","external_libs/components/task-item/bar/bar-progress-handle.tsx","external_libs/components/task-item/bar/bar.tsx","external_libs/components/task-item/bar/bar-small.tsx","external_libs/components/task-item/milestone/milestone.tsx","external_libs/components/task-item/project/project.tsx","external_libs/components/task-item/task-item.tsx","external_libs/components/gantt/task-gantt-content.tsx","external_libs/components/gantt/task-gantt.tsx","external_libs/components/other/horizontal-scroll.tsx","external_libs/components/gantt/gantt.tsx","screens/GanttScreen.tsx","screens/AvgDurationTaskScreen.tsx","screens/CashForecastScreen.tsx","screens/ChangePasswordScreen.tsx","api/EditProjectHeadersApi.ts","contexts/EditProjectHeadersContext.tsx","screens/EditProjectHeadersScreen.tsx","App.tsx","reportWebVitals.ts","index.tsx","external_libs/components/task-item/bar/bar.module.css"],"names":["module","exports","HttpMethods","LoginError","message","Error","BadRequestError","ConflictError","ForbiddenError","NotFoundError","GeneralError","ValidationError","api","url","method","body","headers","errorMessage","a","hasBody","fetch","JSON","stringify","response","ok","json","resBody","error_message","error_code","handleUnsuccessfulReponse","status","console","log","Errors","undefined","resStatus","domainName","projectName","loginUrl","AuthContext","createContext","AuthContextProvider","children","useState","token","localStorage","getItem","decoded","jwtDecode","now","Date","exp","username","sub","tokenStr","authUser","setAuthUser","refreshState","password","forceLogout","Post","force_logout","setItem","access_token","Get","Authorization","removeItem","Provider","value","login","isAuthenticated","user","logout","EnsureAuthenticated","authContext","useContext","location","useLocation","to","state","from","EnsureUnAuthenticated","globalMenuItems","theme","title","icon","style","color","route","desc","orange","cardColor","adminlMenuItems","roles","includes","blue","teal","purple","green","red","adminReportsMenuItems","deepOrange","cyan","lightBlue","passwordHint","checkPasswordValidation","password1","password2","length","containsUpper","i","char","charAt","toUpperCase","containsLower","toLocaleLowerCase","containsNumber","Number","isNaN","containsSpecial","getAssignedTasksUrl","getStartTaskUrl","id","getEndTaskUrl","getDownloadAssignedURL","ids","domain","forEach","ErrorComponent","text","yellow","fontSize","Typography","MainContainer","styled","display","flexDirection","justifyContent","alignItems","height","width","palette","primary","Loading","useTheme","loaders","dark","Math","floor","random","marginTop","spacing","variant","StyledTableCell","TableCell","tableCellClasses","head","backgroundColor","common","white","getTableRowHover","isDelayed","grey","StyledTableRow","TableRow","cursor","isSelected","mode","action","hover","border","TablePaginationActions","props","count","page","rowsPerPage","onPageChange","inpuPage","setInputPage","Box","sx","flexShrink","ml","IconButton","onClick","event","disabled","direction","parseInt","Input","type","disableUnderline","InputStyles","onChange","e","target","onKeyUp","keyCode","param","onKeyPress","String","fromCharCode","charCode","match","preventDefault","ceil","max","specififcDateFormat","date","parts","split","month","day","year","CustomPaginationTable","table","onRowClick","selectedRowId","setPage","setRowsPerPage","sortKey","sortOrder","rows","useCallback","row","reverse","cells","sortedData","sort","b","sortData","getTime","getDate","Paper","overflow","TableContainer","flex","Table","stickyHeader","minWidth","TableHead","customHeaders","map","heads","TableBody","slice","cell","index","TablePagination","rowsPerPageOptions","colSpan","SelectProps","inputProps","native","newPage","onRowsPerPageChange","ActionsComponent","borderColor","borderBottom","outline","TextAlign","formatCurrency","amount","currency","Intl","NumberFormat","format","getDayFromDate","moment","getProjectIdFormat","number","my_string","getLargestNum","arr","largest","getNextSortOrder","sortProjectTasks","tasks","sort_order","t","sortProjectTasksWithReturn","isTaskFirstElement","task","parent","isFirst","isTaskLastElement","isLast","isTaskInPending","start","find","is_start","task_status_id","isTaskCompleteOrPending","end","is_final","isTaskComplete","PropertyInputType","CriteriaType","FormElementType","FormFieldModelType","Text","Password","TextArea","Dropdown","margin","ButtonRow","UpdatableInputFieldOG","setState","error","setError","didChange","setDidChange","useEffect","updateState","submit","update","TextField","editable","required","label","maxLength","multiline","fullWidth","onInput","toString","FormControl","InputLabel","Select","labelId","values","MenuItem","description","Button","AddCommentDialog","Dialog","maxWidth","open","isOpen","onClose","DialogTitle","DialogContent","DialogContentText","comment","initialValue","DialogActions","AddPRogressDialog","progress","setProgress","validate","valid","newProgress","ScheduleTaskDialog","presetStart","setPresetStart","presetEnd","setPresetEnd","setStart","setEnd","clear","padding","LocalizationProvider","dateAdapter","AdapterDateFns","locale","frLocale","DatePicker","isStartEditable","openTo","views","newValue","renderInput","params","isEndEditable","ThemeContext","React","toggleColorMode","getDisabledIconButton","ThemeContextProvider","setMode","colorMode","prevMode","createTheme","main","light","secondary","background","paper","shape","borderRadius","typography","fontFamily","ThemeProvider","HoverPopover","anchorEl","setAnchorEl","handlePopoverClose","Boolean","onMouseEnter","currentTarget","onMouseLeave","Popover","pointerEvents","anchorOrigin","vertical","horizontal","transformOrigin","disableRestoreFocus","p","hoverText","loaded","AssignedTasksDashboard","navigate","useNavigate","setTasks","setStatus","isLoading","setIsLoading","checkedTasks","setCheckedTasks","then","data","task_status","catch","err","startTask","res","endTask","updateComment","setCommentOpen","commentId","updateProgress","setProgressOpen","progressId","rescheduleCallback","setScheduleOpen","scheduleId","request_start","request_end","setCommentId","setComment","commentOpen","setProgressId","setProgressProjectId","progressOpen","scheduleStart","scheduleEnd","scheduleOpen","isPrintDisabled","setIsPrintDisabled","downloadAssigned","filename","get","blob","buffer","Blob","link","document","createElement","download","href","window","URL","createObjectURL","click","remove","src","empty","paddingLeft","marginLeft","warning","Checkbox","checked","every","allSelected","indexOf","splice","push","project_title","client_description","task_code","task_name","planned_start_date","planned_end_date","actual_start_date","actual_end_date","task_progress","can_start","can_reschedule","can_update_progress","project_id","getTableState","StyledPaper","Item","body2","textAlign","boxShadow","overflowY","gridTemplateColumns","MenuHolder","Dashboard","filter","m","gutterBottom","component","drawerWidth","openedMixin","transition","transitions","create","easing","sharp","duration","enteringScreen","overflowX","closedMixin","leavingScreen","breakpoints","up","AppBar","MuiAppBar","shouldForwardProp","prop","zIndex","drawer","DrawerHeader","mixins","toolbar","StyledTypography","fontWeight","Drawer","MuiDrawer","whiteSpace","boxSizing","HomeScreen","setOpen","pathname","isDashboard","handleNavigate","logoutUser","CssBaseline","position","Toolbar","edge","marginRight","logo","noWrap","Divider","List","item","ListItem","button","ListItemIcon","ListItemText","LogoutRounded","flexGrow","AlertDialog","content","LogoComponent","marginBottom","Transition","forwardRef","ref","Slide","ConfirmationDialog","TransitionComponent","keepMounted","dismiss","negativeText","positive","positiveText","StyledCard","default","StyledButton","LoginScreen","isDialogOpen","setIsDialogOpen","dialogTitle","setDialogTitle","dialogContent","setDialogContent","setUsername","usernameErr","setUsernameErr","setPassword","passwordErr","setPasswordErr","setForceLogout","forceDialog","setForceDialog","submitForm","reload","onSubmit","onKeyDown","key","FormControlLabel","control","Switch","PaginationActionType","getClientByCodeUrl","StyledFab","Fab","bottom","right","InputContainer","TransparentStyledPaper","header","bg","elevation","borderLeft","shadows","ScreenContainer","isDataLoaded","StyledDivider","StyledVerticalDivider","pageCount","currentPage","movePage","First","Previous","NaN","Next","Last","LivePaginationTable","notInProjectsView","alignSelf","justifySelf","dataloaded","StyledContainer","overfowY","StyledHeader","findIndex","time","hours","min","sec","datee","DisplayTemplate","setData","search","setSearch","pageNumber","setPageNumber","setPageCount","didSearchChange","setDidSearchChange","sortValue","setSortValue","getData","pageNum","page_number","page_count","current_page","movePageCallback","tableState","pageTitle","loadingLabel","searchLabel","rowClicked","showNewButton","newEntityUrl","mr","newButtonText","FormLabel","RadioGroup","name","sortedDataa","is_draft","dateA","estimated_delivery","dateB","Radio","ClientsScreen","client","client_code","supervisor_code","is_active","StyledForm","tempcol","gap","CustomDynamicForm","formElements","element","formElementsState","setFormElementsState","changeTextControlValue","newState","targetControl","removeWhiteSpaces","replace","some","gridTempCol","noValidate","autoComplete","handleDropDownChange","buttonText","paddingTop","StyledTypo","CreateTemplate","useFetch","resData","NewClientScreen","isInitLoading","dialogOpen","setDialogOpen","formFieldModel","Main","Property","criteria","Criteria","properties","property_id","db_id","cr","client_criteria_value_id","sales_representative","currency_code","address_code","elements","criterion","criteria_id","is_editable","is_required","fromCriteriaType","parse","criteria_type","criteria_values","cv","criteria_value_id","property","fromPropertyInputType","input_type","currencies","curr","currency_symbol","sales","sales_representatives","rep","user_code","address","addresses","add","getForm","getUserUrl","UsersScreen","buttonEnable","setButtonEnable","email","role_name","join","EditTemplate","ChangeUserPasswordDialog","isSuccessful","setIsSuccessful","setPassword1","setPassword2","isButtonActive","userCode","new_password","setTimeout","success","UserDetailsScreen","useParams","userData","isUserDataLoading","changePassDialog","setChangePassDialog","user_criteria_value_id","Patch","template","c","Role","role","role_id","NewUserScreen","ClientDetailsScreen","Display","barcode","pr","default_user","getMainTempUrl","isFlat","saveTemplateUrl","deleteTaskTempalteUrl","taskMoredetailsUrl","projectId","taskId","addTaskMoreDetailsUrl","MainTemplatesScreen","temp","children_count","ProjectTaskChangeEvent","getProjectsUrl","saveProjectAsDraftUrl","saveProjectAsStartUrl","getProjecTableView","TaskTemplateContext","TaskTemplateContextProvider","rootTask","setRootTask","timeUnits","setTimeUnits","selectedTask","setSelectedTask","users","setUsers","autofillTemplates","setAutofillTemplates","qs","apiTask","time_units","updateTask","editTemplateTasksUrl","newTree","updateEstimatedTimes","time_unit_id","newTime","estimated_time","milliseconds","reduce","prev","getEstimatedTime","Object","assign","saveTemplate","deleteMainTask","Delete","stateValue","oldIndex","newIndex","activeTask","setSelectedProjectTaskCb","fake_id","addNewTask","projAdd","v4","deleteTask","canOrderUp","canOrderDown","TaskComponentUpdatableInputField","isInput","userSelect","StyledRow","indent","SelectedDot","selected","paddingRight","ColumnContainer","TaskTempComponent","taskName","setTaskName","taskNameErr","setTaskNameErr","taskCode","setTaskCode","taskCodeErr","default_assigned_to","defaultAssignedTo","setDefaultAssignedTo","estimatedTime","setEstimatedTime","estimatedTimeErr","setEstimatedTimeErr","timeUnitId","setTimeUnitId","timeUnitIdErr","setTimeUnitIdErr","setIsInput","isRoot","abs","tu","orientation","NewTaskTempFormDialog2","plannedStart","setPlannedStart","plannedEnd","setPlannedEnd","timeUnit","mil","handleClose","Autocomplete","disablePortal","time_unit","options","getOptionLabel","paddingBottom","TaskTempGrid","isConfirmOpen","setIsConfirmOpen","child","endIcon","Pill","TextPillComponent","darkColor","lightColor","TasksContainer","HeaderContainer","flexWrap","MainTemplateDetailsScreen","deleteDialog","setDeleteDialog","flexItem","NewMainTaskTemplateScreen","initLoading","redirect","tUnit","NotFound","ProjectsScreen","project","replaceAll","projId","ProjectContext","ProjectContextProvider","setProject","taskStatus","setTaskStatus","deleteProject","task_tree","ProjectTaskTreeViewDialog","getTreeData","treeData","setTreeData","fullScreen","canDrag","canDrop","LeftTaskHolder","ProjectEditPill","treeDialogOpen","setTreeDialogOpen","EditProjectTaskItemDialog","item_number","itemNumber","setItemNumber","item_name","itemName","setItemName","quantity","setQuantity","item_id","task_id","onBackdropClick","TaskMoreDetailsDialog","currentItemNumber","setCurrentItemNumber","currentItemName","setCurrentItemName","currentQuantity","setCurrentQuantity","currentItemId","setCurrentItemId","openEditDialog","setOpenEditDialog","detail","deleteItem","ProjectDetailsScreen","commentDialog","setCommentDialog","currentTaskId","setcurrentTaskId","isMoreDetailsDialogOpen","setIsMoreDetailsDialogOpen","taskItems","setTaskItems","getTaskItem","handleSortingChange","date1","date2","diffInMs","getDifferenceInDays","completed","assigned_to","progress_last_updated","today","days","difference","total_price","paid_amount","MainElements","dropSize","NewProjectScreen","clientSelected","setClientSelected","userSelected","setUserSelected","setTitle","projectCurrency","setProjectCurrency","estimatedDelivery","setEstimatedDelivery","totalPrice","setTotalPrice","lostSales","setLostSales","downPayment","setDownPayment","downPaymentCurr","setDownPaymentCurr","paymentCollDate","setPaymentCollDate","initData","project_currency","estimated_delivery_date","lost_sales","down_payment","payment_collection_date","down_payment_currency","clients","EditTasksScreenContext","EditTasksScreenContextProvider","query","req","editProjectTasksUrl","tree","setTaskTree","setSelectedProjectTask","setMinifiedTemplates","templates","autofill_templates","showingTemplate","setShowingTemplate","taskTree","selectedTemplateId","setSelectedTemplateId","minifiedTemplates","selectedProjectTask","setTemplate","resetTempSelection","selectTemplate","parentTask","ChangeStart","changeStartDateAndCascade","ChangeEnd","startDate","endDate","diff","cascade","changeEndDateAndCascade","ChangeTime","flatTree","getFlatTaskTreeWithParents","predecessor","parent_fake_id","updateFirstNodeTasks","updatePlannedEndFromPlannedStart","processingPeriod","getMillisecondsFromTimeUnitId","nodeOneChild","pred","getPredecessorRef","updateFirstNodeTaskDatesWithNoChildren","sortOrderOne","largestSortOrder","sortOrderLast","updateFirstNodeTaskDatesWithChildren","nextSort","sortOrderLimit","taskToUpdate","getFlatTaskTree","saveDraft","startProject","checkTasksIfReadyRecursively","assigned_to_user_code","pickTemplate","newTasks","getContextTasks","isProjectReadyToStart","canDeleteTask","next","acceptRescheduleStart","schedule","requested_date","is_confirmed","declineRescheduleStart","acceptRescheduleEnd","declineRescheduleEnd","getAvailablePredecessors","tasksList","availableTasks","unshift","NewTaskFormDialog2","assignedTo","setAssignedTo","TaskComponentUpdatableDateField","disablePast","shouldDisableDate","reschedule","requested_by","indigo","acceptReschedule","declineReschedule","ProjectTaskComponent","setPredecessor","None","changeEvent","setChangeEvent","isTaskEditable","start_request","end_request","TasksGrid","TreeDiv","TaskTemplatePreview","ProjectTasksEditScreen","newProjectPaymentsUrl","ProjectPaymentContext","ProjectPaymentContextProvider","setIsLaoding","getProjectPayments","setPayments","payments","setCurrencies","project_currency_code","setClientCurrency","client_currency_code","setPaid","paid","setPrice","price","clientCurrency","newProjectPayment","collection_date","payment_amount","Container","NewProjectPaymentForm","setAmount","amountErr","setAmountErr","setDate","dateErr","setDateErr","setCurrency","currencyErr","setCurrencyErr","currency_description","BodyGrid","ProjectPaymentScreen","payment","is_down_payment","CurrrenciesContext","CurrenciesContextProvider","selectedCurrency","setSelectedCurrency","newCurrency","updateCurrency","currencyCode","newRatio","ratio","setSelectedCurrencyCb","CustomTextField","RowContainer","NewCurrencyForm","code","setCode","codeErr","setCodeErr","setDesc","descErr","setDescErr","symbol","setSymbol","symbolErr","setSymbolErr","setRatio","ratioErr","setRatioErr","mirroredRatio","setMirroredRatio","setRatioCb","mirVal","isFinite","getMainCurr","is_main","uniqueCodes","toLocaleUpperCase","mainCurrStyle","toCurrStyle","setCurrencyCode","setRatioMirroredCb","CurrenciesScreen","newSelection","CriteriaValueType","newCriteriavalueUrl","variable","Client","deleteCriteriavalueUrl","DropdownContext","DropdownContextProvider","paymentModes","setPaymentModes","paymentTerms","setPaymentTerms","positions","setPositions","positionsId","setpPositionsId","paymentModesId","setPaymentModesId","paymentTermsId","setPaymentTermsId","payment_modes","payment_terms","positions_id","payment_modes_id","payment_terms_id","newCriteriaValue","criteriaType","deleteCriteriaValue","FormRow","DropdownFormTemplate","setNewValue","valueErr","setValueErr","selectToDelete","setSelectedToDelete","submitNewValue","criteriaId","deleteCriteriaVal","GridContainer","DropdownValuesScreen","User","gridTemplateRows","RescheduleRequestsScreen","getAllRequestsUrl","start_requests","alt","date_added","end_requests","getAllRequests","last_edited","updateCommentUrl","updateProgressUrl","rescheduleUrl","ProjectPreviewContext","ProjectPreviewContextProvider","clientDescription","setClientDescription","projectTitle","setProjectTitle","apiCallback","rescheduleTask","getPredecessor","buildRecursively","list","InlinePill","ProjectPreviewTaskComponent","predecessor_id","is_owner","MainGridContainer","ProjectPreviewWithAssignedTasks","styles","flexcount","insertpadding","StyledCurrentTask","OrderStatusComponent","isExpanded","setIsExpanded","isHeader","orderStatus","customer_account","customer_name","order_number","expected_ship_date","expected_payment","current_tasks","Accordion","expanded","AccordionSummary","expandIcon","AccordionDetails","task_owner","due_date","OrderStatusScreen","setOrderStatus","order","ReportsMainContainer","ReportsLeftPanel","delmarginright","ReportsRightPanel","center","delmarginleft","ReportsStyledTypography","ReportsStyledPaper","TasksByEmployeeScreen","isPageLoading","setIsPageLoading","isTasksLoading","setIsTasksLoading","selectedUserCode","setSelectedUserCode","taskError","setTaskError","noselected","start_date","PipelineOrdersScreen","orders","setOrders","planned_date","expected_date","ViewMode","DateTimeFormatOptions","DateTimeFormat","intlDTCache","getCachedDateTimeFormat","locString","opts","dtf","addToDate","scale","getFullYear","getMonth","getHours","getMinutes","getSeconds","getMilliseconds","startOfDate","scores","shouldReset","_scale","maxScore","ganttDateRange","viewMode","newStartDate","newEndDate","Month","Week","getMonday","Day","QuarterDay","HalfDay","seedDates","currentDate","dates","getLocaleMonth","bottomValue","getDay","getWeekNumberISO8601","tmpDate","valueOf","dayNumber","firstThursday","setMonth","weekNumber","TaskListHeaderDefault","headerHeight","rowWidth","className","ganttTable_Header","ganttTable_HeaderItem","ganttTable_HeaderSeparator","localeDateStringCache","dateTimeOptions","weekday","TaskListTableDefault","rowHeight","onExpanderClick","toLocaleDateString","useMemo","lds","toLocaleDateStringFactory","expanderSymbol","hideChildren","taskListTableRow","taskListCell","taskListNameWrapper","taskListExpander","taskListEmptyExpander","Tooltip","rtl","svgContainerHeight","svgContainerWidth","scrollX","scrollY","arrowIndent","taskListWidth","TooltipContent","tooltipRef","useRef","relatedY","setRelatedY","relatedX","setRelatedX","current","newRelatedX","tooltipHeight","offsetHeight","tooltipWidth","offsetWidth","newRelatedY","x1","x2","tooltipDetailsContainer","tooltipDetailsContainerHidden","left","top","StandardTooltipContent","VerticalScroll","scroll","ganttHeight","ganttFullHeight","onScroll","scrollRef","scrollTop","TaskList","taskListRef","horizontalContainerClass","TaskListHeader","TaskListTable","horizontalContainerRef","headerProps","tableProps","selectedTaskId","GridBody","svgWidth","columnWidth","todayColor","y","gridRows","rowLines","x","y1","y2","gridRowLine","fill","tickX","ticks","gridTick","Grid","TopPartOfCalendar","x1Line","y1Line","y2Line","xText","yText","calendarTopTick","Calendar","dateSetup","topValues","bottomValues","topDefaultHeight","topValue","getCalendarValuesForMonth","weeksCount","getCalendarValuesForWeek","getCalendarValuesForDay","hour","getCalendarValuesForOther","Arrow","path","trianglePoints","taskFrom","taskTo","taskHeight","drownPathAndTriangleRTL","drownPathAndTriangle","strokeWidth","d","points","indexCompare","taskToEndPosition","taskFromEndPosition","taskFromHorizontalOffsetValue","taskToHorizontalOffsetValue","convertToBarTask","dateDelta","barCornerRadius","handleWidth","barProgressColor","barProgressSelectedColor","barBackgroundColor","barBackgroundSelectedColor","projectProgressColor","projectProgressSelectedColor","projectBackgroundColor","projectBackgroundSelectedColor","milestoneBackgroundColor","milestoneBackgroundSelectedColor","barTask","convertToMilestone","convertToBar","taskXCoordinateRTL","taskXCoordinate","typeInternal","progressWithByParams","progressWidth","progressX","taskYCoordinate","backgroundSelectedColor","progressColor","progressSelectedColor","barChildren","rotatedHeight","xDate","getTimezoneOffset","round","taskX1","taskX2","getProgressPoint","taskY","moveByX","xStep","additionalXValue","newX1","dateByX","taskX","taskDate","timeStep","newDate","handleTaskBySVGMouseEvent","svgX","initEventX1Delta","result","handleTaskBySVGMouseEventForMilestone","handleTaskBySVGMouseEventForBar","changedTask","isChanged","barWidth","progressByXRTL","progressByX","startByX","newX2","endByX","newMoveX1","newMoveX2","isKeyboardEvent","removeHiddenTasks","groupedTasks","groupedTask","getChildren","taskList","taskChildren","dependencies","concat","BarDisplay","onMouseDown","ry","rx","barBackground","BarDateHandle","barHandle","BarProgressHandle","progressPoint","Bar","isProgressChangeable","isDateChangeable","onEventStart","handleHeight","barWrapper","tabIndex","BarSmall","Milestone","transform","milestoneWrapper","milestoneBackground","Project","barColor","processColor","projectWith","projectLeftTriangle","projectRightTriangle","projectWrapper","projectBackground","projectTop","TaskItem","isDelete","textRef","taskItem","setTaskItem","isTextInside","setIsTextInside","getBBox","stopPropagation","onDoubleClick","onFocus","hasChild","getX","barLabel","barLabelOutside","TaskGanttContent","ganttEvent","svg","arrowColor","setGanttEvent","setFailedTask","onDateChange","onProgressChange","onDelete","point","createSVGPoint","setXStep","setInitEventX1Delta","isMoving","setIsMoving","handleMouseMove","clientX","matrixTransform","getScreenCTM","inverse","handleMouseUp","originalSelectedTask","newChangedTask","isNotLikeOriginal","removeEventListener","operationSuccess","addEventListener","handleBarEventStart","stroke","isDisabled","TaskGantt","gridProps","calendarProps","barProps","ganttSVGRef","verticalGanttContainerRef","newBarProps","scrollLeft","ganttVerticalContainer","dir","xmlns","horizontalContainer","HorizontalScroll","Gantt","listCellWidth","barFill","onSelect","wrapperRef","setDateSetup","setTaskHeight","setTaskListWidth","setSvgContainerWidth","setSvgContainerHeight","barTasks","setBarTasks","failedTask","setScrollY","setScrollX","ignoreScrollEvent","setIgnoreScrollEvent","filteredTasks","newDates","j","dependence","convertToBarTasks","prevStateTask","newTaskList","newTaskHeight","handleWheel","shiftKey","deltaX","scrollMove","deltaY","newScrollX","newScrollY","passive","handleSelectedTask","newSelectedTask","oldSelectedTask","wrapper","isX","GanttGrid","GanttScreen","projects","setProjects","isProjectLoading","setProjectLoading","selectedProjectId","setSelectedProjectId","projectError","setProjectError","flattenTree","getFlatTree","gridColumn","buildTasksRecusrively","taskParent","dep","predTask","convertProjectTaskToTask","getTasks","mainHeight","getElementById","clientHeight","getGanttHeight","AvgDurationTaskScreen","getDuration","getActual","orderNumber","actual","getAvgDuration","toFixed","getAvgActual","CashForecastScreen","forecast","setForecast","ChangePasswordScreen","oldPassword","setOldPassword","old_password","updateProjectHeadersUrl","EditProjectHeadersContext","EditProjectHeadersContextProvider","setHeaders","refreshHeaders","newTitle","setProjectOwner","newOwner","setTotalAmount","totalAmount","getProjectHeaders","EditProjectHeadersScreen","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.073429d7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskListWrapper\":\"task-list-table_taskListWrapper__1EUXr\",\"taskListTableRow\":\"task-list-table_taskListTableRow__13-oo\",\"taskListCell\":\"task-list-table_taskListCell__3O3uL\",\"taskListNameWrapper\":\"task-list-table_taskListNameWrapper__3jQ4G\",\"taskListExpander\":\"task-list-table_taskListExpander__36RGQ\",\"taskListEmptyExpander\":\"task-list-table_taskListEmptyExpander__1KtgS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ganttTable\":\"task-list-header_ganttTable__2x3sC\",\"ganttTable_Header\":\"task-list-header_ganttTable_Header__QPKk0\",\"ganttTable_HeaderSeparator\":\"task-list-header_ganttTable_HeaderSeparator__2RrFo\",\"ganttTable_HeaderItem\":\"task-list-header_ganttTable_HeaderItem__YPyrh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ganttVerticalContainer\":\"gantt_ganttVerticalContainer__bGebq\",\"horizontalContainer\":\"gantt_horizontalContainer__NvENZ\",\"wrapper\":\"gantt_wrapper__wOYFO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"projectWrapper\":\"project_projectWrapper__2ysfk\",\"projectBackground\":\"project_projectBackground__9mcMb\",\"projectTop\":\"project_projectTop__2qBqa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gridRow\":\"grid_gridRow__1b1hT\",\"gridRowLine\":\"grid_gridRowLine__36-48\",\"gridTick\":\"grid_gridTick__3GwZz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"barLabel\":\"task-list_barLabel__BGe98\",\"barLabelOutside\":\"task-list_barLabelOutside__fO1SA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltipDefaultContainer\":\"tooltip_tooltipDefaultContainer__1oDoG\",\"tooltipDefaultContainerParagraph\":\"tooltip_tooltipDefaultContainerParagraph__2YXlS\",\"tooltipDetailsContainer\":\"tooltip_tooltipDetailsContainer__3IK_5\",\"tooltipDetailsContainerHidden\":\"tooltip_tooltipDetailsContainerHidden__1afk4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"milestoneWrapper\":\"milestone_milestoneWrapper__32nBY\",\"milestoneBackground\":\"milestone_milestoneBackground__jPEx5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scroll\":\"vertical-scroll_scroll__3yV99\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calendarBottomText\":\"calendar_calendarBottomText__3sGef\",\"calendarTopTick\":\"calendar_calendarTopTick__Lnx-L\",\"calendarTopText\":\"calendar_calendarTopText__2SDGG\",\"calendarHeader\":\"calendar_calendarHeader__AvpMU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scroll\":\"horizontal-scroll_scroll__2y1Bu\"};","import * as Errors from \"./LoginErrors\"\r\n\r\nexport async function api<T>(\r\n  url: string,\r\n  method: HttpMethods,\r\n  body?: any,\r\n  headers?: any,\r\n  errorMessage?: string,\r\n  hasBody: boolean = true\r\n): Promise<T | undefined> {\r\n  const response = await fetch(url, {\r\n    method: method,\r\n    body: body ? JSON.stringify(body) : null,\r\n    headers: { ...headers, \"Content-Type\": \"application/json\" },\r\n  })\r\n\r\n\r\n\r\n  if (!response.ok) {\r\n    let resBody\r\n    try {\r\n      resBody = await response.json()\r\n    } catch (error) {\r\n      resBody = {\r\n        error_message: errorMessage ?? \"Something went wrong\",\r\n        error_code: \"500\",\r\n      }\r\n    }\r\n\r\n    handleUnsuccessfulReponse(response.status, resBody)\r\n  }\r\n\r\n  if (hasBody) {\r\n    try {\r\n      console.log(\"resp\", response)\r\n      return await response.json()\r\n    } catch (e) {\r\n      console.log(e)\r\n      throw new Errors.GeneralError(\"An error occurred\")\r\n    }\r\n  } else {\r\n    return undefined\r\n  }\r\n}\r\n\r\nexport enum HttpMethods {\r\n  Get = \"GET\",\r\n  Post = \"POST\",\r\n  Patch = \"PATCH\",\r\n  Delete = \"DELETE\",\r\n}\r\n\r\nexport function handleUnsuccessfulReponse(\r\n  resStatus: number,\r\n  resBody: Errors.ErrorResponse\r\n) {\r\n  const message = resBody.error_message\r\n  if (resStatus === 404) {\r\n    throw new Errors.NotFoundError(message)\r\n  } else if (resStatus === 401) {\r\n    throw new Errors.LoginError(message)\r\n  } else if (resStatus === 400) {\r\n    throw new Errors.BadRequestError(message)\r\n  } else if (resStatus === 409) {\r\n    throw new Errors.ConflictError(message)\r\n  } else if (resStatus === 403) {\r\n    throw new Errors.ForbiddenError(message)\r\n  } else if ((resStatus >= 700 && resStatus <= 799) || resStatus === 418) {\r\n    throw new Errors.ValidationError(message)\r\n  } else {\r\n    throw new Errors.GeneralError(\"An error occurred\")\r\n  }\r\n}\r\n\r\nexport function handleError(e: Error): IError {\r\n  let title: string\r\n  let message: string\r\n\r\n  if (e instanceof Errors.LoginError) {\r\n    title = \"Unauthorized\"\r\n    message = \"You are currently not logged in\"\r\n  } else if (e instanceof Errors.NetworkError) {\r\n    title = \"Network Error\"\r\n    message = \"Could not connect to the server\"\r\n  } else if (e instanceof Errors.BadRequestError) {\r\n    title = \"Something went wrong.\"\r\n    message = \"Something went wrong. Try refreshing the page.\"\r\n  } else if (e instanceof Errors.ConflictError) {\r\n    title = \"Conflict Error\"\r\n    message = e.message\r\n  } else if (e instanceof Errors.ForbiddenError) {\r\n    title = \"Forbidden Error\"\r\n    message = e.message\r\n  } else if (e instanceof Errors.NotFoundError) {\r\n    title = \"Not Found\"\r\n    message = e.message\r\n  } else if (e instanceof Errors.GeneralError) {\r\n    title = \"An Error Occurred\"\r\n    message = e.message\r\n  } else {\r\n    title = \"Something went wrong.\"\r\n    message = \"Something went wrong. Try refreshing the page\"\r\n  }\r\n\r\n  return { title, message }\r\n}\r\n\r\nexport interface IError {\r\n  title: string\r\n  message: string\r\n}\r\n","/**\r\n * Errors\r\n */\r\n\r\nexport interface ErrorResponse {\r\n  error_message: string\r\n  error_code: string\r\n}\r\n\r\nexport class LoginError extends Error {\r\n  constructor(message: string) {\r\n    super(message)\r\n  }\r\n}\r\n\r\nexport class NetworkError extends Error {\r\n  constructor(message: string) {\r\n    super(message)\r\n  }\r\n}\r\n\r\nexport class BadRequestError extends Error {\r\n  constructor(message: string) {\r\n    super(message)\r\n  }\r\n}\r\n\r\nexport class ConflictError extends Error {\r\n  constructor(message: string) {\r\n    super(message)\r\n  }\r\n}\r\n\r\nexport class ForbiddenError extends Error {\r\n  constructor(message: string) {\r\n    super(message)\r\n  }\r\n}\r\n\r\nexport class NotFoundError extends Error {\r\n  constructor(message: string) {\r\n    super(message)\r\n  }\r\n}\r\n\r\nexport class GeneralError extends Error {\r\n  constructor(message: string) {\r\n    super(message)\r\n  }\r\n}\r\n\r\nexport class ValidationError extends Error {\r\n  constructor(message: string) {\r\n    super(message)\r\n  }\r\n}\r\n\r\n\r\n","//export const domainName = \"http://localhost:1515\"\r\nexport const domainName = \"http://87.98.220.129:1515\"\r\n\r\nexport const projectName = \"SONACO - AL RABIH Task Management\"\r\n","import { domainName } from \"../constants/Config\"\r\n\r\nexport const loginUrl = domainName + \"/api/user/login\"\r\n\r\nexport interface LoginRequest {\r\n    username: string\r\n    password: string\r\n}\r\n\r\nexport interface LoginResponse {\r\n    access_token: string\r\n}\r\n","import { createContext, useState } from \"react\"\r\nimport { api, HttpMethods } from \"../api/ApiControllers\"\r\nimport { LoginResponse, loginUrl } from \"../api/AuthApi\"\r\nimport { IAuthState, IAuthUser, Token } from \"../models/AuthState\"\r\nimport jwtDecode from \"jwt-decode\"\r\nimport { domainName } from \"../constants/Config\"\r\n\r\nexport const AuthContext = createContext<IAuthState | null>(null)\r\n\r\nfunction AuthContextProvider({ children }: { children: JSX.Element }) {\r\n  const [authUser, setAuthUser] = useState<IAuthUser | null>(() => {\r\n    const token = localStorage.getItem(\"token\")\r\n    if (token) {\r\n      const decoded: Token | undefined = jwtDecode(token)\r\n      const now = Date.now() / 1000\r\n\r\n      if (decoded && decoded.exp > now) {\r\n        return { token: decoded, username: decoded.sub, tokenStr: token }\r\n      }\r\n    }\r\n\r\n    return null\r\n  })\r\n\r\n  function refreshState() {\r\n    let state: IAuthUser | null = null\r\n    const token = localStorage.getItem(\"token\")\r\n    if (token) {\r\n      const decoded: Token | undefined = jwtDecode(token)\r\n      const now = Date.now() / 1000\r\n\r\n      if (decoded && decoded.exp > now) {\r\n        return { token: decoded, username: decoded.sub, tokenStr: token }\r\n      }\r\n    }\r\n\r\n    setAuthUser(state)\r\n  }\r\n\r\n  async function login(\r\n    username: string,\r\n    password: string,\r\n    forceLogout: boolean\r\n  ) {\r\n    const token = await api<LoginResponse>(\r\n      loginUrl,\r\n      HttpMethods.Post,\r\n      {\r\n        username,\r\n        password,\r\n        force_logout: forceLogout,\r\n      },\r\n      {},\r\n      \"Incorrect username/password.\"\r\n    )\r\n    if (token) {\r\n      localStorage.setItem(\"token\", token.access_token )      \r\n    }\r\n    refreshState()\r\n  }\r\n\r\n  async function logout() {\r\n    try {\r\n      await api(\r\n        domainName + \"/api/user/logout\",\r\n        HttpMethods.Get,\r\n        null,\r\n        { Authorization: `Bearer ${authUser?.tokenStr}` },\r\n        \"Something went wrong.\",\r\n        false\r\n      )\r\n      localStorage.removeItem(\"token\")\r\n      refreshState()\r\n    } catch (e) {\r\n      localStorage.removeItem(\"token\")\r\n      refreshState()\r\n    }\r\n  }\r\n\r\n  function isAuthenticated(): boolean {\r\n    return authUser !== null\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{ login, isAuthenticated, user: authUser, logout }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport default AuthContextProvider\r\n","import { useContext } from \"react\"\r\nimport { Navigate, useLocation } from \"react-router\"\r\nimport { AuthContext } from \"../contexts/AuthContext\"\r\n\r\nexport function EnsureAuthenticated({ children }: { children: JSX.Element }) {\r\n  const authContext = useContext(AuthContext)\r\n  const location = useLocation()\r\n\r\n  if (!authContext?.isAuthenticated()) {\r\n    return <Navigate to=\"/login\" state={{ from: location }} />\r\n  }\r\n\r\n  return children\r\n}\r\n\r\nexport function EnsureUnAuthenticated({ children }: { children: JSX.Element }) {\r\n  const authContext = useContext(AuthContext)\r\n  const location = useLocation()\r\n\r\n  if (authContext?.isAuthenticated()) {\r\n    return <Navigate to=\"/\" state={{ from: location }} />\r\n  }\r\n\r\n  return children\r\n}\r\n","import AccountBoxRounded from \"@mui/icons-material/AccountBoxRounded\"\r\nimport AdminPanelSettingsRounded from \"@mui/icons-material/AdminPanelSettingsRounded\"\r\nimport DashboardRoundedIcon from \"@mui/icons-material/DashboardRounded\"\r\nimport { Token } from \"../models/AuthState\"\r\nimport AssignmentRoundedIcon from \"@mui/icons-material/AssignmentRounded\"\r\nimport BusinessCenterRoundedIcon from \"@mui/icons-material/BusinessCenterRounded\"\r\nimport MonetizationOnRoundedIcon from \"@mui/icons-material/MonetizationOnRounded\"\r\nimport PrecisionManufacturingRoundedIcon from \"@mui/icons-material/PrecisionManufacturingRounded\"\r\nimport {\r\n  blue,\r\n  cyan,\r\n  deepOrange,\r\n  green,\r\n  lightBlue,\r\n  orange,\r\n  purple,\r\n  red,\r\n  teal,\r\n} from \"@mui/material/colors\"\r\nimport ViewListRoundedIcon from \"@mui/icons-material/ViewListRounded\"\r\nimport TaskAltRoundedIcon from \"@mui/icons-material/TaskAltRounded\"\r\nimport UpcomingRoundedIcon from \"@mui/icons-material/UpcomingRounded\"\r\nimport InsertChartRoundedIcon from \"@mui/icons-material/InsertChartRounded\"\r\nimport LocalAtmRoundedIcon from \"@mui/icons-material/LocalAtmRounded\"\r\n\r\nexport interface MenuItem {\r\n  title: string\r\n  icon: any\r\n  route: string\r\n  desc: string\r\n  cardColor?: string\r\n}\r\n\r\nexport const globalMenuItems = (theme: \"light\" | \"dark\") => {\r\n  return [\r\n    {\r\n      title: \"Dashboard\",\r\n      icon: <DashboardRoundedIcon style={{ color: \"#ff7043\" }} />,\r\n      route: \"/\",\r\n      desc: \"\",\r\n    },\r\n    {\r\n      title: \"Projects\",\r\n      icon: <BusinessCenterRoundedIcon style={{ color: orange[700] }} />,\r\n      route: \"/projects\",\r\n      desc: \"Create, view, and edit your projects list.\",\r\n      cardColor: theme === \"light\" ? \"#ffad42\" : \"#bb4d00\",\r\n    },\r\n  ]\r\n}\r\n\r\nexport const adminlMenuItems: (\r\n  token: Token,\r\n  theme: \"light\" | \"dark\"\r\n) => MenuItem[] = (token: Token, theme: \"light\" | \"dark\") => {\r\n  if (token.roles.includes(\"ADMIN\")) {\r\n    return [\r\n      {\r\n        title: \"Clients\",\r\n        icon: <AccountBoxRounded style={{ color: blue[700] }} />,\r\n        route: \"/clients\",\r\n        desc: \"Create, view, and edit your clients list.\",\r\n        cardColor: theme === \"light\" ? \"#63a4ff\" : \"#004ba0\",\r\n      },\r\n      {\r\n        title: \"Users\",\r\n        icon: <AdminPanelSettingsRounded style={{ color: teal[700] }} />,\r\n        route: \"/users\",\r\n        desc: \"Create, view, and edit your users list.\",\r\n        cardColor: theme === \"light\" ? \"#48a999\" : \"#004c40\",\r\n      },\r\n      {\r\n        title: \"Templates\",\r\n        icon: <AssignmentRoundedIcon style={{ color: purple[700] }} />,\r\n        route: \"/tasks/templates\",\r\n        desc: \"Create, view, and edit your template list.\",\r\n        cardColor: theme === \"light\" ? \"#ae52d4\" : \"#4a0072\",\r\n      },\r\n      {\r\n        title: \"Currencies\",\r\n        icon: <MonetizationOnRoundedIcon style={{ color: green[700] }} />,\r\n        route: \"/currencies\",\r\n        desc: \"Create, view, and edit your currencies list.\",\r\n        cardColor: theme === \"light\" ? \"#6abf69\" : \"#00600f\",\r\n      },\r\n      {\r\n        title: \"Dropdown Values\",\r\n        icon: <ViewListRoundedIcon style={{ color: red[700] }} />,\r\n        route: \"/settings/dropdown\",\r\n        desc: \"Create, view, and edit your dropdown values.\",\r\n        cardColor: theme === \"light\" ? \"#ba6b6c\" : \"#9a0007\",\r\n      },\r\n    ]\r\n  } else {\r\n    return []\r\n  }\r\n}\r\n\r\nexport const adminReportsMenuItems: (\r\n  token: Token,\r\n  theme: \"light\" | \"dark\"\r\n) => MenuItem[] = (token: Token, theme: \"light\" | \"dark\") => {\r\n  if (token.roles.includes(\"ADMIN\")) {\r\n    return [\r\n      {\r\n        title: \"Order Status\",\r\n        icon: (\r\n          <PrecisionManufacturingRoundedIcon\r\n            style={{ color: deepOrange[700] }}\r\n          />\r\n        ),\r\n        route: \"/reports/order-status\",\r\n        desc: \"Track your orders.\",\r\n        cardColor: theme === \"light\" ? \"#ff7d47\" : \"#ac0800\",\r\n      },\r\n      {\r\n        title: \"Tasks By Employee\",\r\n        icon: <TaskAltRoundedIcon style={{ color: green[700] }} />,\r\n        route: \"/reports/tasks-by-employee\",\r\n        desc: \"Track your orders.\",\r\n        cardColor: theme === \"light\" ? \"#6abf69\" : \"#00600f\",\r\n      },\r\n      {\r\n        title: \"Pipeline Orders\",\r\n        icon: <UpcomingRoundedIcon style={{ color: cyan[700] }} />,\r\n        route: \"/reports/pipeline-orders\",\r\n        desc: \"Track your orders.\",\r\n        cardColor: theme === \"light\" ? \"#56c8d8\" : \"#006978\",\r\n      },\r\n      {\r\n        title: \"Gantt Chart\",\r\n        icon: <InsertChartRoundedIcon style={{ color: lightBlue[700] }} />,\r\n        route: \"/reports/gantt\",\r\n        desc: \"Track your orders.\",\r\n        cardColor: theme === \"light\" ? \"#5eb8ff\" : \"#005b9f\",\r\n      },\r\n      {\r\n        title: \"Cash Forecast\",\r\n        icon: <LocalAtmRoundedIcon style={{ color: green[700] }} />,\r\n        route: \"/reports/cash-forecast\",\r\n        desc: \"Track your orders.\",\r\n        cardColor: theme === \"light\" ? \"#6abf69\" : \"#00600f\",\r\n      },\r\n    ]\r\n  } else {\r\n    return []\r\n  }\r\n}\r\n\r\nexport const passwordHint =\r\n  \"Password must be at least 6 characters in length containing at least: 1 uppercase letter, 1 numeric value, 1 lowercase letter, 1special character (!, @, #, $, %, ^, *, -, _, +)\"\r\n\r\nexport const passwordChars = \"!, @, #, $, %, ^, *, -, _, +\"\r\n\r\nexport const checkPasswordValidation = (\r\n  password1: string,\r\n  password2: string\r\n) => {\r\n  let isValid =\r\n    password1.length > 5 && password2.length > 5 && password1 === password2\r\n\r\n  if (!isValid) {\r\n    return false\r\n  } else {\r\n    let containsUpper = false\r\n\r\n    for (let i = 0; i < password1.length; i++) {\r\n      const char = password1.charAt(i)\r\n      if (char === char.toUpperCase()) {\r\n        containsUpper = true\r\n        break\r\n      }\r\n    }\r\n\r\n    let containsLower = false\r\n\r\n    for (let i = 0; i < password1.length; i++) {\r\n      const char = password1.charAt(i)\r\n      if (char === char.toLocaleLowerCase()) {\r\n        containsLower = true\r\n        break\r\n      }\r\n    }\r\n\r\n    let containsNumber = false\r\n\r\n    for (let i = 0; i < password1.length; i++) {\r\n      const char = password1.charAt(i)\r\n      if (\r\n        !Number.isNaN(char) &&\r\n        [0, 1, 2, 3, 4, 5, 6, 7, 8, 9].includes(Number(char))\r\n      ) {\r\n        containsNumber = true\r\n        break\r\n      }\r\n    }\r\n\r\n    let containsSpecial = false\r\n\r\n    for (let i = 0; i < password1.length; i++) {\r\n      const char = password1.charAt(i)\r\n      if (passwordChars.includes(char)) {\r\n        containsSpecial = true\r\n        break\r\n      }\r\n    }\r\n\r\n    return containsUpper && containsLower && containsNumber && containsSpecial\r\n  }\r\n}\r\n","import { domainName } from \"../constants/Config\"\r\nimport { TaskStatusInterface } from \"./ProjectApi\"\r\nimport { TimeUnit } from \"./TaskTemplateApi\"\r\n\r\nexport const getAssignedTasksUrl = domainName + \"/api/project/task/assigned\"\r\nexport const getStartTaskUrl = (id: number | string) =>\r\n  domainName + `/api/project/task/${id}/start`\r\nexport const getEndTaskUrl = (id: number | string) =>\r\n  domainName + `/api/project/task/${id}/end`\r\nexport const updateCommentUrl = (id: number | string) =>\r\n  domainName + `/api/project/task/${id}/comment`\r\nexport const updateProgressUrl = (id: number | string) =>\r\n  domainName + `/api/project/task/${id}/progress`\r\n\r\n  export const checkIfFinishedProjectUrl = (id: number | string) =>\r\n  domainName + `/api/project/${id}/checkIfFinished`\r\n\r\nexport const rescheduleUrl = (id: number | string) =>\r\n  domainName + `/api/project/task/${id}/reschedule`\r\n export const getDownloadAssignedURL = (ids: number[]) => {\r\n  let domain = domainName + \"/api/project/task/assigned/xlsx?\"\r\n  ids.forEach((i) => {\r\n    domain = domain + `id=${i}&`\r\n  })\r\n\r\n  return domain\r\n}\r\n\r\nexport interface AssignedTaskResponseInterface {\r\n  tasks: AssignedTaskinterface[]\r\n  time_units: TimeUnit[]\r\n  task_status: TaskStatusInterface[]\r\n}\r\n\r\nexport interface AssignedTaskinterface {\r\n  id: number\r\n  task_name: string\r\n  task_code?: string\r\n  estimated_time: number\r\n  time_unit_id: number\r\n  parent?: number\r\n  planned_start_date?: number\r\n  planned_end_date?: number\r\n  actual_start_date?: number\r\n  actual_end_date?: number\r\n  task_status_id: number\r\n  sort_order: number\r\n  task_progress: number\r\n  description?: string\r\n  comment?: string\r\n  can_start: boolean\r\n  can_reschedule: boolean\r\n  can_update_progress: boolean\r\n  client_description?: string\r\n  project_title: string\r\n  project_id: number\r\n}\r\n","import ErrorRoundedIcon from \"@mui/icons-material/ErrorRounded\"\r\nimport { yellow } from \"@mui/material/colors\"\r\nimport Typography from \"@mui/material/Typography\"\r\n\r\nexport interface IErrorProps {\r\n  text: string\r\n}\r\n\r\nfunction ErrorComponent({ text = \"Oops, something went wrong.\" }: IErrorProps) {\r\n  return (\r\n    <>\r\n      <ErrorRoundedIcon style={{ color: yellow[800] }} fontSize=\"large\" />\r\n      <Typography>{text}</Typography>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ErrorComponent\r\n","import { styled, useTheme } from \"@mui/material/styles\"\r\nimport Typography from \"@mui/material/Typography\"\r\nimport {\r\n  BarLoader,\r\n  BeatLoader,\r\n  BounceLoader,\r\n  ClimbingBoxLoader,\r\n  ClipLoader,\r\n  ClockLoader,\r\n  DotLoader,\r\n  FadeLoader,\r\n  HashLoader,\r\n  MoonLoader,\r\n  PuffLoader,\r\n  RingLoader,\r\n  ScaleLoader,\r\n  SyncLoader,\r\n} from \"react-spinners\"\r\n\r\nconst MainContainer = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    color: theme.palette.text.primary,\r\n  }\r\n})\r\n\r\nexport default function Loading({ text = \"Loading..\" }) {\r\n  const theme = useTheme()\r\n\r\n  const loaders = [\r\n    <BounceLoader color={theme.palette.primary.dark} />,\r\n    <ClimbingBoxLoader color={theme.palette.primary.dark} />,\r\n    <BeatLoader color={theme.palette.primary.dark} />,\r\n    <ClockLoader color={theme.palette.primary.dark} />,\r\n    <DotLoader color={theme.palette.primary.dark} />,\r\n    <HashLoader color={theme.palette.primary.dark} />,\r\n    <PuffLoader color={theme.palette.primary.dark} />,\r\n    <RingLoader color={theme.palette.primary.dark} />,\r\n    <SyncLoader color={theme.palette.primary.dark} />,\r\n    <ScaleLoader color={theme.palette.primary.dark} />,\r\n    <FadeLoader color={theme.palette.primary.dark} />,\r\n    <BarLoader color={theme.palette.primary.dark} />,\r\n    <ClipLoader color={theme.palette.primary.dark} />,\r\n    <MoonLoader color={theme.palette.primary.dark} />,\r\n  ]\r\n\r\n  const getRandomIndex = () => {\r\n    return Math.floor(Math.random() * loaders.length)\r\n  }\r\n\r\n  return (\r\n    <MainContainer>\r\n      {loaders[getRandomIndex()]}\r\n      <Typography style={{ marginTop: theme.spacing(1) }} variant=\"h6\">\r\n        {text}\r\n      </Typography>\r\n    </MainContainer>\r\n  )\r\n}\r\n","import Table from \"@mui/material/Table\"\r\nimport TableBody from \"@mui/material/TableBody\"\r\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\"\r\nimport TableContainer from \"@mui/material/TableContainer\"\r\nimport TableHead from \"@mui/material/TableHead\"\r\nimport TableRow from \"@mui/material/TableRow\"\r\nimport Paper from \"@mui/material/Paper\"\r\nimport { styled } from \"@mui/material/styles\"\r\nimport grey from \"@mui/material/colors/grey\"\r\nimport { red, yellow } from \"@mui/material/colors\"\r\n\r\nexport const StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n    color: theme.palette.common.white,\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n  },\r\n}))\r\n\r\nconst getTableRowHover = (theme: \"light\" | \"dark\", isDelayed?: boolean | null) => {\r\n  console.log(isDelayed)\r\n  if(isDelayed == null){\r\n    return theme === \"light\" ? grey[500] : grey[800]\r\n  }\r\n  else if(isDelayed == true){\r\n    return theme === \"light\" ? red[400] : red[700]\r\n  }else{\r\n    return theme === \"light\" ? yellow[400] : yellow[700]\r\n  }\r\n}\r\n\r\nexport const StyledTableRow = styled(TableRow)<{\r\n  cursor?: string\r\n  isSelected?: boolean,\r\n  isDelayed?: boolean | null\r\n}>(({ theme, cursor, isSelected , isDelayed}) => ({\r\n \r\n  \"&:nth-of-type(odd)\": {\r\n    backgroundColor: isSelected\r\n      ? getTableRowHover(theme.palette.mode, isDelayed)\r\n      : isDelayed != null?  getTableRowHover(theme.palette.mode, isDelayed) : theme.palette.action.hover,\r\n  },\r\n  // hide last border\r\n  \"&:last-child td, &:last-child th\": {\r\n    border: 0,\r\n  },\r\n  \"&:hover\": {\r\n    backgroundColor: getTableRowHover(theme.palette.mode, isDelayed),\r\n    cursor: cursor ?? \"pointer\",\r\n  },\r\n  backgroundColor: isSelected\r\n    ? getTableRowHover(theme.palette.mode, isDelayed)\r\n    : isDelayed != null?  getTableRowHover(theme.palette.mode, isDelayed) : undefined,\r\n\r\n}))\r\n\r\nexport default function ({ table, onRowClick }: CustomTableProps) {\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{ minWidth: 650 }} aria-label=\"data table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {table.heads.map((head) => (\r\n              <StyledTableCell key={head}>{head}</StyledTableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {table.rows.map((row) => (\r\n            <StyledTableRow\r\n              key={row.id}\r\n              sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n              onClick={() => onRowClick(row.id)}\r\n            >\r\n              {row.cells.map(\r\n                (\r\n                  cell,\r\n                  index // index to make the cell unique id\r\n                ) => (\r\n                  <StyledTableCell key={index + cell}>{cell}</StyledTableCell>\r\n                )\r\n              )}\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}\r\n\r\nexport interface CustomTableProps {\r\n  table: CustomTableState\r\n  onRowClick(id: number | string): void\r\n}\r\n\r\nexport interface CustomTableRow {\r\n  id: number | string\r\n  cells: any[]\r\n}\r\n\r\nexport interface CustomTableState {\r\n  heads: string[]\r\n  rows: CustomTableRow[]\r\n}\r\n","import Box from \"@mui/material/Box\"\r\nimport IconButton from \"@mui/material/IconButton\"\r\nimport { useTheme } from \"@mui/material/styles\"\r\nimport LastPageIcon from \"@mui/icons-material/LastPage\"\r\nimport FirstPageIcon from \"@mui/icons-material/FirstPage\"\r\nimport KeyboardArrowLeft from \"@mui/icons-material/KeyboardArrowLeft\"\r\nimport KeyboardArrowRight from \"@mui/icons-material/KeyboardArrowRight\"\r\nimport {\r\n  TableContainer,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TablePagination,\r\n  TableHead,\r\n  TextField,\r\n  TableFooter,\r\n  Input,\r\n} from \"@mui/material\"\r\nimport { MouseEventHandler, useCallback, useState } from \"react\"\r\nimport { StyledTableCell, StyledTableRow } from \"./CustomTable\"\r\nimport { isNull } from \"util\"\r\nimport { type } from \"os\"\r\nimport { getDayFromDate } from \"../../utils/formatters\"\r\n\r\n\r\ninterface TablePaginationActionsProps {\r\n  count: number\r\n  page: number\r\n  rowsPerPage: number\r\n  onPageChange: (\r\n    event: React.MouseEvent<HTMLButtonElement> | null,\r\n    newPage: number\r\n  ) => void\r\n}\r\n\r\nfunction TablePaginationActions(props: TablePaginationActionsProps) {\r\n  const theme = useTheme()\r\n  var { count, page, rowsPerPage, onPageChange } = props\r\n  var [inpuPage, setInputPage]= useState(JSON.stringify(page+1))\r\n  \r\n\r\n  const handleFirstPageButtonClick = (\r\n    event: React.MouseEvent<HTMLButtonElement>\r\n  ) => {\r\n    onPageChange(event, 0)\r\n    setInputPage(JSON.stringify(0))\r\n\r\n  }\r\n\r\n  const handleBackButtonClick = ( \r\n    event: React.MouseEvent<HTMLButtonElement>\r\n  ) => {\r\n    onPageChange(event, page - 1)\r\n    setInputPage(JSON.stringify(parseInt(inpuPage)-1))\r\n  }\r\n\r\n  const handleNextButtonClick = (\r\n    event: React.MouseEvent<HTMLButtonElement>\r\n  ) => {\r\n    onPageChange(event, page + 1)\r\n    setInputPage(JSON.stringify(parseInt(inpuPage)+1))\r\n\r\n  }\r\n\r\n  const handleLastPageButtonClick = (\r\n    event: React.MouseEvent<HTMLButtonElement>\r\n  ) => {\r\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1))\r\n    setInputPage(JSON.stringify(Math.max(0, Math.ceil(count / rowsPerPage) - 1)))\r\n\r\n  }\r\n\r\n  // const handlePageInput = (\r\n  //   event: React.MouseEvent<HTMLButtonElement>\r\n  // ) => {\r\n  //   onPageChange(event, parseInt(inpuPage)-1)\r\n    \r\n  // }\r\n\r\n\r\n\r\n  return (\r\n    <Box sx={{ flexShrink: 0, ml: 2.5 }}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <Input value={inpuPage} type=\"string\" disableUnderline style={InputStyles} \r\n        onChange={async (e) =>{\r\n          if(e.target.value == \"0\"){\r\n            setInputPage(\"1\")\r\n            return\r\n          }else{\r\n            setInputPage(e.target.value)\r\n          }\r\n          \r\n \r\n         }}\r\n         onKeyUp={async (e)=>{\r\n          if(e.keyCode == 13){\r\n           \r\n            if(inpuPage == '' ){\r\n              setInputPage(\"1\")\r\n              onPageChange(null, 0)\r\n            \r\n              return\r\n            }\r\n           \r\n            var param = parseInt(inpuPage) - 1\r\n        \r\n            if(Number.isNaN(param)|| param == null){\r\n            \r\n              setInputPage(\"1\")\r\n              \r\n              onPageChange(null,0)\r\n              return\r\n            }\r\n            onPageChange(null,param)\r\n          }\r\n         }}\r\n         onKeyPress={(e)=>{\r\n            const keyCode = e.keyCode\r\n            const excludedKeys = [8, 37, 39, 46]\r\n            if(((keyCode >= 48 && keyCode <= 57) ||\r\n            (keyCode >= 96 && keyCode <= 105) ||\r\n            (excludedKeys.includes(keyCode)))||\r\n          \r\n            String.fromCharCode(e.charCode).match(\r\n              /^[^*|\\\":<>[\\]{}`\\\\()';@&$+-=]+$/g\r\n            )!=null){\r\n              e.preventDefault()\r\n            }\r\n         }}\r\n         />\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? ( \r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n  \r\n    </Box>\r\n\r\n  )\r\n}\r\n\r\nexport interface CustomPaginationTableProps {\r\n  table: CustomPaginationTableState\r\n  onRowClick(id: number | string): void\r\n  cursor?: string\r\n  selectedRowId?: number | string\r\n}\r\n\r\nexport interface CustomPaginationTableRow {\r\n  id: number | string\r\n  cells: any[]\r\n}\r\n\r\nexport interface CustomPaginationTableState {\r\n  heads: string[]\r\n  customHeaders?: { title: any; id: string }[]\r\n  rows: CustomPaginationTableRow[]\r\n}\r\n\r\n\r\ntype SortOrder = \"ascn\" | \"desc\";\r\n\r\n\r\n\r\nfunction SortButton({\r\n  sortOrder,\r\n  columnKey,\r\n  sortKey,\r\n  onClick,\r\n}: {\r\n  sortOrder: SortOrder;\r\n  columnKey: any;\r\n  sortKey: any;\r\n  onClick: MouseEventHandler<HTMLButtonElement>;\r\n}) {\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      className={`${\r\n        sortKey === columnKey && sortOrder === \"desc\"\r\n          ? \"sort-button sort-reverse\"\r\n          : \"sort-button\"\r\n      }`}\r\n    >\r\n      ▲\r\n    </button>\r\n  );\r\n}\r\n\r\nfunction specififcDateFormat(date:string) {\r\n let parts= date.split('/')\r\n let month = parseInt(parts[1])-1\r\n let day = parseInt(parts[0])\r\n let year = parseInt(parts[2])\r\n\r\n\r\n let newDate = new Date(year, month, day)\r\n\r\n  return newDate;\r\n}\r\n\r\nexport default function CustomPaginationTable({\r\n  table,\r\n  onRowClick,\r\n  cursor,\r\n  selectedRowId,\r\n}: CustomPaginationTableProps) {\r\n\r\n\r\n  const [page, setPage] = useState(0)\r\n  const [rowsPerPage, setRowsPerPage] = useState(25) // TODO:\r\n\r\n  const [sortKey, setSortKey] = useState<any>(\"id\");\r\n  const [sortOrder, setSortOrder] = useState<SortOrder>(\"ascn\");\r\n\r\n  // Avoid a layout jump when reaching the last page with empty rows.\r\n  const emptyRows =\r\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - table.rows.length) : 0\r\n\r\n  const handleChangePage = (\r\n    event: React.MouseEvent<HTMLButtonElement> | null,\r\n    newPage: number\r\n  ) => {\r\n    setPage(newPage)\r\n  }\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10))\r\n    setPage(0)\r\n  }\r\n\r\n  const sortedData = useCallback(\r\n    ({row,}:{row: CustomPaginationTableRow;}) => sortData({ row: row, sortKey, reverse: sortOrder === \"desc\" }),\r\n    [table.rows, sortKey, sortOrder]\r\n  );\r\n\r\n  function changeSort(key: any) {\r\n    setSortOrder(sortOrder === \"ascn\" ? \"desc\" : \"ascn\");\r\n\r\n    setSortKey(key);\r\n  }\r\n\r\n  function sortData({\r\n    row,\r\n    sortKey,\r\n    reverse,\r\n  }: {\r\n    row: CustomPaginationTableRow;\r\n    sortKey: any;\r\n    reverse: boolean;\r\n  }) {\r\n    if (!sortKey) return row.cells;\r\n  \r\n    const sortedData =  row.cells.sort((a, b) => {\r\n      return a[sortKey] > b[sortKey] ? 1 : -1;\r\n    });\r\n  \r\n    if (reverse) {\r\n      return sortedData.reverse();\r\n    }\r\n  \r\n    return sortedData;\r\n  }\r\n\r\nfunction isDelayed(row:any) {\r\n  if(row.cells[11] != \"Complete\"){\r\n    if(new Date().getTime() > specififcDateFormat(row.cells[5]).getTime()){\r\n      if(new Date().getTime() > specififcDateFormat(row.cells[6]).getTime()){\r\n        return true;\r\n      }else{\r\n        return false\r\n      }\r\n    }else{\r\n     return null\r\n    }\r\n  }else{\r\n    return null\r\n  }\r\n  \r\n}\r\n\r\n\r\n  console.log(\"TABLE\", table)\r\n  console.log(\"DATE CHECKING\", new Date().getDate() < new Date(\"5/10/2022\").getDate())\r\n  console.log(\"DATE STRING\",  new Date(\"5/1/2022\"), new Date())\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n      }}\r\n      sx={{ width: \"100%\", overflow: \"hidden\" }}\r\n    >\r\n      <TableContainer style={{ flex: \"1\" }}>\r\n        <Table\r\n          stickyHeader\r\n          sx={{ minWidth: 500 }}\r\n          aria-label=\"custom pagination table\"\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              {table.customHeaders\r\n                ? table.customHeaders.map((head) => (\r\n                    <StyledTableCell key={head.id}>\r\n                      {head.title}\r\n                    </StyledTableCell>\r\n                    \r\n                  ))\r\n                : table.heads.map((head) => (\r\n                    <StyledTableCell key={head}>{head}</StyledTableCell>\r\n                  ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {(rowsPerPage > 0\r\n              ? table.rows.slice(\r\n                  page * rowsPerPage,\r\n                  page * rowsPerPage + rowsPerPage\r\n                )\r\n              : table.rows\r\n            ).map((row) => (\r\n              //const today = getDayFromDate(new Date()).split(\"/\")\r\n             // const a = getDayFromDate(new Date(row.cells[18])).split(\"/\")\r\n              <StyledTableRow\r\n                isSelected={selectedRowId === row.id}\r\n                cursor={cursor}\r\n                onClick={() => onRowClick(row.id)}\r\n                // isDelayed={row.cells[11] != \"Complete\"? new Date().getTime() > specififcDateFormat(row.cells[5]).getTime()? new Date().getTime()>specififcDateFormat(row.cells[6]).getTime()? false : true : false :null}\r\n               isDelayed={isDelayed(row)}\r\n                key={row.id}\r\n              >\r\n                { row.cells.map( \r\n                  ( \r\n                    cell, \r\n                    index // index to make the cell unique id\r\n                  ) => (\r\n                    <StyledTableCell key={index + cell}>{cell}</StyledTableCell>\r\n                  )\r\n                )}\r\n              </StyledTableRow>\r\n            ))}\r\n            {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 53 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n   \r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10, 25]} // { label: \"All\", value: -1 }]}\r\n        colSpan={3}\r\n        count={table.rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        SelectProps={{\r\n          inputProps: {\r\n            \"aria-label\": \"rows per page\",\r\n          },\r\n          native: true,\r\n        }}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n        ActionsComponent={TablePaginationActions}\r\n      />\r\n  \r\n  \r\n\r\n      \r\n    </Paper>\r\n  )\r\n}\r\n\r\n\r\n   \r\nconst InputStyles = {\r\n  width: \"20px\",\r\n  backgroundColor: \"transparent\",\r\n  borderColor: \"transparent\",\r\n  borderBottom: \"0px !important\",\r\n  border: \"0px\",\r\n  outline: \"0px\",\r\n  TextAlign: \"center\",\r\n  color: \"#0036EC\",\r\n  alignItems: 'center',\r\n}\r\n","export default __webpack_public_path__ + \"static/media/empty_temp_1.93444e21.png\";","import moment from \"moment\"\r\n\r\nexport function formatCurrency(amount: number, currency: string) {\r\n  const formatter = new Intl.NumberFormat(\"en-US\", {\r\n    style: \"currency\",\r\n    currency,\r\n  })\r\n\r\n  return formatter.format(amount)\r\n}\r\n\r\nexport function getDayFromDate(date: Date) {\r\n  const momnt = moment(date)\r\n\r\n  return momnt.format(\"D/M/YYYY\")\r\n}\r\n\r\n\r\nexport function getTableProjectTitleFormat(title: string): string{\r\nconst parts = title.split(\"#\")\r\n\r\nlet order = parts[0]\r\nvar idFormat: string;\r\nlet id = parseInt(parts[1])\r\n\r\nif (Number.isNaN(id.valueOf()) || id == undefined || id== null) {\r\n  return title\r\n \r\n}else{\r\n  const digits: Number = id != undefined? id.valueOf() / 10 : 0\r\n  if(digits == 0 ){\r\n    return title\r\n  }\r\n  else if(digits <= 10){\r\n    idFormat = `${order}#00000${id}`\r\n    return idFormat;\r\n  }\r\n  else if(digits <= 100){\r\n    idFormat = `${order}#0000${id}`\r\n    return idFormat;\r\n  }\r\n  else if(digits <= 1000){\r\n    idFormat = `${order}#000${id}`\r\n    return idFormat;\r\n  }\r\n  else if(digits <= 10000){\r\n    idFormat = `${order}#00${id}`\r\n    return idFormat;\r\n  }\r\n  else if(digits <= 100000){\r\n    idFormat = `${order}#0${id}`\r\n    return idFormat;\r\n  }\r\n else{\r\n    idFormat = `${order}#${id}`\r\n    return idFormat;\r\n  }\r\n}\r\n}\r\n\r\nexport function getProjectIdFormat1(id:Number | undefined) {\r\n  var idFormat: string;\r\n  if(id != undefined){\r\n    const digits: Number = id != undefined? id.valueOf() / 10 : 0\r\n    if(digits == 0 ){\r\n      return undefined\r\n    }\r\n    else if(digits <= 10){\r\n      idFormat = `#00000${id}`\r\n      return idFormat;\r\n    }\r\n    else if(digits <= 100){\r\n      idFormat = `#0000${id}`\r\n      return idFormat;\r\n    }\r\n    else if(digits <= 1000){\r\n      idFormat = `#000${id}`\r\n      return idFormat;\r\n    }\r\n    else if(digits <= 10000){\r\n      idFormat = `#00${id}`\r\n      return idFormat;\r\n    }\r\n    else if(digits <= 100000){\r\n      idFormat = `#0${id}`\r\n      return idFormat;\r\n    }\r\n   else{\r\n      idFormat = `#${id}`\r\n      return idFormat;\r\n    }\r\n  \r\n  }\r\n//  const idFormat: string = `#${id}`\r\n\r\n\r\n\r\n\r\n  \r\n}\r\n\r\n\r\nexport function getProjectIdFormat(number: number | undefined) {\r\n\r\n  var my_string = '' + number;\r\n  while (my_string.length < 6) {\r\n      my_string = '0' + my_string;\r\n  }\r\n\r\n  return `#${my_string}`;\r\n\r\n}","import { AssignedTaskinterface } from \"../api/AssignedTasksApi\"\r\nimport { ProjectTaskInterface, TaskStatusInterface } from \"../api/ProjectApi\"\r\nimport { AssignedTaskPreviewInterface } from \"../api/ProjectPreviewApi\"\r\nimport { ContextTask } from \"../contexts/EditTaskScreenContext\"\r\n\r\nexport function getLargestNum(arr: number[]) {\r\n  if (arr.length === 0) return 0\r\n  let largest = arr[0]\r\n\r\n  for (let i = 0; i < arr.length; i++) {\r\n    if (largest < arr[i]) {\r\n      largest = arr[i]\r\n    }\r\n  }\r\n  return largest\r\n}\r\n\r\nexport function getNextSortOrder(arr: number[]) {\r\n  return getLargestNum(arr) + 1\r\n}\r\n\r\nexport function sortProjectTasks(tasks: ContextTask[]) {\r\n  tasks = tasks.sort((a, b) => a.sort_order - b.sort_order)\r\n  tasks.forEach((t) => sortProjectTasks(t.children))\r\n}\r\n\r\nexport function sortProjectTasksWithReturn(tasks: ContextTask[]) {\r\n  tasks = tasks.sort((a, b) => a.sort_order - b.sort_order)\r\n}\r\n\r\nexport function isTaskFirstElement(task: ContextTask, parent: ContextTask) {\r\n  let isFirst = true\r\n  if (parent.children.includes(task)) {\r\n    for (let e of parent.children) {\r\n      if (e.sort_order < task.sort_order) {\r\n        isFirst = false\r\n        break\r\n      }\r\n    }\r\n  } else {\r\n    isFirst = false\r\n  }\r\n  return isFirst\r\n}\r\n\r\nexport function isTaskLastElement(task: ContextTask, parent: ContextTask) {\r\n  let isLast = true\r\n  if (parent.children.includes(task)) {\r\n    for (let e of parent.children) {\r\n      if (e.sort_order > task.sort_order) {\r\n        isLast = false\r\n        break\r\n      }\r\n    }\r\n  } else {\r\n    isLast = false\r\n  }\r\n  return isLast\r\n}\r\n\r\nexport function isTaskInProgress(\r\n  task: AssignedTaskinterface | AssignedTaskPreviewInterface,\r\n  status: TaskStatusInterface[]\r\n) {\r\n  const start = status.find((e) => e.is_start)\r\n  const end = status.find((e) => e.is_final)\r\n\r\n  if (start && end) {\r\n    return task.task_status_id !== start.id || task.task_status_id !== end.id\r\n  }\r\n\r\n  return false\r\n}\r\n\r\nexport function isTaskInPending(\r\n  task: AssignedTaskinterface | AssignedTaskPreviewInterface,\r\n  status: TaskStatusInterface[]\r\n) {\r\n  const start = status.find((e) => e.is_start)\r\n\r\n  if (start) {\r\n    return task.task_status_id === start.id\r\n  }\r\n\r\n  return false\r\n}\r\n\r\nexport function isTaskComplete(\r\n  task: AssignedTaskinterface | AssignedTaskPreviewInterface,\r\n  status: TaskStatusInterface[]\r\n) {\r\n  const end = status.find((e) => e.is_final)\r\n\r\n  if (end) {\r\n    return task.task_status_id === end.id\r\n  }\r\n\r\n  return false\r\n}\r\n\r\nexport function isTaskCompleteOrPending(\r\n  task: AssignedTaskinterface | AssignedTaskPreviewInterface,\r\n  status: TaskStatusInterface[]\r\n) {\r\n  return isTaskInPending(task, status) || isTaskComplete(task, status)\r\n}\r\n","// Models of the Backend tables\r\n\r\nexport interface Property {\r\n    id: number\r\n    description: string\r\n    type: number\r\n    is_editable: boolean\r\n    is_required: boolean\r\n    input_type: number\r\n    sort_order: number\r\n}\r\n\r\nexport enum PropertyInputType {\r\n    Text = 1,\r\n    Password = 2,\r\n    TextArea = 3,\r\n}\r\n\r\nexport namespace PropertyInputType {\r\n    export function parse(type: number) {\r\n        switch (type) {\r\n            case 1:\r\n                return PropertyInputType.Text\r\n            case 2:\r\n                return PropertyInputType.Password\r\n            case 3:\r\n                return PropertyInputType.TextArea\r\n            default:\r\n                return PropertyInputType.Text\r\n        }\r\n    }\r\n}\r\n\r\nexport interface Criteria {\r\n    criteria_id: number\r\n    description: string\r\n    criteria_type: number\r\n    is_editable: boolean\r\n    is_required: boolean\r\n    sort_order: number\r\n    criteria_values: CriteriaValue[]\r\n}\r\n\r\nexport interface CriteriaValue {\r\n    criteria_value_id: number\r\n    criteria_id: number\r\n    description: string\r\n}\r\n\r\nexport enum CriteriaType {\r\n    Dropdown = 1,\r\n}\r\n\r\nexport namespace CriteriaType {\r\n    export function parse(type: number) {\r\n        switch (type) {\r\n            case 1:\r\n                return CriteriaType.Dropdown\r\n\r\n            default:\r\n                return CriteriaType.Dropdown\r\n        }\r\n    }\r\n}\r\n\r\nexport interface Role {\r\n    role_id: number\r\n    role_name: string\r\n}\r\n","import { PropertyInputType, CriteriaType } from \"../../api/ApiModels\"\r\n\r\nexport type formVariants = \"standard\" | \"filled\" | \"outlined\"\r\n\r\nexport enum FormElementType {\r\n  Dropdown = 1,\r\n  Text = 2,\r\n  Password = 3,\r\n  RadioGroup = 4,\r\n  Checkbox = 5,\r\n  TextArea = 6,\r\n  Number = 7,\r\n  Date = 8,\r\n}\r\n\r\nexport namespace FormElementType {\r\n  export function fromPropertyInputType(type: PropertyInputType) {\r\n    if (type === PropertyInputType.Text) {\r\n      return FormElementType.Text\r\n    } else if (type === PropertyInputType.Password) {\r\n      return FormElementType.Password\r\n    } else if (type === PropertyInputType.TextArea) {\r\n      return FormElementType.TextArea\r\n    }\r\n  }\r\n\r\n  export function fromCriteriaType(type: CriteriaType) {\r\n    if (type === CriteriaType.Dropdown) {\r\n      return FormElementType.Dropdown\r\n    }\r\n  }\r\n}\r\n\r\nexport interface DynamicFormElement {\r\n  db_id: number | string\r\n  id: string\r\n  type: FormElementType\r\n  required: boolean\r\n  editable: boolean\r\n  label: string\r\n  sortOrder?: number\r\n  formFieldModel: FormFieldModelType\r\n  fullWidth?: boolean\r\n  variant?: formVariants\r\n  values?: DynamicSelectElement[]\r\n  initialValue?: string\r\n  removeWhiteSpaces?: boolean\r\n}\r\n\r\nexport interface DynamicSelectElement {\r\n  id: string\r\n  description: string\r\n}\r\n\r\nexport interface DynamicFormState {\r\n  element: DynamicFormElement\r\n  value: string\r\n  error: boolean\r\n}\r\n\r\n// export interface DynamicFormSubmit {\r\n//   id: string\r\n//   value: string\r\n// }\r\n\r\n/**\r\n * Type of the field on the BE.\r\n * Main for main colmns, property and criteria\r\n */\r\nexport enum FormFieldModelType {\r\n  Main,\r\n  Property,\r\n  Criteria,\r\n  Role,\r\n  Address,\r\n  Currency,\r\n  Display, // only for display purposes\r\n}\r\n","import TextField from \"@mui/material/TextField\"\r\nimport { Box } from \"@mui/system\"\r\nimport { useEffect, useState } from \"react\"\r\nimport {\r\n  DynamicSelectElement,\r\n  FormElementType,\r\n  formVariants,\r\n} from \"./FormModels\"\r\nimport { styled } from \"@mui/material/styles\"\r\nimport { green, red } from \"@mui/material/colors\"\r\nimport Select from \"@mui/material/Select\"\r\nimport FormControl from \"@mui/material/FormControl\"\r\nimport InputLabel from \"@mui/material/InputLabel\"\r\nimport MenuItem from \"@mui/material/MenuItem\"\r\nimport Button from \"@mui/material/Button\"\r\n\r\n// Styled\r\nconst MainContainer = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-start\",\r\n    margin: theme.spacing(1),\r\n    justifyContent: \"flexs-start\",\r\n    flex: \"1\",\r\n  }\r\n})\r\nconst ButtonRow = styled(\"div\")(() => {\r\n  return {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  }\r\n})\r\n\r\nexport interface UpdatableInputFieldOGProps {\r\n  value: string\r\n  update: ((value: string) => Promise<void>) | ((value: string) => void)\r\n  type: FormElementType\r\n  editable: boolean\r\n  label: string\r\n  variant?: formVariants\r\n  values?: DynamicSelectElement[]\r\n  initialValue?: string\r\n  maxLength?: number\r\n  rows?: number\r\n}\r\n\r\nexport default function UpdatableInputFieldOG(\r\n  props: UpdatableInputFieldOGProps\r\n) {\r\n  const [state, setState] = useState(props.value)\r\n  const [error, setError] = useState(false)\r\n  const [didChange, setDidChange] = useState(false)\r\n\r\n  // use effect\r\n  useEffect(() => {\r\n    setState(props.value)\r\n    setDidChange(false)\r\n    setError(false)\r\n  }, [props])\r\n\r\n  const updateState = (value: string) => {\r\n    setDidChange(true)\r\n    setState(value)\r\n  }\r\n\r\n  const submit = async () => {\r\n    if (state.length < 1) {\r\n      setError(true)\r\n    } else {\r\n      setError(false)\r\n      await props.update(state)\r\n      setDidChange(false)\r\n    }\r\n  }\r\n\r\n  const cancel = () => {\r\n    setState(props.value)\r\n    setDidChange(false)\r\n  }\r\n\r\n  return (\r\n    <MainContainer>\r\n      {(props.type === FormElementType.Text ||\r\n        props.type === FormElementType.Number ||\r\n        props.type === FormElementType.TextArea) && (\r\n        <TextField\r\n          disabled={!props.editable}\r\n          variant={props.variant ?? \"outlined\"}\r\n          required={true}\r\n          type={props.type === FormElementType.Number ? \"number\" : \"text\"}\r\n          value={state}\r\n          label={props.label}\r\n          inputProps={{ maxLength: props.maxLength }}\r\n          multiline={props.type === FormElementType.TextArea}\r\n          rows={props.type === FormElementType.TextArea ? props.rows ?? 3 : 1}\r\n          color=\"secondary\"\r\n          fullWidth\r\n          error={error}\r\n          onChange={(e) => updateState(e.target.value)}\r\n          onInput={\r\n            props.type === FormElementType.Number\r\n              ? (e) => {\r\n                  ;(e.target as HTMLInputElement).value = Math.max(\r\n                    0,\r\n                    parseInt((e.target as HTMLInputElement).value)\r\n                  )\r\n                    .toString()\r\n                    .slice(0, props.maxLength ?? 120)\r\n                }\r\n              : undefined\r\n          }\r\n        />\r\n      )}\r\n\r\n      {props.type === FormElementType.Dropdown && (\r\n        <Box sx={{ minWidth: 200 }}>\r\n          <FormControl fullWidth>\r\n            <InputLabel id={props.label + \"-label\"}>{props.label}</InputLabel>\r\n            <Select\r\n              fullWidth\r\n              disabled={!props.editable}\r\n              error={error}\r\n              labelId={props.label + \"-label\"}\r\n              value={state}\r\n              label={props.label}\r\n              onChange={(e) => updateState(e.target.value)}\r\n            >\r\n              {props.values!.map((value) => {\r\n                return (\r\n                  <MenuItem key={value.id} value={value.id}>\r\n                    {value.description}\r\n                  </MenuItem>\r\n                )\r\n              })}\r\n            </Select>\r\n          </FormControl>\r\n        </Box>\r\n      )}\r\n\r\n      {didChange && (\r\n        <ButtonRow>\r\n          <Button style={{ color: red[500] }} onClick={cancel}>\r\n            Cancel\r\n          </Button>\r\n          <Button style={{ color: green[500] }} onClick={submit}>\r\n            Update\r\n          </Button>\r\n        </ButtonRow>\r\n      )}\r\n    </MainContainer>\r\n  )\r\n}\r\n","import Button from \"@mui/material/Button\"\r\nimport Dialog from \"@mui/material/Dialog\"\r\nimport DialogActions from \"@mui/material/DialogActions\"\r\nimport DialogContent from \"@mui/material/DialogContent\"\r\nimport DialogContentText from \"@mui/material/DialogContentText\"\r\nimport DialogTitle from \"@mui/material/DialogTitle\"\r\nimport { useState } from \"react\"\r\nimport { FormElementType } from \"../form/FormModels\"\r\nimport UpdatableInputFieldOG from \"../form/UpdatableInputFieldOG\"\r\n\r\nexport interface AddCommentDialogProps {\r\n  isOpen: boolean\r\n  onClose(): void\r\n  title: string\r\n  submit: (value: string) => Promise<void>\r\n  comment: string\r\n}\r\n\r\nexport default function AddCommentDialog(props: AddCommentDialogProps) {\r\n  return (\r\n    <Dialog\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n      open={props.isOpen}\r\n      onClose={props.onClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          <UpdatableInputFieldOG\r\n            editable\r\n            label=\"Comment\"\r\n            type={FormElementType.TextArea}\r\n            value={props.comment}\r\n            maxLength={470}\r\n            rows={5}\r\n            variant=\"outlined\"\r\n            initialValue={props.comment}\r\n            update={async (value) => props.submit(value)}\r\n          />\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.onClose}>Dismiss</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n","import { TextField, Typography } from \"@mui/material\"\r\nimport Button from \"@mui/material/Button\"\r\nimport Dialog from \"@mui/material/Dialog\"\r\nimport DialogActions from \"@mui/material/DialogActions\"\r\nimport DialogContent from \"@mui/material/DialogContent\"\r\nimport DialogContentText from \"@mui/material/DialogContentText\"\r\nimport DialogTitle from \"@mui/material/DialogTitle\"\r\nimport { useEffect, useState } from \"react\"\r\n\r\nexport interface AddPRogressDialogProps {\r\n  isOpen: boolean\r\n  onClose(): void\r\n  title: string\r\n  submit: (value: number) => Promise<void>\r\n  progress: number\r\n}\r\n\r\nexport default function AddPRogressDialog(props: AddPRogressDialogProps) {\r\n  const [progress, setProgress] = useState(props.progress)\r\n  const [error, setError] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setProgress(props.progress)\r\n  }, [props])\r\n\r\n  const submit = async () => {\r\n    if (validate()) {\r\n      await props.submit(progress)\r\n    }\r\n  }\r\n\r\n  function validate(): boolean {\r\n    let valid = true\r\n\r\n    if (progress === props.progress || (progress < 0 && progress > 100)) {\r\n      valid = false\r\n      setError(true)\r\n    } else {\r\n      setError(false)\r\n    }\r\n\r\n    return valid\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n      open={props.isOpen}\r\n      onClose={props.onClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n          id=\"alert-dialog-description\"\r\n        >\r\n          <TextField\r\n            style={{ margin: \"1rem\" }}\r\n            label=\"Progress\"\r\n            required\r\n            error={error}\r\n            type=\"number\"\r\n            value={progress.toString()}\r\n            onChange={(value) => {\r\n              const newProgress = Number(value.target.value)\r\n              if (\r\n                !Number.isNaN(newProgress) &&\r\n                newProgress >= 0 &&\r\n                newProgress <= 100\r\n              ) {\r\n                setProgress(Number(value.target.value))\r\n              }\r\n            }}\r\n          />\r\n          <Typography variant=\"h4\">%</Typography>\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button color=\"warning\" onClick={props.onClose}>\r\n          Dismiss\r\n        </Button>\r\n        <Button color=\"success\" onClick={async () => await submit()}>\r\n          Submit\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n","import Button from \"@mui/material/Button\"\r\nimport Dialog from \"@mui/material/Dialog\"\r\nimport DialogActions from \"@mui/material/DialogActions\"\r\nimport DialogContent from \"@mui/material/DialogContent\"\r\nimport DialogContentText from \"@mui/material/DialogContentText\"\r\nimport DialogTitle from \"@mui/material/DialogTitle\"\r\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\"\r\nimport { LocalizationProvider, DatePicker } from \"@mui/lab\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { TextField } from \"@mui/material\"\r\n//import frLocale from \"date-fns/locale/fr\"\r\nimport frLocale from \"date-fns/locale/en-CA\"\r\n\r\nexport interface ScheduleTaskDialogProps {\r\n  isOpen: boolean\r\n  onClose(): void\r\n  title: string\r\n  submit: (start: number | null, end: number | null) => Promise<void>\r\n  start: number\r\n  end: number\r\n  isStartEditable: boolean\r\n  isEndEditable: boolean\r\n}\r\n\r\nexport default function ScheduleTaskDialog(props: ScheduleTaskDialogProps) {\r\n  const [presetStart, setPresetStart] = useState<number>(props.start)\r\n  const [presetEnd, setPresetEnd] = useState<number>(props.end)\r\n\r\n  const [start, setStart] = useState<number | null>(null)\r\n  const [end, setEnd] = useState<number | null>(null)\r\n\r\n  useEffect(() => {\r\n    setPresetStart(props.start)\r\n    setPresetEnd(props.end)\r\n  }, [props.start, props.end])\r\n\r\n  function getStartInputValue() {\r\n    if (start) {\r\n      return new Date(start)\r\n    } else {\r\n      return new Date(presetStart)\r\n    }\r\n  }\r\n\r\n  function getEndInputValue() {\r\n    if (end) {\r\n      return new Date(end)\r\n    } else {\r\n      return new Date(presetEnd)\r\n    }\r\n  }\r\n\r\n  function clear() {\r\n    setStart(null)\r\n    setEnd(null)\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n      open={props.isOpen}\r\n      onClose={() => {\r\n        props.onClose()\r\n        clear()\r\n      }}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText\r\n          id=\"alert-dialog-description\"\r\n          style={{\r\n            padding: \"1rem\",\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <LocalizationProvider dateAdapter={AdapterDateFns} locale={frLocale}>\r\n            <DatePicker\r\n              label=\"Planned Start Date\"\r\n              disabled={!props.isStartEditable}\r\n              openTo=\"day\"\r\n              views={[\"year\", \"month\", \"day\"]}\r\n              value={getStartInputValue()}\r\n              onChange={(newValue) => {\r\n                if (newValue) {\r\n                  setStart(newValue.getTime())\r\n                }\r\n              }}\r\n              renderInput={(params) => <TextField {...params} />}\r\n            />\r\n\r\n            <DatePicker\r\n              label=\"Planned End Date\"\r\n              openTo=\"day\"\r\n              disabled={!props.isEndEditable}\r\n              views={[\"year\", \"month\", \"day\"]}\r\n              value={getEndInputValue()}\r\n              onChange={(newValue) => {\r\n                if (newValue) {\r\n                  setEnd(newValue.getTime())\r\n                }\r\n              }}\r\n              renderInput={(params) => <TextField {...params} />}\r\n            />\r\n          </LocalizationProvider>\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          onClick={() => {\r\n            props.onClose()\r\n            clear()\r\n          }}\r\n          color=\"warning\"\r\n        >\r\n          Dismiss\r\n        </Button>\r\n        <Button\r\n          disabled={!start && !end}\r\n          onClick={async () => {\r\n            await props.submit(start, end)\r\n          }}\r\n          color=\"success\"\r\n        >\r\n          Submit\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n","import * as React from \"react\"\r\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\"\r\nimport grey from \"@mui/material/colors/grey\"\r\n\r\nexport const ThemeContext = React.createContext({ toggleColorMode: () => {} })\r\n\r\nexport function getDisabledIconButton(theme: \"light\" | \"dark\") {\r\n  return theme === \"light\" ? grey[400] : grey[800]\r\n}\r\n\r\nexport default function ThemeContextProvider(props: { children: JSX.Element }) {\r\n  const [mode, setMode] = React.useState<\"light\" | \"dark\">(\r\n    () => (localStorage.getItem(\"theme\") as \"light\" | \"dark\") ?? \"light\"\r\n  )\r\n  const colorMode = React.useMemo(\r\n    () => ({\r\n      toggleColorMode: () => {\r\n        localStorage.setItem(\"theme\", mode === \"light\" ? \"dark\" : \"light\")\r\n        setMode((prevMode) => (prevMode === \"light\" ? \"dark\" : \"light\"))\r\n      },\r\n    }),\r\n    []\r\n  )\r\n\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createTheme({\r\n        palette: {\r\n          mode,\r\n          ...(mode === \"light\" ? getLightPalette() : getDarkPalette()),\r\n        },\r\n        shape: {\r\n          borderRadius: \"4px\",\r\n        },\r\n        typography: {\r\n          fontFamily: \"Poppins, sans-serif\",\r\n        },\r\n      }),\r\n    [mode]\r\n  )\r\n\r\n  function getLightPalette() {\r\n    return {\r\n      primary: {\r\n        // indigo 300\r\n        main: \"#7986cb\",\r\n        light: \"#aab6fe\",\r\n        dark: \"#49599a\",\r\n      },\r\n      secondary: {\r\n        main: \"#17516b\",\r\n        light: \"#4b7d99\",\r\n        dark: \"#002940\",\r\n      },\r\n      background: {\r\n        paper: \"#f5f5f5\",\r\n      },\r\n    }\r\n  }\r\n  function getDarkPalette() {\r\n    return {\r\n      // indigo 400\r\n      primary: {\r\n        main: \"#5c6bc0\",\r\n        light: \"#8e99f3\",\r\n        dark: \"#26418f\",\r\n      },\r\n      secondary: {\r\n        main: \"#17516b\",\r\n        light: \"#4b7d99\",\r\n        dark: \"#002940\",\r\n      },\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Provider value={colorMode}>\r\n      <ThemeProvider theme={theme}>{props.children}</ThemeProvider>\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n","import * as React from \"react\"\r\nimport Popover from \"@mui/material/Popover\"\r\nimport Typography from \"@mui/material/Typography\"\r\n\r\nexport interface HoverPopoverProps {\r\n  hoverText: string\r\n  children: JSX.Element\r\n}\r\n\r\nexport default function HoverPopover(props: HoverPopoverProps) {\r\n  const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(null)\r\n\r\n  const handlePopoverOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget)\r\n  }\r\n\r\n  const handlePopoverClose = () => {\r\n    setAnchorEl(null)\r\n  }\r\n\r\n  const open = Boolean(anchorEl)\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        aria-owns={open ? \"mouse-over-popover\" : undefined}\r\n        aria-haspopup=\"true\"\r\n        onMouseEnter={handlePopoverOpen}\r\n        onMouseLeave={handlePopoverClose}\r\n      >\r\n        {props.children}\r\n      </div>\r\n\r\n      <Popover\r\n        id=\"mouse-over-popover\"\r\n        sx={{\r\n          pointerEvents: \"none\",\r\n        }}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"left\",\r\n        }}\r\n        onClose={handlePopoverClose}\r\n        disableRestoreFocus\r\n      >\r\n        <Typography sx={{ p: 1 }}>{props.hoverText}</Typography>\r\n      </Popover>\r\n    </div>\r\n  )\r\n}\r\n","import { styled } from \"@mui/material/styles\"\r\nimport { useContext, useEffect, useState } from \"react\"\r\nimport { api, HttpMethods } from \"../api/ApiControllers\"\r\nimport {\r\n  AssignedTaskinterface,\r\n  AssignedTaskResponseInterface,\r\n  checkIfFinishedProjectUrl,\r\n  getAssignedTasksUrl,\r\n  getDownloadAssignedURL,\r\n  getEndTaskUrl,\r\n  getStartTaskUrl,\r\n  rescheduleUrl,\r\n  updateCommentUrl,\r\n  updateProgressUrl,\r\n} from \"../api/AssignedTasksApi\"\r\nimport { TaskStatusInterface } from \"../api/ProjectApi\"\r\nimport { TimeUnit } from \"../api/TaskTemplateApi\"\r\nimport { AuthContext } from \"../contexts/AuthContext\"\r\nimport ErrorComponent from \"./ErrorComponent\"\r\nimport Loading from \"./Loading\"\r\nimport CustomPaginationTable, {\r\n  CustomPaginationTableRow,\r\n  CustomPaginationTableState,\r\n} from \"./reusable/CustomPaginationTable\"\r\nimport empty from \"../images/empty_temp_1.png\"\r\nimport { Icon, IconButton, Typography, useTheme } from \"@mui/material\"\r\nimport { getDayFromDate } from \"../utils/formatters\"\r\nimport PlayArrowRoundedIcon from \"@mui/icons-material/PlayArrowRounded\"\r\nimport StopRoundedIcon from \"@mui/icons-material/StopRounded\"\r\nimport InsertInvitationRoundedIcon from \"@mui/icons-material/InsertInvitationRounded\"\r\nimport {\r\n  blue,\r\n  cyan,\r\n  deepOrange,\r\n  deepPurple,\r\n  green,\r\n  grey,\r\n  orange,\r\n  purple,\r\n  red,\r\n} from \"@mui/material/colors\"\r\nimport { isTaskCompleteOrPending, isTaskInPending } from \"../utils/projectUtils\"\r\nimport CommentRoundedIcon from \"@mui/icons-material/CommentRounded\"\r\nimport AddCommentDialog from \"./dialogs/AddCommentDialog\"\r\nimport AddPRogressDialog from \"./dialogs/AddProgressDialog\"\r\nimport ScheduleTaskDialog from \"./dialogs/ScheduleTaskDialog\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport OpenInFullRoundedIcon from \"@mui/icons-material/OpenInFullRounded\"\r\nimport PercentRoundedIcon from \"@mui/icons-material/PercentRounded\"\r\nimport { getDisabledIconButton } from \"../contexts/ThemeContext\"\r\nimport Checkbox from \"@mui/material/Checkbox\"\r\nimport PrintIcon from \"@mui/icons-material/Print\"\r\nimport HoverPopover from \"./reusable/HoverPopover\"\r\nimport DoneIcon from '@mui/icons-material/Done';\r\n\r\nconst MainContainer = styled(\"div\")<{ loaded: boolean }>(\r\n  ({ theme, loaded }) => {\r\n    return {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: loaded ? \"flex-start\" : \"center\",\r\n      justifyContent: loaded ? \"flex-start\" : \"center\",\r\n      height: \"100%\",\r\n    }\r\n  }\r\n)\r\n\r\nexport default function AssignedTasksDashboard() {\r\n  const { user } = useContext(AuthContext)!\r\n  const navigate = useNavigate()\r\n  const theme = useTheme()\r\n\r\n  const [tasks, setTasks] = useState<AssignedTaskinterface[]>([])\r\n  const [status, setStatus] = useState<TaskStatusInterface[]>([])\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const [checkedTasks, setCheckedTasks] = useState<number[]>([])\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(\"Request To\", getAssignedTasksUrl)\r\n    setIsLoading(true)\r\n    api<AssignedTaskResponseInterface>(\r\n      getAssignedTasksUrl,\r\n      HttpMethods.Get,\r\n      null,\r\n      { Authorization: `Bearer ${user?.tokenStr}` },\r\n      \"Something went wrong\",\r\n      true\r\n    )\r\n      .then((data) => {\r\n        console.log(\"response\",data! )\r\n        setIsLoading(false)\r\n        setTasks(data!.tasks)\r\n      \r\n        console.log(\"response\",data!.tasks )\r\n        setStatus(data!.task_status)\r\n      })\r\n      .catch((err: any) => {\r\n        console.log(\"err\", err)\r\n        setIsLoading(false)\r\n        setError(err.message)\r\n      })\r\n  }, [])\r\n\r\n  const startTask = async (id: any) => {\r\n    try {\r\n      setIsLoading(true)\r\n      const res = await api<AssignedTaskResponseInterface>(\r\n        getStartTaskUrl(id),\r\n        HttpMethods.Get,\r\n        null,\r\n        { Authorization: `Bearer ${user?.tokenStr}` },\r\n        \"Something went wrong\",\r\n        true\r\n      )\r\n\r\n      setIsLoading(false)\r\n      setTasks(res!.tasks)\r\n    } catch (e: any) {\r\n      setIsLoading(false)\r\n      setError(e.message)\r\n    }\r\n  }\r\n\r\n  const endTask = async (id: any) => {\r\n    try {\r\n      setIsLoading(true)\r\n      const res = await api<AssignedTaskResponseInterface>(\r\n        getEndTaskUrl(id),\r\n        HttpMethods.Get,\r\n        null,\r\n        { Authorization: `Bearer ${user?.tokenStr}` },\r\n        \"Something went wrong\",\r\n        true\r\n      )\r\n      setIsLoading(false)\r\n      setTasks(res!.tasks)\r\n    } catch (e: any) {\r\n      setIsLoading(false)\r\n      setError(e.message)\r\n    }\r\n  }\r\n\r\n  function getTableState(): CustomPaginationTableState {\r\n    const headers: { id: string; title: any }[] = [\r\n      {\r\n        id: \"Select\",\r\n        title: (\r\n          <Checkbox\r\n            checked={\r\n              checkedTasks.length === 0\r\n                ? false\r\n                : tasks.map((i) => i.id).every((i) => checkedTasks.includes(i))\r\n            }\r\n            onChange={() => {\r\n              const allSelected =\r\n                checkedTasks.length === 0\r\n                  ? false\r\n                  : tasks\r\n                      .map((i) => i.id)\r\n                      .every((i) => checkedTasks.includes(i))\r\n\r\n              if (allSelected) {\r\n                setCheckedTasks([])\r\n              } else {\r\n                setCheckedTasks([...tasks.map((i) => i.id)])\r\n              }\r\n            }}\r\n          />\r\n        ),\r\n      },\r\n      { id: \"Project\", title: \"Project\" },\r\n      { id: \"Client\", title: \"Client\" },\r\n      { id: \"Code\", title: \"Code\" },\r\n      { id: \"Name\", title: \"Name\" },\r\n      { id: \"Planned Start\", title: \"Planned Start\" },\r\n      { id: \"Planned End\", title: \"Planned End\" },\r\n      { id: \"Actual Start\", title: \"Actual Start\" },\r\n      { id: \"Actual End\", title: \"Actual End\" },\r\n      { id: \"Progress\", title: \"Progress\" },\r\n      { id: \"Status\", title: \"Status\" },\r\n      { id: \"Actions\", title: \"Actions\" },\r\n    ]\r\n    console.log(\"TASKS USERS\", tasks)\r\n    const rows: CustomPaginationTableRow[] = tasks!.map((task) => {\r\n      return {\r\n        id: task.id,\r\n        cells: [\r\n          <Checkbox\r\n            checked={checkedTasks.indexOf(task.id) !== -1}\r\n            onChange={() => {\r\n              const index = checkedTasks.indexOf(task.id)\r\n\r\n              if (index !== -1) {\r\n                checkedTasks.splice(index, 1)\r\n                setCheckedTasks([...checkedTasks])\r\n              } else {\r\n                checkedTasks.push(task.id)\r\n                setCheckedTasks([...checkedTasks])\r\n              }\r\n            }}\r\n          />,\r\n          task.project_title,\r\n          task.client_description ?? \"-\",\r\n          task.task_code ?? \"-\",\r\n          task.task_name,\r\n          task.planned_start_date\r\n            ? getDayFromDate(new Date(task.planned_start_date))\r\n            : \"-\",\r\n          task.planned_end_date\r\n            ? getDayFromDate(new Date(task.planned_end_date))\r\n            : \"-\",\r\n\r\n          task.actual_start_date\r\n            ? getDayFromDate(new Date(task.actual_start_date))\r\n            : \"-\",\r\n          task.actual_end_date\r\n            ? getDayFromDate(new Date(task.actual_end_date))\r\n            : \"-\",\r\n          task.task_progress + \"%\",\r\n          status.find((i) => i.id === task.task_status_id)?.description ?? \"-\",\r\n\r\n          <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n            <IconButton\r\n              onClick={async () => await startTask(task.id)}\r\n              disabled={!isTaskInPending(task, status) || !task.can_start}\r\n            >\r\n              <PlayArrowRoundedIcon\r\n                style={{\r\n                  color:\r\n                    !isTaskInPending(task, status) || !task.can_start\r\n                      ? getDisabledIconButton(theme.palette.mode)\r\n                      : green[700],\r\n                }}\r\n              />\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={async () => await endTask(task.id)}\r\n              disabled={isTaskCompleteOrPending(task, status)}\r\n            >\r\n              <StopRoundedIcon\r\n                style={{\r\n                  color: isTaskCompleteOrPending(task, status)\r\n                    ? getDisabledIconButton(theme.palette.mode)\r\n                    : red[700],\r\n                }}\r\n              />\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={async ()=>{\r\n                await updateProgress(100)\r\n              }}\r\n              disabled={!task.can_reschedule}\r\n            >\r\n              <InsertInvitationRoundedIcon\r\n                style={{\r\n                  color: task.can_reschedule\r\n                    ? cyan[800]\r\n                    : getDisabledIconButton(theme.palette.mode),\r\n                }}\r\n              />\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={() => {\r\n                setCommentId(task.id)\r\n                setComment(task.comment ?? \"\")\r\n                setCommentOpen(true)\r\n              }}\r\n            >\r\n              <CommentRoundedIcon style={{ color: orange[700] }} />\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={() => {\r\n                setProgressId(task.id)\r\n                setProgress(task.task_progress)\r\n                setProgressOpen(true)\r\n              }}\r\n              disabled={!task.can_update_progress}\r\n            >\r\n              <PercentRoundedIcon\r\n                style={{\r\n                  color: task.can_update_progress\r\n                    ? deepOrange[800]\r\n                    : getDisabledIconButton(theme.palette.mode),\r\n                }}\r\n              />\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={() => {\r\n                setProgressId(task.id)\r\n                setProgressProjectId(task.project_id)\r\n                setProgress(100)\r\n                setProgressOpen(true)\r\n              }}\r\n              disabled={!task.can_update_progress}\r\n            >\r\n              <DoneIcon\r\n                style={{\r\n                  color: task.can_update_progress\r\n                    ? green[800]\r\n                    : getDisabledIconButton(theme.palette.mode),\r\n                }}\r\n              />\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={() => navigate(`projects/${task.project_id}/preview`)}\r\n            >\r\n              <OpenInFullRoundedIcon style={{ color: blue[700] }} />\r\n            </IconButton>\r\n          </div>,\r\n        ],\r\n      }\r\n    })\r\n\r\n    return {\r\n      heads: [],\r\n      customHeaders: headers,\r\n      rows,\r\n    }\r\n  }\r\n\r\n  const updateComment = async (value: string) => {\r\n    try {\r\n      setCommentOpen(false)\r\n      setIsLoading(true)\r\n      const res = await api<AssignedTaskResponseInterface>(\r\n        updateCommentUrl(commentId!),\r\n        HttpMethods.Post,\r\n        { comment: value },\r\n        { Authorization: `Bearer ${user?.tokenStr}` },\r\n        \"Something went wrong\",\r\n        true\r\n      )\r\n      setIsLoading(false)\r\n      setTasks(res!.tasks)\r\n    } catch (e: any) {\r\n      setIsLoading(false)\r\n      setError(e.message)\r\n    }\r\n  }\r\n\r\n  const updateProgress = async (value: number) => {\r\n    try {\r\n      setProgressOpen(false)\r\n      setIsLoading(true)\r\n      const res = await api<AssignedTaskResponseInterface>(\r\n        updateProgressUrl(progressId!),\r\n        HttpMethods.Post,\r\n        { progress: value },\r\n        { Authorization: `Bearer ${user?.tokenStr}` },\r\n        \"Something went wrong\",\r\n        true\r\n      )\r\n      //paul obeid\r\n     // if(value == 100){\r\n      // const isProjectFinishedRes = await api<any>(\r\n      //   checkIfFinishedProjectUrl(projectId!),\r\n      //   HttpMethods.Get,\r\n      //   null,\r\n      //   { Authorization: `Bearer ${user?.tokenStr}` },\r\n      \r\n      // )\r\n      // console.log(\"PROJECT ID\", projectId!)\r\n      // api<any>(\r\n      //   checkIfFinishedProjectUrl(projectId!),\r\n      //   HttpMethods.Get,\r\n      //   null,\r\n      //   { Authorization: `Bearer ${user?.tokenStr}` },\r\n      //   \"Something went wrong\",\r\n      //   true\r\n      // ).then((data)=>{\r\n      //   console.log(\"PROJECT STATUS AFTER PROGRESS\", data)\r\n      // })\r\n\r\n      // const isProjectFinishedRes = await fetch(checkIfFinishedProjectUrl(projectId!), {\r\n      //   method: HttpMethods.Get,\r\n      //   headers: {\r\n      //     Authorization: `Bearer ${user?.tokenStr}`,\r\n      //     \"Content-Type\": \"application/json\",\r\n      //   },\r\n      // })\r\n      \r\n   // }\r\n    \r\n      setIsLoading(false)\r\n      setTasks(res!.tasks)\r\n    } catch (e: any) {\r\n      setIsLoading(false)\r\n      setError(e.message)\r\n    }\r\n  }\r\n\r\n  const rescheduleCallback = async (\r\n    start: number | null,\r\n    end: number | null\r\n  ) => {\r\n    try {\r\n      setScheduleOpen(false)\r\n      setIsLoading(true)\r\n      const res = await api<AssignedTaskResponseInterface>(\r\n        rescheduleUrl(scheduleId!),\r\n        HttpMethods.Post,\r\n        { request_start: start, request_end: end },\r\n        { Authorization: `Bearer ${user?.tokenStr}` },\r\n        \"Something went wrong\",\r\n        true\r\n      )\r\n      setIsLoading(false)\r\n      setTasks(res!.tasks)\r\n    } catch (e: any) {\r\n      setIsLoading(false)\r\n      setError(e.message)\r\n    }\r\n  }\r\n\r\n  // comments func\r\n  const [commentId, setCommentId] = useState<string | number | null>(null)\r\n  const [comment, setComment] = useState<string | null>(null)\r\n  const [commentOpen, setCommentOpen] = useState(false)\r\n\r\n  // progress\r\n\r\n  const [progressId, setProgressId] = useState<string | number | null>(null)\r\n  const [progressProjectId,setProgressProjectId] = useState<number | null>(null)\r\n  const [progress, setProgress] = useState<number | null>(null)\r\n  const [progressOpen, setProgressOpen] = useState(false)\r\n\r\n  // schedule\r\n  const [scheduleId, setScheduleId] = useState<string | number | null>(null)\r\n  const [scheduleStart, setScheduleStart] = useState<number | null>(null)\r\n  const [scheduleEnd, setScheduleEnd] = useState<number | null>(null)\r\n  const [scheduleOpen, setScheduleOpen] = useState(false)\r\n\r\n  // button\r\n  const [isPrintDisabled, setIsPrintDisabled] = useState(false)\r\n\r\n  const downloadAssigned = async () => {\r\n    try {\r\n      setIsPrintDisabled(true)\r\n\r\n      const response = await fetch(getDownloadAssignedURL(checkedTasks), {\r\n        method: HttpMethods.Get,\r\n        headers: {\r\n          Authorization: `Bearer ${user?.tokenStr}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n\r\n      if (response) {\r\n        const filename = response.headers.get(\"File-Name\")\r\n\r\n        const type = response.headers.get(\"Content-Type\")\r\n        const buffer = await response.blob()\r\n        const blob = new Blob([buffer], { type: type!! })\r\n\r\n        const link = document.createElement(\"a\")\r\n        link.download = filename!!\r\n        link.href = window.URL.createObjectURL(blob)\r\n        link.click()\r\n        link.remove()\r\n      }\r\n\r\n      setIsPrintDisabled(false)\r\n    } catch (e: any) {\r\n      setIsPrintDisabled(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <MainContainer loaded={!isLoading && !error}>\r\n      {isLoading && <Loading text=\"Loading assigned tasks..\" />}\r\n      {error && <ErrorComponent text={error} />}\r\n      {!isLoading && !error && tasks.length === 0 && (\r\n        <div\r\n          style={{\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            display: \"flex\",\r\n            width: \"100%\",\r\n            flexDirection: \"column\",\r\n            height: \"100%\",\r\n          }}\r\n        >\r\n          <img src={empty} />\r\n          <Typography variant=\"h6\">No assigned tasks</Typography>\r\n        </div>\r\n      )}\r\n      {!isLoading && !error && tasks.length > 0 && (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Typography style={{ paddingLeft: theme.spacing(1) }} variant=\"h6\">\r\n              Assigned Tasks\r\n            </Typography>\r\n            <HoverPopover hoverText=\"Print Selected Tasks\">\r\n              <IconButton\r\n                style={{ marginLeft: theme.spacing(1) }}\r\n                onClick={async () => await downloadAssigned()}\r\n                disabled={checkedTasks.length === 0 || isPrintDisabled}\r\n              >\r\n                <PrintIcon\r\n                  style={{\r\n                    color:\r\n                      checkedTasks.length === 0\r\n                        ? getDisabledIconButton(theme.palette.mode)\r\n                        : theme.palette.warning.main,\r\n                  }}\r\n                />\r\n              </IconButton>\r\n            </HoverPopover>\r\n          </div>\r\n\r\n          <CustomPaginationTable\r\n            table={getTableState()}\r\n            onRowClick={() => {}}\r\n            cursor=\"default\"\r\n          />\r\n          <AddCommentDialog\r\n            isOpen={commentOpen}\r\n            onClose={() => setCommentOpen(false)}\r\n            title=\"Comment\"\r\n            comment={comment!}\r\n            submit={async (value) => await updateComment(value)}\r\n          />\r\n          <AddPRogressDialog\r\n            isOpen={progressOpen}\r\n            onClose={() => setProgressOpen(false)}\r\n            title=\"Progress\"\r\n            progress={progress ?? 0}\r\n            submit={async (value) => await updateProgress(value)}\r\n          />\r\n         \r\n          <ScheduleTaskDialog\r\n            isOpen={scheduleOpen}\r\n            onClose={() => setScheduleOpen(false)}\r\n            title=\"Reschedule Task\"\r\n            start={scheduleStart ?? new Date().getTime()}\r\n            end={scheduleEnd ?? new Date().getTime()}\r\n            submit={async (start, end) => await rescheduleCallback(start, end)}\r\n            isStartEditable={(function () {\r\n              const t = tasks.find((i) => i.id === scheduleId)\r\n\r\n              return t?.actual_start_date === undefined\r\n            })()}\r\n            isEndEditable={(function () {\r\n              const t = tasks.find((i) => i.id === scheduleId)\r\n\r\n              return t?.actual_end_date === undefined\r\n            })()}\r\n          />\r\n        </div>\r\n      )}\r\n    </MainContainer>\r\n  )\r\n}\r\n","import { styled } from \"@mui/material/styles\"\r\nimport { Box, Grid, IconButton, Paper, Typography } from \"@mui/material\"\r\nimport { blueGrey, grey } from \"@mui/material/colors\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { adminlMenuItems, globalMenuItems } from \"../constants/MenuConstants\"\r\nimport { AuthContext } from \"../contexts/AuthContext\"\r\nimport { useContext } from \"react\"\r\nimport AssignedTasksDashboard from \"./AssignedTasksDashboard\"\r\nimport { useTheme } from \"@mui/material\"\r\n\r\nconst StyledPaper = styled(Paper)<{ color?: string }>(({ theme, color }) => {\r\n  return {\r\n    backgroundColor: color ?? grey[100],\r\n    margin: theme.spacing(2),\r\n    padding: theme.spacing(2),\r\n    cursor: \"pointer\",\r\n  }\r\n})\r\n\r\nconst Item = styled(\"div\")(({ theme }) => ({\r\n  ...theme.typography.body2,\r\n\r\n  textAlign: \"start\",\r\n  color: theme.palette.text.secondary,\r\n  boxShadow: \"none\",\r\n  margin: theme.spacing(1),\r\n  overflowY: \"scroll\",\r\n}))\r\n\r\nconst MainContainer = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    height: \"100%\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"1fr 4fr\",\r\n    width: \"100%\",\r\n  }\r\n})\r\n\r\nconst MenuHolder = styled(Paper)(({ theme }) => {\r\n  return {\r\n    padding: theme.spacing(1),\r\n  }\r\n})\r\n\r\nexport default function Dashboard() {\r\n  const navigate = useNavigate()\r\n  const { user } = useContext(AuthContext)!\r\n  const theme = useTheme()\r\n\r\n  const getCardMenu = () => {\r\n    return globalMenuItems(theme.palette.mode)\r\n      .filter((e) => e.route !== \"/\")\r\n      .map((m) => {\r\n        return (\r\n          <StyledPaper\r\n            color={m.cardColor}\r\n            key={m.route}\r\n            onClick={() => navigate(m.route)}\r\n          >\r\n            <Typography gutterBottom variant=\"h4\">\r\n              {m.title}\r\n            </Typography>\r\n            <Typography component=\"p\" variant=\"subtitle1\">\r\n              {m.desc}\r\n            </Typography>\r\n          </StyledPaper>\r\n        )\r\n      })\r\n  }\r\n\r\n  const getAdminMenu = () => {\r\n    return adminlMenuItems(user!.token, theme.palette.mode)\r\n      .filter((e) => e.route !== \"/\")\r\n      .map((m) => {\r\n        return (\r\n          <StyledPaper\r\n            color={m.cardColor}\r\n            key={m.route}\r\n            onClick={() => navigate(m.route)}\r\n          >\r\n            <Typography gutterBottom variant=\"h4\">\r\n              {m.title}\r\n            </Typography>\r\n            <Typography component=\"p\" variant=\"subtitle1\">\r\n              {m.desc}\r\n            </Typography>\r\n          </StyledPaper>\r\n        )\r\n      })\r\n  }\r\n\r\n  return (\r\n    <MainContainer>\r\n      <Item>\r\n        <MenuHolder>\r\n          <Typography variant=\"h6\">Quick Menu</Typography>\r\n          <>{getCardMenu()}</>\r\n\r\n          <>{getAdminMenu()}</>\r\n        </MenuHolder>\r\n      </Item>\r\n\r\n      <Item style={{ flex: \"1\" }}>\r\n        <AssignedTasksDashboard />\r\n      </Item>\r\n    </MainContainer>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.60baa8ca.png\";","import { CSSObject, styled, Theme, useTheme } from \"@mui/material/styles\"\r\nimport Box from \"@mui/material/Box\"\r\nimport MuiDrawer from \"@mui/material/Drawer\"\r\nimport CssBaseline from \"@mui/material/CssBaseline\"\r\nimport MuiAppBar, { AppBarProps as MuiAppBarProps } from \"@mui/material/AppBar\"\r\nimport Toolbar from \"@mui/material/Toolbar\"\r\nimport List from \"@mui/material/List\"\r\nimport Typography from \"@mui/material/Typography\"\r\nimport Divider from \"@mui/material/Divider\"\r\nimport IconButton from \"@mui/material/IconButton\"\r\nimport MenuIcon from \"@mui/icons-material/Menu\"\r\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\"\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\"\r\nimport ListItem from \"@mui/material/ListItem\"\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\"\r\nimport ListItemText from \"@mui/material/ListItemText\"\r\nimport { Outlet, useLocation, useNavigate } from \"react-router\"\r\nimport Dashboard from \"../components/Dashboard\"\r\nimport {\r\n  adminlMenuItems,\r\n  adminReportsMenuItems,\r\n  globalMenuItems,\r\n} from \"../constants/MenuConstants\"\r\nimport { useContext, useState } from \"react\"\r\nimport { LogoutRounded } from \"@mui/icons-material\"\r\nimport { AuthContext } from \"../contexts/AuthContext\"\r\nimport { projectName } from \"../constants/Config\"\r\nimport Brightness4Icon from \"@mui/icons-material/Brightness4\"\r\nimport Brightness7Icon from \"@mui/icons-material/Brightness7\"\r\nimport { ThemeContext } from \"../contexts/ThemeContext\"\r\nimport { blue, deepOrange } from \"@mui/material/colors\"\r\nimport logo from \"../images/logo.png\"\r\nimport PasswordRoundedIcon from \"@mui/icons-material/PasswordRounded\"\r\n\r\nconst drawerWidth = 240\r\n\r\nconst openedMixin = (theme: Theme): CSSObject => ({\r\n  width: drawerWidth,\r\n  transition: theme.transitions.create(\"width\", {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.enteringScreen,\r\n  }),\r\n  overflowX: \"hidden\",\r\n})\r\n\r\nconst closedMixin = (theme: Theme): CSSObject => ({\r\n  transition: theme.transitions.create(\"width\", {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.leavingScreen,\r\n  }),\r\n  overflowX: \"hidden\",\r\n  width: `calc(${theme.spacing(7)} + 1px)`,\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n    width: `calc(${theme.spacing(9)} + 1px)`,\r\n  },\r\n})\r\n\r\n// const Main = styled(\"main\", { shouldForwardProp: (prop) => prop !== \"open\" })<{\r\n//   open?: boolean\r\n// }>(({ theme, open }) => ({\r\n//   flexGrow: 1,\r\n//   padding: theme.spacing(0),\r\n//   transition: theme.transitions.create(\"margin\", {\r\n//     easing: theme.transitions.easing.sharp,\r\n//     duration: theme.transitions.duration.leavingScreen,\r\n//   }),\r\n//   marginLeft: `-${drawerWidth}px`,\r\n//   ...(open && {\r\n//     transition: theme.transitions.create(\"margin\", {\r\n//       easing: theme.transitions.easing.easeOut,\r\n//       duration: theme.transitions.duration.enteringScreen,\r\n//     }),\r\n//     marginLeft: 0,\r\n//   }),\r\n//   height: \"calc(100% - 64px)\", // new\r\n// }))\r\n\r\ninterface AppBarProps extends MuiAppBarProps {\r\n  open?: boolean\r\n}\r\n\r\nconst AppBar = styled(MuiAppBar, {\r\n  shouldForwardProp: (prop) => prop !== \"open\",\r\n})<AppBarProps>(({ theme, open }) => ({\r\n  zIndex: theme.zIndex.drawer + 1,\r\n  transition: theme.transitions.create([\"width\", \"margin\"], {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.leavingScreen,\r\n  }),\r\n  ...(open && {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  }),\r\n}))\r\n\r\nconst DrawerHeader = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  padding: theme.spacing(0, 1),\r\n  // necessary for content to be below app bar\r\n  ...theme.mixins.toolbar,\r\n  justifyContent: \"flex-end\",\r\n}))\r\n\r\nconst StyledTypography = styled(Typography)(({ theme }) => {\r\n  return {\r\n    color: theme.palette.secondary.light,\r\n    fontWeight: \"bold\",\r\n  }\r\n})\r\n\r\nconst Drawer = styled(MuiDrawer, {\r\n  shouldForwardProp: (prop) => prop !== \"open\",\r\n})(({ theme, open }) => ({\r\n  width: drawerWidth,\r\n  flexShrink: 0,\r\n  whiteSpace: \"nowrap\",\r\n  boxSizing: \"border-box\",\r\n  ...(open && {\r\n    ...openedMixin(theme),\r\n    \"& .MuiDrawer-paper\": openedMixin(theme),\r\n  }),\r\n  ...(!open && {\r\n    ...closedMixin(theme),\r\n    \"& .MuiDrawer-paper\": closedMixin(theme),\r\n  }),\r\n}))\r\n\r\nexport default function HomeScreen() {\r\n  const theme = useTheme()\r\n  const [open, setOpen] = useState(false)\r\n  const { pathname } = useLocation()\r\n  const { logout, user } = useContext(AuthContext)!\r\n\r\n  const isDashboard = () => {\r\n    return pathname === \"/\"\r\n  }\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  const navigate = useNavigate()\r\n  const handleNavigate = (route: string) => {\r\n    navigate(route)\r\n  }\r\n\r\n  const logoutUser = async () => await logout()\r\n\r\n  const { toggleColorMode } = useContext(ThemeContext)\r\n\r\n  return (\r\n    <Box sx={{ display: \"flex\", height: \"100%\", overflowX: \"hidden\" }}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" open={open}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            sx={{\r\n              marginRight: \"36px\",\r\n              ...(open && { display: \"none\" }),\r\n            }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <img\r\n            style={{ marginRight: theme.spacing(3) }}\r\n            src={logo}\r\n            width={40}\r\n            height={40}\r\n          />\r\n          <Typography variant=\"h6\" noWrap component=\"div\">\r\n            {projectName}\r\n          </Typography>\r\n\r\n          {/* <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              width: \"100%\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n          >\r\n            <IconButton\r\n              sx={{ ml: 1 }}\r\n              onClick={toggleColorMode}\r\n              color=\"inherit\"\r\n            >\r\n              {theme.palette.mode === \"dark\" ? (\r\n                <Brightness7Icon />\r\n              ) : (\r\n                <Brightness4Icon />\r\n              )}\r\n            </IconButton>\r\n          </Box> */}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer variant=\"permanent\" open={open}>\r\n        <DrawerHeader style={{ justifyContent: \"space-between\" }}>\r\n          <StyledTypography variant=\"h6\">{user?.username}</StyledTypography>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"ltr\" ? (\r\n              <ChevronLeftIcon />\r\n            ) : (\r\n              <ChevronRightIcon />\r\n            )}\r\n          </IconButton>\r\n        </DrawerHeader>\r\n        <Divider />\r\n        <List>\r\n          {globalMenuItems(theme.palette.mode).map((item) => (\r\n            <ListItem\r\n              button\r\n              key={item.route}\r\n              onClick={() => {\r\n                handleNavigate(item.route)\r\n              }}\r\n            >\r\n              <ListItemIcon>{item.icon}</ListItemIcon>\r\n              <ListItemText primary={item.title} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        {adminlMenuItems(user!.token, theme.palette.mode).length > 0 && (\r\n          <Divider />\r\n        )}\r\n        {adminlMenuItems(user!.token, theme.palette.mode).length > 0 && (\r\n          <List>\r\n            {adminlMenuItems(user!.token, theme.palette.mode).map((item) => (\r\n              <ListItem\r\n                button\r\n                key={item.route}\r\n                onClick={() => {\r\n                  handleNavigate(item.route)\r\n                }}\r\n              >\r\n                <ListItemIcon>{item.icon}</ListItemIcon>\r\n                <ListItemText primary={item.title} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        )}\r\n        {adminReportsMenuItems(user!.token, theme.palette.mode).length > 0 && (\r\n          <Divider />\r\n        )}\r\n        {adminReportsMenuItems(user!.token, theme.palette.mode).length > 0 && (\r\n          <List>\r\n            {adminReportsMenuItems(user!.token, theme.palette.mode).map(\r\n              (item) => (\r\n                <ListItem\r\n                  button\r\n                  key={item.route}\r\n                  onClick={() => {\r\n                    handleNavigate(item.route)\r\n                  }}\r\n                >\r\n                  <ListItemIcon>{item.icon}</ListItemIcon>\r\n                  <ListItemText primary={item.title} />\r\n                </ListItem>\r\n              )\r\n            )}\r\n          </List>\r\n        )}\r\n\r\n        <Divider />\r\n        <ListItem\r\n          button\r\n          key=\"switch-theme\"\r\n          onClick={toggleColorMode}\r\n          color=\"inherit\"\r\n        >\r\n          <ListItemIcon>\r\n            {theme.palette.mode === \"dark\" ? (\r\n              <Brightness7Icon style={{ color: blue[700] }} />\r\n            ) : (\r\n              <Brightness4Icon style={{ color: blue[700] }} />\r\n            )}\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Toggle Theme\" />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          key=\"change-password\"\r\n          onClick={() => navigate(\"/change-password\")}\r\n        >\r\n          <ListItemIcon>\r\n            <PasswordRoundedIcon style={{ color: blue[400] }} />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Change Password\" />\r\n        </ListItem>\r\n        <ListItem button key=\"logout\" onClick={async () => await logoutUser()}>\r\n          <ListItemIcon>\r\n            <LogoutRounded style={{ color: deepOrange[900] }} />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Logout\" />\r\n        </ListItem>\r\n      </Drawer>\r\n      <Box\r\n        component=\"main\"\r\n        style={{\r\n          padding: 0,\r\n          margin: 0,\r\n          height: pathname === \"/reports/gantt\" ? \"99%\" : \"calc(100% - 64px)\",\r\n          overflowY: pathname === \"/reports/gantt\" ? \"hidden\" : undefined,\r\n          overflowX: pathname === \"/reports/gantt\" ? \"hidden\" : undefined,\r\n        }}\r\n        sx={{ flexGrow: 1, p: 3 }}\r\n      >\r\n        <DrawerHeader />\r\n        {isDashboard() && <Dashboard />}\r\n        {!isDashboard() && <Outlet />}\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n","import Button from \"@mui/material/Button\"\r\nimport Dialog from \"@mui/material/Dialog\"\r\nimport DialogActions from \"@mui/material/DialogActions\"\r\nimport DialogContent from \"@mui/material/DialogContent\"\r\nimport DialogContentText from \"@mui/material/DialogContentText\"\r\nimport DialogTitle from \"@mui/material/DialogTitle\"\r\n\r\nexport interface AlertDialogProps {\r\n  isOpen: boolean\r\n  onClose(): void\r\n  title: string\r\n  content: string\r\n}\r\n\r\nexport default function AlertDialog(props: AlertDialogProps) {\r\n  return (\r\n    <Dialog\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n      open={props.isOpen}\r\n      onClose={props.onClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          {props.content}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.onClose}>Dismiss</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n","import logo from \"../images/logo.png\"\r\nimport { projectName } from \"../constants/Config\"\r\nimport Typography from \"@mui/material/Typography/Typography\"\r\nimport { styled, useTheme } from \"@mui/material/styles\"\r\n\r\nconst MainContainer = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    color: theme.palette.text.primary,\r\n  }\r\n})\r\n\r\nexport default function LogoComponent() {\r\n  const theme = useTheme()\r\n  return (\r\n    <MainContainer>\r\n      <img\r\n        style={{ marginBottom: theme.spacing(3) }}\r\n        src={logo}\r\n        width={180}\r\n        height={180}\r\n      />\r\n      <Typography variant=\"h5\">{projectName}</Typography>\r\n    </MainContainer>\r\n  )\r\n}\r\n","import Button from \"@mui/material/Button\"\r\nimport Dialog from \"@mui/material/Dialog\"\r\nimport DialogActions from \"@mui/material/DialogActions\"\r\nimport DialogContent from \"@mui/material/DialogContent\"\r\nimport DialogContentText from \"@mui/material/DialogContentText\"\r\nimport DialogTitle from \"@mui/material/DialogTitle\"\r\nimport Slide from \"@mui/material/Slide\"\r\nimport { TransitionProps } from \"@mui/material/transitions\"\r\nimport { forwardRef } from \"react\"\r\n\r\nconst Transition = forwardRef(function Transition(\r\n  props: TransitionProps & {\r\n    children: React.ReactElement<any, any>\r\n  },\r\n  ref: React.Ref<unknown>\r\n) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />\r\n})\r\n\r\nexport interface ConfirmationDialogProps {\r\n  isOpen: boolean\r\n  title: string\r\n  content: string\r\n  positiveText: string\r\n  negativeText: string\r\n  dismiss(): void\r\n  positive: (() => void) | (() => Promise<void>)\r\n}\r\n\r\nexport default function ConfirmationDialog(props: ConfirmationDialogProps) {\r\n  return (\r\n    <Dialog\r\n      open={props.isOpen}\r\n      TransitionComponent={Transition}\r\n      keepMounted\r\n      onClose={props.dismiss}\r\n      aria-describedby=\"alert-dialog-slide-description\"\r\n    >\r\n      <DialogTitle>{props.title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-slide-description\">\r\n          {props.content}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.dismiss}>{props.negativeText}</Button>\r\n        <Button onClick={async () => await props.positive()}>\r\n          {props.positiveText}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n","import { styled } from \"@mui/material/styles\"\r\nimport { CenterContainer } from \"../components/StyledComponents\"\r\nimport { useContext, useState } from \"react\"\r\nimport AlertDialog from \"../components/dialogs/AlertDialog\"\r\nimport { AuthContext } from \"../contexts/AuthContext\"\r\nimport Loading from \"../components/Loading\"\r\nimport Typography from \"@mui/material/Typography\"\r\nimport Paper from \"@mui/material/Paper\"\r\nimport TextField from \"@mui/material/TextField\"\r\nimport Button from \"@mui/material/Button\"\r\nimport LogoComponent from \"../components/LogoComponent\"\r\nimport { FormControlLabel, FormGroup, Switch } from \"@mui/material\"\r\nimport { ValidationError } from \"../api/LoginErrors\"\r\nimport ConfirmationDialog from \"../components/dialogs/ConfirmationDialog\"\r\n\r\nconst StyledCard = styled(Paper)(({ theme }) => {\r\n  return {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    width: \"600px\",\r\n    height: \"350px\",\r\n    justifyContent: \"space-between\",\r\n  }\r\n})\r\n\r\nconst MainContainer = styled(\"div\")<{ loaded: boolean }>(\r\n  ({ theme, loaded }) => {\r\n    return {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      height: \"100%\",\r\n      alignItems: \"center\",\r\n      justifyContent: loaded ? \"space-evenly\" : \"center\",\r\n      backgroundColor: theme.palette.background.default,\r\n    }\r\n  }\r\n)\r\n\r\nconst StyledButton = styled(Button)(({ theme }) => {\r\n  return {\r\n    height: theme.spacing(6),\r\n  }\r\n})\r\n\r\nexport default function LoginScreen() {\r\n  // context\r\n  const authContext = useContext(AuthContext)!\r\n\r\n  // state\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false)\r\n  const [dialogTitle, setDialogTitle] = useState(\"\")\r\n  const [dialogContent, setDialogContent] = useState(\"\")\r\n\r\n  const [username, setUsername] = useState(\"\")\r\n  const [usernameErr, setUsernameErr] = useState(false)\r\n\r\n  const [password, setPassword] = useState(\"\")\r\n  const [passwordErr, setPasswordErr] = useState(false)\r\n  const [forceLogout, setForceLogout] = useState(false)\r\n\r\n  // force login dialog\r\n  const [forceDialog, setForceDialog] = useState(false)\r\n\r\n  const submitForm = async (login?: boolean) => {\r\n    if (validate()) {\r\n      try {\r\n        setIsLoading(true)\r\n\r\n        await authContext.login(username, password, login ?? forceLogout)\r\n        window.location.reload()\r\n      } catch (error: any) {\r\n        if (error instanceof ValidationError) {\r\n          setForceDialog(true)\r\n        } else {\r\n          setIsDialogOpen(true)\r\n          setDialogContent(error.message)\r\n          setDialogTitle(\"Oops, something went wrong!\")\r\n        }\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  function validate(): boolean {\r\n    let valid = true\r\n\r\n    if (username.length < 1) {\r\n      setUsernameErr(true)\r\n      valid = false\r\n    } else {\r\n      setUsernameErr(false)\r\n    }\r\n\r\n    if (password.length < 1) {\r\n      setPasswordErr(true)\r\n      valid = false\r\n    } else {\r\n      setPasswordErr(false)\r\n    }\r\n\r\n    return valid\r\n  }\r\n\r\n  return (\r\n    <MainContainer loaded={!isLoading}>\r\n      {isLoading && <Loading text=\"Signing in..\" />}\r\n      {!isLoading && (\r\n        <>\r\n          <LogoComponent />\r\n          <StyledCard>\r\n            <Typography gutterBottom variant=\"h4\">\r\n              Login\r\n            </Typography>\r\n            <TextField\r\n              label=\"Username\"\r\n              value={username}\r\n              fullWidth\r\n              required\r\n              error={usernameErr}\r\n              type=\"text\"\r\n              onChange={(e) => {\r\n                setUsername(e.target.value)\r\n              }}\r\n            />\r\n            <TextField\r\n              required\r\n              fullWidth\r\n              label=\"Password\"\r\n              value={password}\r\n              error={passwordErr}\r\n              type=\"password\"\r\n              onChange={(e) => {\r\n                setPassword(e.target.value)\r\n              }}\r\n              onSubmit={async () => await submitForm()}\r\n              onKeyDown={(e) => {\r\n                if (e.key === \"Enter\") {\r\n                  submitForm()\r\n                }\r\n              }}\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={forceLogout}\r\n                  onChange={(e) => setForceLogout(e.target.checked)}\r\n                />\r\n              }\r\n              label=\"Force Login\"\r\n            />\r\n            <StyledButton\r\n              onClick={async () => await submitForm()}\r\n              variant=\"contained\"\r\n              color=\"success\"\r\n            >\r\n              Login\r\n            </StyledButton>\r\n          </StyledCard>\r\n        </>\r\n      )}\r\n\r\n      <AlertDialog\r\n        isOpen={isDialogOpen}\r\n        onClose={() => setIsDialogOpen(false)}\r\n        content={dialogContent}\r\n        title={dialogTitle}\r\n      />\r\n      <ConfirmationDialog\r\n        title=\"Session found.\"\r\n        content=\"Are you sure you want to terminate the other session?\"\r\n        negativeText=\"Cancel\"\r\n        positiveText=\"Force Login\"\r\n        positive={async () => {\r\n          setForceLogout(true)\r\n          setForceDialog(false)\r\n          await submitForm(true)\r\n        }}\r\n        dismiss={() => setForceDialog(false)}\r\n        isOpen={forceDialog}\r\n      />\r\n    </MainContainer>\r\n  )\r\n}\r\n","import { domainName } from \"../constants/Config\"\r\n\r\nexport interface MinifiedClient {\r\n  client_code: string\r\n  description: string\r\n  currency: string\r\n  supervisor_code: string\r\n  is_active: boolean\r\n}\r\n\r\nexport const getAllClientsUrl = domainName + \"/api/client/all\"\r\n\r\nexport const getNewClientInitUrl = domainName + \"/api/client/init\"\r\n\r\nexport interface ClientProperty {\r\n  id: number\r\n  description: string\r\n  type: number\r\n  is_editable: boolean\r\n  is_required: boolean\r\n  input_type: number\r\n  sort_order: number\r\n}\r\n\r\nexport interface ClientCriteria {\r\n  criteria_id: number\r\n  description: string\r\n  criteria_type: number\r\n  is_editable: boolean\r\n  is_required: boolean\r\n  sort_order: number\r\n  criteria_values: {\r\n    criteria_value_id: number\r\n    criteria_id: number\r\n    description: string\r\n  }[]\r\n}\r\n\r\nexport interface ClientInit {\r\n  properties: ClientProperty[]\r\n  criteria: ClientCriteria[]\r\n  addresses: {\r\n    address_code: string\r\n    description: string\r\n  }[]\r\n  currencies: {\r\n    currency_code: string\r\n    currency_description: string\r\n    currency_symbol: string\r\n  }[]\r\n  sales_representatives: {\r\n    user_code: string\r\n    description: string\r\n  }[]\r\n}\r\n\r\nexport interface NewClientRequest {\r\n  client_code: string\r\n  description: string\r\n  currency_code: string\r\n  properties: {\r\n    property_id: number\r\n    description: string\r\n  }[]\r\n  criteria: {\r\n    client_criteria_value_id: number\r\n  }[]\r\n  address_code: string\r\n  sales_representative: string\r\n}\r\n\r\nexport const newClientUrl = domainName + \"/api/client/new\"\r\n\r\nexport const getClientByCodeUrl = (id: string | number) =>\r\n  domainName + `/api/client/${id}`\r\n\r\nexport interface ClientWithTemplate {\r\n  template: ClientInit\r\n  client: {\r\n    client_code: string\r\n    description: string\r\n    currency_code: string\r\n    barcode: string\r\n    is_active: boolean\r\n    default_user: string\r\n    addresses: {\r\n      address_code: string\r\n      description: string\r\n    }[]\r\n    criteria_values: {\r\n      criteria_value_id: number\r\n      criteria_id: number\r\n      description: string\r\n    }[]\r\n    properties: {\r\n      property_id: number\r\n      description: string\r\n    }[]\r\n  }\r\n}\r\n\r\nexport interface UpdateClientRequest {\r\n  description: string\r\n  currency_code: string\r\n  is_active: boolean\r\n  properties: {\r\n    property_id: number\r\n    description: string\r\n  }[]\r\n  criteria: {\r\n    client_criteria_value_id: number\r\n  }[]\r\n  address_code: string\r\n  sales_representative: string\r\n}\r\n","import Box from \"@mui/material/Box\"\r\nimport IconButton from \"@mui/material/IconButton\"\r\nimport { useTheme } from \"@mui/material/styles\"\r\nimport LastPageIcon from \"@mui/icons-material/LastPage\"\r\nimport FirstPageIcon from \"@mui/icons-material/FirstPage\"\r\nimport KeyboardArrowLeft from \"@mui/icons-material/KeyboardArrowLeft\"\r\nimport KeyboardArrowRight from \"@mui/icons-material/KeyboardArrowRight\"\r\nimport {\r\n  TableContainer,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableHead,\r\n  Typography,\r\n  TextField,\r\n  Input,\r\n} from \"@mui/material\"\r\nimport { StyledTableCell, StyledTableRow } from \"./CustomTable\"\r\nimport { CustomPaginationTableState } from \"./CustomPaginationTable\"\r\nimport empty from \"../../images/empty_search.png\"\r\nimport { styled } from \"@mui/material/styles\"\r\nimport { useState } from \"react\"\r\n\r\n\r\n\r\nexport enum PaginationActionType {\r\n  Next,\r\n  Previous,\r\n  First,\r\n  Last,\r\n  Input,\r\n}\r\n\r\ninterface TablePaginationActionsProps {\r\n  pageCount: number\r\n  currentPage: number\r\n  movePage(type: PaginationActionType, page?: number): Promise<void>\r\n}\r\n\r\nfunction TablePaginationActions(props: TablePaginationActionsProps) {\r\n  const theme = useTheme()\r\n  var { pageCount, currentPage, movePage} = props\r\n  var [page, setPage]=useState(JSON.stringify(currentPage+1))\r\n\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        flexShrink: 0,\r\n        ml: 2.5,\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"flex-start\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <Paper\r\n        elevation={theme.palette.mode === \"light\" ? 0 : 1}\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          backgroundColor:\r\n            theme.palette.mode === \"light\"\r\n              ? theme.palette.grey[400]\r\n              : theme.palette.grey[900],\r\n          margin: theme.spacing(1),\r\n        }}\r\n      >\r\n        <IconButton\r\n          onClick={async () => {await movePage(PaginationActionType.First)\r\n            setPage(JSON.stringify(currentPage+1))}}\r\n          disabled={currentPage === 0  || currentPage!! == null}\r\n          aria-label=\"first page\"\r\n        >\r\n          {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={async () =>{ \r\n            await movePage(PaginationActionType.Previous)\r\n            setPage(JSON.stringify(currentPage + 1))\r\n            \r\n          }}\r\n          disabled={currentPage === 0  || currentPage!! == null}\r\n          aria-label=\"previous page\"\r\n        >\r\n          {theme.direction === \"rtl\" ? (\r\n            <KeyboardArrowRight />\r\n          ) : (\r\n            <KeyboardArrowLeft />\r\n          )}\r\n        </IconButton>\r\n        {/* <Typography color={theme.palette.success.main}>\r\n               {currentPage + 1}&nbsp;&nbsp; \r\n        </Typography> */}\r\n        <Input value={page} type=\"string\" disableUnderline style={InputStyles} \r\n        onChange={async (e) =>{\r\n          if(e.target.value == \"0\"){\r\n            return\r\n          }else{\r\n            setPage(e.target.value)\r\n          }\r\n          \r\n \r\n         }}\r\n         onKeyUp={async (e)=>{\r\n          if(e.keyCode == 13){\r\n            if(page == ''){\r\n              setPage(JSON.stringify(currentPage + 1))\r\n              return\r\n            }\r\n            const param = parseInt(page) - 1\r\n            if(param === NaN){\r\n              setPage(JSON.stringify(currentPage + 1))\r\n              return\r\n            }\r\n            await movePage(PaginationActionType.Input, param)\r\n          }\r\n         }}\r\n         onKeyPress={(e)=>{\r\n            const keyCode = e.keyCode\r\n            const excludedKeys = [8, 37, 39, 46]\r\n            if(((keyCode >= 48 && keyCode <= 57) ||\r\n            (keyCode >= 96 && keyCode <= 105) ||\r\n            (excludedKeys.includes(keyCode)))||\r\n          \r\n            String.fromCharCode(e.charCode).match(\r\n              /^[^*|\\\":<>[\\]{}`\\\\()';@&$+-=]+$/g\r\n            )!=null){\r\n              e.preventDefault()\r\n            }\r\n         }}\r\n         />\r\n        <Typography>-</Typography>\r\n        <Typography color={theme.palette.warning.main}>\r\n          &nbsp;&nbsp;{pageCount === 0 ? 1 : pageCount}\r\n        </Typography>\r\n        <IconButton\r\n          onClick={async () => {\r\n            await movePage(PaginationActionType.Next)\r\n            console.log(currentPage)\r\n            setPage(JSON.stringify(currentPage + 1))\r\n          }}\r\n          disabled={currentPage!! >= pageCount - 1 || currentPage!! == null}\r\n          aria-label=\"next page\"\r\n        >\r\n          {theme.direction === \"rtl\" ? (\r\n            <KeyboardArrowLeft />\r\n          ) : (\r\n            <KeyboardArrowRight />\r\n          )}\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={async () =>{\r\n             await movePage(PaginationActionType.Last)\r\n             setPage(JSON.stringify(currentPage + 1))\r\n             \r\n            }}\r\n          disabled={currentPage!! >= pageCount - 1  || currentPage!! == null}\r\n          aria-label=\"last page\"\r\n        >\r\n          {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n        </IconButton>\r\n      </Paper>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport interface LivePaginationTableProps {\r\n  table: CustomPaginationTableState\r\n  onRowClick(id: number | string): void\r\n  cursor?: string\r\n  selectedRowId?: number | string\r\n  movePage(type: PaginationActionType): Promise<void>\r\n  currentPage: number\r\n  pageCount: number\r\n  notInProjectsView?: boolean\r\n}\r\n\r\nexport default function LivePaginationTable({\r\n  table,\r\n  onRowClick,\r\n  cursor,\r\n  selectedRowId,\r\n  pageCount,\r\n  movePage,\r\n  currentPage,\r\n  notInProjectsView\r\n}: LivePaginationTableProps) {\r\n  const theme = useTheme()\r\n\r\n  if(notInProjectsView == true){\r\n    return (\r\n      <Paper\r\n        style={{\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n        }}\r\n        sx={{ width: \"100%\", overflow: \"hidden\" }}\r\n      >\r\n        <TableContainer style={{ flex: \"1\" }}>\r\n          <Table\r\n            stickyHeader\r\n            sx={{ minWidth: 500 }}\r\n            aria-label=\"custom pagination table\"\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                {table.heads.map((head) => (\r\n                  <StyledTableCell key={head}>{head}</StyledTableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            {table.rows.length > 0 && (\r\n              <TableBody>\r\n                {table.rows.map((row) => (\r\n                  <StyledTableRow\r\n                    isSelected={selectedRowId === row.id}\r\n                    cursor={cursor}\r\n                    onClick={() => onRowClick(row.id)}\r\n                    key={row.id}\r\n                  >\r\n                    {row.cells.map(\r\n                      (\r\n                        cell,\r\n                        index // index to make the cell unique id\r\n                      ) => (\r\n                        <StyledTableCell key={index + cell}>\r\n                          {cell}\r\n                        </StyledTableCell>\r\n                      )\r\n                    )}\r\n                  </StyledTableRow>\r\n                ))}\r\n              </TableBody>\r\n            )}\r\n          </Table>\r\n          {table.rows.length === 0 && (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                flex: \"1\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                height: \"80%\",\r\n              }}\r\n            >\r\n              <img\r\n                src={empty}\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignSelf: \"center\",\r\n                  justifySelf: \"center\",\r\n                  marginBottom: theme.spacing(1),\r\n                }}\r\n              />\r\n              <Typography variant=\"h5\">Sorry! No results found.</Typography>\r\n            </div>\r\n          )}\r\n        </TableContainer>\r\n      </Paper>\r\n    )\r\n\r\n  }else{\r\n    return (\r\n      <Paper\r\n        style={{\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n        }}\r\n        sx={{ width: \"100%\", overflow: \"hidden\" }}\r\n      >\r\n        <TableContainer style={{ flex: \"1\" }}>\r\n          <Table\r\n            stickyHeader\r\n            sx={{ minWidth: 500 }}\r\n            aria-label=\"custom pagination table\"\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                {table.heads.map((head) => (\r\n                  <StyledTableCell key={head}>{head}</StyledTableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            {table.rows.length > 0 && (\r\n              <TableBody>\r\n                {table.rows.map((row) => (\r\n                  <StyledTableRow\r\n                    isSelected={selectedRowId === row.id}\r\n                    cursor={cursor}\r\n                    onClick={() => onRowClick(row.id)}\r\n                    key={row.id}\r\n                  >\r\n                    {row.cells.map(\r\n                      (\r\n                        cell,\r\n                        index // index to make the cell unique id\r\n                      ) => (\r\n                        <StyledTableCell key={index + cell}>\r\n                          {cell}\r\n                        </StyledTableCell>\r\n                      )\r\n                    )}\r\n                  </StyledTableRow>\r\n                ))}\r\n              </TableBody>\r\n            )}\r\n          </Table>\r\n          {table.rows.length === 0 && (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                flex: \"1\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                height: \"80%\",\r\n              }}\r\n            >\r\n              <img\r\n                src={empty}\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignSelf: \"center\",\r\n                  justifySelf: \"center\",\r\n                  marginBottom: theme.spacing(1),\r\n                }}\r\n              />\r\n              <Typography variant=\"h5\">Sorry! No results found.</Typography>\r\n            </div>\r\n          )}\r\n        </TableContainer>\r\n        <TablePaginationActions\r\n          pageCount={pageCount}\r\n          currentPage={currentPage}\r\n          movePage={movePage}\r\n        />\r\n      \r\n      </Paper>\r\n    )\r\n  }\r\n\r\n}\r\n\r\n\r\nconst InputStyles = {\r\n  width: \"18px\",\r\n  backgroundColor: \"transparent\",\r\n  borderColor: \"transparent\",\r\n  borderBottom: \"0px !important\",\r\n  border: \"0px\",\r\n  outline: \"0px\",\r\n  TextAlign: \"center\",\r\n  color: \"rgb(31,160,31)\"\r\n}\r\n","import Paper from \"@mui/material/Paper\"\r\nimport grey from \"@mui/material/colors/grey\"\r\nimport Fab from \"@mui/material/Fab\"\r\nimport { styled } from \"@mui/material/styles\"\r\nimport TextField from \"@mui/material/TextField\"\r\nimport Divider from \"@mui/material/Divider\"\r\n\r\nexport const CenterContainer = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  }\r\n})\r\n\r\nexport const StyledTextField = styled(TextField)(({ theme }) => {\r\n  return {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n    display: \"block\",\r\n  }\r\n})\r\n\r\nexport const StyledFab = styled(Fab)(({ theme }) => {\r\n  return {\r\n    position: \"fixed\",\r\n    bottom: theme.spacing(4),\r\n    right: theme.spacing(4),\r\n  }\r\n})\r\n\r\nexport const InputContainer = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-start\",\r\n    margin: theme.spacing(1),\r\n  }\r\n})\r\n\r\nexport const StyledInputContainer = styled(InputContainer)<{\r\n  header: string\r\n  bg: string\r\n  elevation?: string\r\n}>(({ theme, header, bg, elevation }) => {\r\n  return {\r\n    borderLeft: `20px solid ${header}`,\r\n    backgroundColor: theme.palette.mode === \"light\" ? bg : header,\r\n    padding: `${theme.spacing(1.5)} ${theme.spacing(2)} ${theme.spacing(\r\n      1.5\r\n    )} ${theme.spacing(1.5)}`,\r\n    borderRadius: theme.shape.borderRadius,\r\n    boxShadow: elevation ?? theme.shadows[1],\r\n  }\r\n})\r\n\r\nexport const StyledPaper = styled(Paper)(({ theme }) => {\r\n  return {\r\n    backgroundColor: grey[200],\r\n    padding: theme.spacing(1),\r\n    margin: theme.spacing(2),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"flex-start\",\r\n  }\r\n})\r\n\r\nexport const TransparentStyledPaper = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    padding: theme.spacing(1),\r\n    margin: theme.spacing(2),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"flex-start\",\r\n  }\r\n})\r\n\r\nexport const ScreenContainer = styled(\"div\")<{\r\n  isDataLoaded: boolean\r\n}>(({ theme, isDataLoaded }) => {\r\n  return {\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing(1),\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: isDataLoaded ? \"flex-start\" : \"center\",\r\n    alignItems: isDataLoaded ? \"stretch\" : \"center\",\r\n  }\r\n})\r\n\r\nexport const StyledDivider = styled(Divider)(({ theme }) => {\r\n  return {\r\n    marginRight: theme.spacing(3),\r\n    marginLeft: theme.spacing(3),\r\n    backgroundColor: theme.palette.secondary.dark,\r\n  }\r\n})\r\n\r\nexport const StyledVerticalDivider = styled(Divider)(({ theme }) => {\r\n  return {\r\n    marginRight: theme.spacing(1),\r\n    marginLeft: theme.spacing(1),\r\n    marginBottom: theme.spacing(2),\r\n    marginTop: theme.spacing(2),\r\n    backgroundColor: theme.palette.secondary.light,\r\n  }\r\n})\r\n","export default __webpack_public_path__ + \"static/media/empty_search.54b419bd.png\";","import { styled } from \"@mui/material/styles\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport CustomPaginationTable, {\r\n  CustomPaginationTableState,\r\n} from \"../reusable/CustomPaginationTable\"\r\nimport { StyledFab } from \"../StyledComponents\"\r\nimport AddCircleRoundedIcon from \"@mui/icons-material/AddCircleRounded\"\r\nimport Typography from \"@mui/material/Typography\"\r\nimport Paper from \"@mui/material/Paper\"\r\nimport { useContext, useEffect, useState } from \"react\"\r\nimport { api, HttpMethods } from \"../../api/ApiControllers\"\r\nimport { AuthContext } from \"../../contexts/AuthContext\"\r\nimport Loading from \"../Loading\"\r\nimport ErrorComponent from \"../ErrorComponent\"\r\nimport { IconButton, TextField, useTheme } from \"@mui/material\"\r\nimport SearchRoundedIcon from \"@mui/icons-material/SearchRounded\"\r\nimport LivePaginationTable, {\r\n  PaginationActionType,\r\n} from \"../reusable/LivePaginationTable\"\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport moment from \"moment\"\r\nimport { CustomTableRow } from \"../reusable/CustomTable\"\r\nimport { getProjectStatus, MinifiedProject } from \"../../api/ProjectApi\"\r\nimport { setTimeout } from \"timers\"\r\n\r\n\r\nexport interface PagingDto<T> {\r\n  page_count: number\r\n  current_page: number\r\n  data: T\r\n}\r\n\r\nconst MainContainer = styled(\"div\")<{ dataloaded: boolean }>(\r\n  ({ dataloaded }) => {\r\n    return {\r\n      height: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: dataloaded ? \"flex-start\" : \"center\",\r\n      alignItems: dataloaded ? \"stretch\" : \"center\",\r\n    }\r\n  }\r\n)\r\n\r\nconst StyledContainer = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    overfowY: \"hidden\",\r\n    padding: theme.spacing(2),\r\n    height: \"85%\",\r\n    backgroundColor: theme.palette.background.default,\r\n  }\r\n})\r\n\r\nconst StyledHeader = styled(Paper)(({ theme }) => {\r\n  return {\r\n    padding: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  }\r\n})\r\n\r\nconst StyledTypography = styled(Typography)(({ theme }) => {\r\n  return {\r\n    color: theme.palette.primary.dark,\r\n  }\r\n})\r\n\r\n\r\nexport function getDayFromDate(date: string) {\r\n  let parts = date.split(' ');\r\n  let months = [\"Jan\",  \r\n  \"Feb\" ,\r\n  \"Mar\",    \r\n  \"Apr\" ,   \r\n  \"May\"  ,    \r\n  \"Jun\",     \r\n  \"Jul\",     \r\n  \"Aug\" ,  \r\n  \"Sep\",\r\n  \"Oct\"  ,\r\n  \"Nov\" ,\r\n  \"Dec\" ]\r\n  let month = months.findIndex((m)=> m==parts[1])+1\r\n  let year = parts[5]\r\n  let day = parts[2]\r\n  let time = parts[3].split(':')\r\n  let hours  = parseInt(time[0])\r\n  let min = parseInt(time[1])\r\n  let sec = parseInt(time[2])\r\n  \r\n  const datee = new Date(parseInt(year), month, parseInt(day),hours,min, sec)\r\n  console.log(date, datee)\r\n\r\n  const momnt = moment(datee).format(\"DD/MM/YYYY\")\r\n  \r\n\r\n  return datee\r\n}\r\n\r\n\r\nexport interface DisplayTemplateProps<T> {\r\n  tableState: (data: never[]) => CustomPaginationTableState\r\n  newButtonText: string\r\n  rowClicked(id: number | string): void\r\n  newEntityUrl: string\r\n  pageTitle: string\r\n  showNewButton?: boolean\r\n  url: string\r\n  searchLabel: string\r\n  loadingLabel: string\r\n}\r\n\r\nexport default function DisplayTemplate<T>(props: DisplayTemplateProps<T>) {\r\n  const navigate = useNavigate()\r\n  const { user } = useContext(AuthContext)!\r\n  const theme = useTheme()\r\n\r\n  const [data, setData] = useState<any>([])\r\n  const [newProjects, setNewProjects]= useState<any>([])\r\n  // const [data, setData] = useState<T | null>(null)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [error, setError] = useState<string | null>()\r\n  const [search, setSearch] = useState(\"\")\r\n  const [pageNumber, setPageNumber] = useState(0)\r\n  const [pageCount, setPageCount] = useState(1)\r\n  const [didSearchChange, setDidSearchChange] = useState(false)\r\n  const [sortValue, setSortValue] = useState('none');\r\n\r\n  \r\n//  function localGetProjectStatus(id: number | string){\r\n\r\n  \r\n//  return api<any>(\r\n//     getProjectStatus(id!),\r\n//     HttpMethods.Get,\r\n//     null,\r\n//     { Authorization: `Bearer ${user?.tokenStr}` },\r\n//     \"Something went wrong\",\r\n//     true\r\n//   )\r\n//     // .then((data) => {\r\n//     //   console.log(\"FROM ALL Projects\", data)\r\n//     //   if(data==true){\r\n//     //     return \"Complete\"\r\n//     //   }else{\r\n//     //     return \"Active\"\r\n       \r\n//     //   }\r\n     \r\n//     // })\r\n//     // .catch((e) => {\r\n//     //   console.log(e)\r\n//     // })\r\n\r\n// }\r\n//  async function returnProjectsWithStatus(projects: any[]){\r\n\r\n//   let newProjects: any = [] ;\r\n\r\n//   projects.forEach(async (proj) => {\r\n//    await localGetProjectStatus(proj.id).then((data) => {\r\n//       console.log(\"from the promise\", data)\r\n//       let status;\r\n//       if(data==true){\r\n//         status= \"Complete\"\r\n//       }else{\r\n//         status= \"Active\"\r\n       \r\n//       }\r\n\r\n//       let project = {\r\n//         ...proj,\r\n//         status: status\r\n//       }\r\n//       newProjects.push(project)\r\n//     })\r\n//   });\r\n\r\n//   setData(newProjects)\r\n\r\n \r\n//  /// return newProjects;\r\n\r\n// }\r\n\r\n\r\n  console.log(\"projects\",data)\r\n\r\n  const getData = async (pageNum: number) => {\r\n    try {\r\n      setIsLoading(true)\r\n      const res: any = await api<PagingDto<T>>(\r\n        props.url,\r\n        HttpMethods.Post,\r\n        { page_number: pageNum, search: search },\r\n        {\r\n          Authorization: `Bearer ${user?.tokenStr}`,\r\n        },\r\n        \"Something went wrong\",\r\n        true\r\n      )\r\n      console.log('DATAAA',res!.data)\r\n     // var date = \"Sun Jan 16 00:00:00 EET 2022\"\r\n      //console.log(\"Date\", new Date(getDayFromDate(date)))\r\n      \r\n      setData(res!.data)\r\n      setPageCount(res!.page_count)\r\n      setPageNumber(res!.current_page)\r\n      setIsLoading(false)\r\n      setDidSearchChange(false)\r\n    } catch (e: any) {\r\n      setIsLoading(false)\r\n      setError(e.message)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData(0)\r\n  }, [])\r\n\r\n  const movePageCallback = async (type: PaginationActionType, page?: number) => {\r\n\r\n\r\n    switch (type) {\r\n      case PaginationActionType.Input:{\r\n        if (page == null || page == undefined || page == NaN) {\r\n          break\r\n        }else{\r\n          getData(page!!)\r\n          break\r\n        }\r\n  \r\n      }\r\n      case PaginationActionType.First: {\r\n        getData(0)\r\n        break\r\n      }\r\n      case PaginationActionType.Previous: {\r\n        let newPage\r\n        if (!didSearchChange) {\r\n          newPage = pageNumber - 1\r\n        } else {\r\n          newPage = 0\r\n        }\r\n        // const newPage = pageNumber - 1\r\n        getData(newPage)\r\n        break\r\n      }\r\n      case PaginationActionType.Next: {\r\n        let newPage\r\n        if (!didSearchChange) {\r\n          newPage = pageNumber + 1\r\n        } else {\r\n          newPage = 0\r\n        }\r\n\r\n        //const newPage = pageNumber + 1\r\n        getData(newPage)\r\n        break\r\n      }\r\n      case PaginationActionType.Last: {\r\n        let newPage\r\n        if (!didSearchChange) {\r\n          newPage = pageCount - 1\r\n        } else {\r\n          newPage = 0\r\n        }\r\n        getData(newPage)\r\n        break\r\n      }\r\n      default: {\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  console.log(\"props.tableState(data)\", props.tableState(data))\r\n\r\n  const handleSortingChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSortValue((event.target as HTMLInputElement).value);\r\n    let currentSortValue = (event.target as HTMLInputElement).value;\r\n    let sortedDataa;\r\n\r\n\r\n    \r\n    switch (currentSortValue) {\r\n      case 'none':\r\n        getData(0)\r\n        break;\r\n      case 'status':\r\n        console.log(\"DATA\",data)\r\n        sortedDataa = data!.sort((a: any,b: any)=>{\r\n          console.log(\"a.status:\", a.is_draft); \r\n          if(a.is_draft == true && b.is_draft == false){return -1}\r\n          if(a.is_draft == false && b.is_draft == true){return 1}\r\n          return 0\r\n        })\r\n        setData(sortedDataa);\r\n        break;\r\n      case 'deliveryDate':\r\n        sortedDataa = data!.sort((a: any,b: any)=>{ \r\n          let dateA = getDayFromDate(a.estimated_delivery)\r\n         let dateB = getDayFromDate(b.estimated_delivery)\r\n         console.log(\"dateA\", getDayFromDate(b.estimated_delivery).getDate())\r\n         if(dateA < dateB){\r\n            return -1;\r\n          }\r\n          if(dateA > dateB){\r\n            return 1;\r\n          }\r\n          return 0;\r\n        })\r\n        setData(sortedDataa);\r\n      break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n\r\n\r\n\r\n    \r\n  };\r\n\r\n\r\n\r\n\r\n \r\n    if(props.pageTitle == \"Task Templates\"){\r\n      return (\r\n        <MainContainer dataloaded={!isLoading && !error && data !== null}>\r\n        {isLoading && <Loading text={props.loadingLabel} />}\r\n        {error && <ErrorComponent text={error} />}\r\n        {!isLoading && !error && data && (\r\n          <StyledContainer>\r\n            <StyledHeader elevation={0}>\r\n              <StyledTypography variant=\"h4\">{props.pageTitle}</StyledTypography>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  alignItems: \"center\",\r\n                  marginRight: theme.spacing(3),\r\n                }}\r\n              >\r\n              \r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  value={search}\r\n                  label={props.searchLabel}\r\n                  onChange={(e) => {\r\n                    setDidSearchChange(true)\r\n                    setSearch(e.target.value)\r\n                  }}\r\n                />\r\n  \r\n                <IconButton\r\n                  onClick={async () => {\r\n                    setPageNumber(0)\r\n                    await getData(0)\r\n                  }}\r\n                  style={{ marginLeft: theme.spacing(1) }}\r\n                >\r\n                  <SearchRoundedIcon\r\n                    style={{ color: theme.palette.primary.main }}\r\n                  />\r\n                </IconButton>\r\n              </div>\r\n            </StyledHeader>\r\n       \r\n            <LivePaginationTable\r\n              currentPage={pageNumber}\r\n              pageCount={pageCount}\r\n              movePage={movePageCallback}\r\n              onRowClick={props.rowClicked}\r\n              table={props.tableState(data)}\r\n            />\r\n            {(props.showNewButton === true ||\r\n              props.showNewButton === undefined) && (\r\n              <StyledFab\r\n                variant=\"extended\"\r\n                onClick={() => {\r\n                  navigate(props.newEntityUrl)\r\n                }}\r\n              >\r\n                <AddCircleRoundedIcon sx={{ mr: 1 }} />\r\n                {props.newButtonText}\r\n              </StyledFab>\r\n            )}\r\n          </StyledContainer>\r\n        )}\r\n      </MainContainer>\r\n    )\r\n  \r\n    }else{\r\n      return (\r\n      <MainContainer dataloaded={!isLoading && !error && data !== null}>\r\n      {isLoading && <Loading text={props.loadingLabel} />}\r\n      {error && <ErrorComponent text={error} />}\r\n      {!isLoading && !error && data && (\r\n        <StyledContainer>\r\n          <StyledHeader elevation={0}>\r\n            <StyledTypography variant=\"h4\">{props.pageTitle}</StyledTypography>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n                marginRight: theme.spacing(3),\r\n              }}\r\n            >\r\n               <FormControl>\r\n                 <FormLabel id=\"demo-row-radio-buttons-group-label\">Sort By:</FormLabel>\r\n                   <RadioGroup\r\n                    row\r\n                    aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                    name=\"row-radio-buttons-group\"\r\n                    value={sortValue}\r\n                   onChange={handleSortingChange}\r\n               >\r\n                 <FormControlLabel value=\"none\" control={<Radio />} label=\"None\" />\r\n                 <FormControlLabel value=\"status\" control={<Radio />} label=\"status\" />\r\n                  <FormControlLabel value=\"deliveryDate\" control={<Radio />} label=\"Delivery Date\" />\r\n               \r\n               </RadioGroup>\r\n            </FormControl>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                value={search}\r\n                label={props.searchLabel}\r\n                onChange={(e) => {\r\n                  setDidSearchChange(true)\r\n                  setSearch(e.target.value)\r\n                }}\r\n              />\r\n\r\n              <IconButton\r\n                onClick={async () => {\r\n                  setPageNumber(0)\r\n                  await getData(0)\r\n                }}\r\n                style={{ marginLeft: theme.spacing(1) }}\r\n              >\r\n                <SearchRoundedIcon\r\n                  style={{ color: theme.palette.primary.main }}\r\n                />\r\n              </IconButton>\r\n            </div>\r\n          </StyledHeader>\r\n     \r\n          <LivePaginationTable\r\n            currentPage={pageNumber}\r\n            pageCount={pageCount}\r\n            movePage={movePageCallback}\r\n            onRowClick={props.rowClicked}\r\n            table={props.tableState(data)}\r\n          />\r\n          {(props.showNewButton === true ||\r\n            props.showNewButton === undefined) && (\r\n            <StyledFab\r\n              variant=\"extended\"\r\n              onClick={() => {\r\n                navigate(props.newEntityUrl)\r\n              }}\r\n            >\r\n              <AddCircleRoundedIcon sx={{ mr: 1 }} />\r\n              {props.newButtonText}\r\n            </StyledFab>\r\n          )}\r\n        </StyledContainer>\r\n      )}\r\n    </MainContainer>\r\n  )\r\n\r\n    }\r\n   \r\n\r\n}\r\n","import { styled } from \"@mui/material/styles\"\r\nimport { useNavigate } from \"react-router\"\r\nimport { getAllClientsUrl, MinifiedClient } from \"../api/ClientsApi\"\r\nimport { CustomPaginationTableRow } from \"../components/reusable/CustomPaginationTable\"\r\nimport DisplayTemplate from \"../components/templates/DisplayTemplate\"\r\nimport CheckCircleRoundedIcon from \"@mui/icons-material/CheckCircleRounded\"\r\nimport green from \"@mui/material/colors/green\"\r\nimport CancelRoundedIcon from \"@mui/icons-material/CancelRounded\"\r\nimport red from \"@mui/material/colors/red\"\r\n\r\nconst MainContainer = styled(\"div\")(() => {\r\n  return {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"stretch\",\r\n  }\r\n})\r\n\r\nexport default function ClientsScreen() {\r\n  const navigate = useNavigate()\r\n\r\n  const getTableState = (data: MinifiedClient[]) => {\r\n    const headers: string[] = [\r\n      \"Code\",\r\n      \"Description\",\r\n      \"Currency\",\r\n      \"Supervisor\",\r\n      \"Status\",\r\n    ]\r\n    const rows: CustomPaginationTableRow[] = data.map((client) => {\r\n      return {\r\n        id: client.client_code,\r\n        cells: [\r\n          client.client_code,\r\n          client.description,\r\n          client.currency,\r\n          client.supervisor_code,\r\n          client.is_active ? (\r\n            <CheckCircleRoundedIcon style={{ color: green[700] }} />\r\n          ) : (\r\n            <CancelRoundedIcon style={{ color: red[700] }} />\r\n          ),\r\n        ],\r\n      }\r\n    })\r\n\r\n    return {\r\n      heads: headers,\r\n      rows,\r\n    }\r\n  }\r\n\r\n  return (\r\n    <MainContainer>\r\n      <DisplayTemplate\r\n        searchLabel=\"Search descriptions..\"\r\n        loadingLabel=\"Loading Clients..\"\r\n        url={getAllClientsUrl}\r\n        newButtonText=\"New Client\"\r\n        newEntityUrl=\"/clients/new\"\r\n        tableState={(data) => getTableState(data as MinifiedClient[])}\r\n        rowClicked={(id) => {\r\n          navigate(`/clients/${id}`)\r\n        }}\r\n        pageTitle=\"Clients\"\r\n      />\r\n    </MainContainer>\r\n  )\r\n}\r\n","import Box from \"@mui/material/Box\"\r\nimport Button from \"@mui/material/Button\"\r\nimport FormControl from \"@mui/material/FormControl\"\r\nimport InputLabel from \"@mui/material/InputLabel\"\r\nimport MenuItem from \"@mui/material/MenuItem\"\r\nimport Select from \"@mui/material/Select\"\r\nimport { SelectChangeEvent } from \"@mui/material/Select/SelectInput\"\r\nimport { styled } from \"@mui/material/styles\"\r\nimport TextField from \"@mui/material/TextField\"\r\nimport Typography from \"@mui/material/Typography\"\r\nimport { ChangeEvent, useState } from \"react\"\r\nimport { InputContainer, TransparentStyledPaper } from \"../StyledComponents\"\r\nimport {\r\n  DynamicFormElement,\r\n  DynamicFormState,\r\n  FormElementType,\r\n} from \"./FormModels\"\r\n\r\nexport interface CustomDynamicFormProps {\r\n  formElements: DynamicFormElement[]\r\n  submitForm(state: DynamicFormState[]): Promise<void>\r\n  buttonText: string\r\n  gridTempCol: string\r\n}\r\n\r\nconst StyledForm = styled(\"form\")<{ tempcol: string }>(({ theme, tempcol }) => {\r\n  return {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: tempcol,\r\n    gap: theme.spacing(1),\r\n  }\r\n})\r\n\r\nexport default function CustomDynamicForm(props: CustomDynamicFormProps) {\r\n  // state\r\n  const [formElementsState, setFormElementsState] = useState<\r\n    DynamicFormState[]\r\n  >(() => {\r\n    return (\r\n      props.formElements.map((element) => {\r\n        return {\r\n          element: element,\r\n          value: element.initialValue ?? \"\",\r\n          error: false,\r\n        }\r\n      }) ?? []\r\n    )\r\n  })\r\n\r\n  const changeTextControlValue = (\r\n    e: ChangeEvent<HTMLInputElement>,\r\n    id: string\r\n  ) => {\r\n    let newValue = e.target.value\r\n    const newState = [...formElementsState]\r\n    const targetControl = newState.find((e) => e.element.id === id)\r\n    if (targetControl?.element.removeWhiteSpaces) {\r\n      newValue = newValue.replace(\" \", \"\")\r\n    }\r\n    targetControl!.value = newValue\r\n    setFormElementsState(newState)\r\n  }\r\n\r\n  const handleDropDownChange = (e: SelectChangeEvent<string>, id: string) => {\r\n    const newValue = e.target.value\r\n    const newState = [...formElementsState]\r\n    const targetControl = newState.find((e) => e.element.id === id)\r\n    targetControl!.value = newValue\r\n    setFormElementsState(newState)\r\n  }\r\n\r\n  const submit = async () => {\r\n    formElementsState.forEach((state) => {\r\n      const newState = [...formElementsState]\r\n      const targetControl = newState.find(\r\n        (e) => e.element.id === state.element.id\r\n      )\r\n      targetControl!.error = state.element.required && state.value.length < 1\r\n      setFormElementsState(newState)\r\n    })\r\n\r\n    if (!formElementsState.some((state) => state.error)) {\r\n      await props.submitForm(formElementsState)\r\n    }\r\n  }\r\n\r\n  const getElements = () => {\r\n    return formElementsState.map((state) => {\r\n      return (\r\n        <InputContainer key={state.element.id}>\r\n          <Typography style={{ flex: 1 }}>\r\n            {state.element.label}:&nbsp;&nbsp;\r\n          </Typography>\r\n\r\n          <div style={{ flex: 4 }}>\r\n            {state.element.type === FormElementType.Text && (\r\n              <TextField\r\n                disabled={!state.element.editable}\r\n                id={state.element.id}\r\n                variant={state.element.variant}\r\n                required={state.element.required}\r\n                type=\"text\"\r\n                value={state.value}\r\n                label={state.element.label}\r\n                color=\"secondary\"\r\n                fullWidth={state.element.fullWidth}\r\n                error={state.error}\r\n                onChange={(e: ChangeEvent<HTMLInputElement>) =>\r\n                  changeTextControlValue(e, state.element.id)\r\n                }\r\n              />\r\n            )}\r\n            {state.element.type === FormElementType.Password && (\r\n              <TextField\r\n                disabled={!state.element.editable}\r\n                id={state.element.id}\r\n                variant={state.element.variant}\r\n                required={state.element.required}\r\n                type=\"password\"\r\n                value={state.value}\r\n                label={state.element.label}\r\n                color=\"secondary\"\r\n                fullWidth={state.element.fullWidth}\r\n                error={state.error}\r\n                onChange={(e: ChangeEvent<HTMLInputElement>) =>\r\n                  changeTextControlValue(e, state.element.id)\r\n                }\r\n              />\r\n            )}\r\n            {state.element.type === FormElementType.TextArea && (\r\n              <TextField\r\n                multiline\r\n                rows={2}\r\n                disabled={!state.element.editable}\r\n                id={state.element.id}\r\n                variant={state.element.variant}\r\n                required={state.element.required}\r\n                type=\"text\"\r\n                value={state.value}\r\n                label={state.element.label}\r\n                color=\"secondary\"\r\n                fullWidth={state.element.fullWidth}\r\n                error={state.error}\r\n                onChange={(e: ChangeEvent<HTMLInputElement>) =>\r\n                  changeTextControlValue(e, state.element.id)\r\n                }\r\n              />\r\n            )}\r\n            {state.element.type === FormElementType.Number && (\r\n              <TextField\r\n                disabled={!state.element.editable}\r\n                id={state.element.id}\r\n                variant={state.element.variant}\r\n                required={state.element.required}\r\n                type=\"number\"\r\n                value={state.value}\r\n                label={state.element.label}\r\n                color=\"secondary\"\r\n                fullWidth={state.element.fullWidth}\r\n                error={state.error}\r\n                onChange={(e: ChangeEvent<HTMLInputElement>) =>\r\n                  changeTextControlValue(e, state.element.id)\r\n                }\r\n              />\r\n            )}\r\n            {state.element.type === FormElementType.Dropdown && (\r\n              <Box sx={{ minWidth: 120 }}>\r\n                <FormControl fullWidth={state.element.fullWidth}>\r\n                  <InputLabel id={state.element.id + \"-label\"}>\r\n                    {state.element.label}\r\n                  </InputLabel>\r\n                  <Select\r\n                    disabled={!state.element.editable}\r\n                    error={state.error}\r\n                    labelId={state.element.id + \"-label\"}\r\n                    id={state.element.id}\r\n                    value={state.value}\r\n                    label={state.element.label}\r\n                    onChange={(e) => handleDropDownChange(e, state.element.id)}\r\n                  >\r\n                    {state.element.values!.map((value) => {\r\n                      return (\r\n                        <MenuItem key={value.id} value={value.id}>\r\n                          {value.description}\r\n                        </MenuItem>\r\n                      )\r\n                    })}\r\n                  </Select>\r\n                </FormControl>\r\n              </Box>\r\n            )}\r\n          </div>\r\n        </InputContainer>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <TransparentStyledPaper>\r\n      <StyledForm tempcol={props.gridTempCol} noValidate autoComplete=\"off\">\r\n        {getElements()}\r\n      </StyledForm>\r\n      <Button\r\n        style={{\r\n          height: \"60px\",\r\n          width: \"240px\",\r\n          justifySelf: \"center\",\r\n          alignSelf: \"center\",\r\n          marginTop: \"1rem\",\r\n        }}\r\n        variant=\"contained\"\r\n        type=\"submit\"\r\n        onClick={() => submit()}\r\n      >\r\n        {props.buttonText}\r\n      </Button>\r\n    </TransparentStyledPaper>\r\n  )\r\n}\r\n","import { Divider, Paper, Typography } from \"@mui/material\"\r\nimport { grey } from \"@mui/material/colors\"\r\nimport { styled } from \"@mui/material/styles\"\r\nimport CustomDynamicForm from \"../form/CustomDynamicForm\"\r\nimport { DynamicFormElement, DynamicFormState } from \"../form/FormModels\"\r\nimport { StyledDivider } from \"../StyledComponents\"\r\n\r\nconst MainContainer = styled(Paper)(({ theme }) => {\r\n  return {\r\n    width: \"95%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignSelf: \"center\",\r\n    justifyContent: \"flex-start\",\r\n    paddingTop: theme.spacing(3),\r\n    backgroundColor:\r\n      theme.palette.mode == \"light\"\r\n        ? grey[200]\r\n        : theme.palette.background.paper,\r\n  }\r\n})\r\n\r\nconst StyledTypo = styled(Typography)(({ theme }) => {\r\n  return {\r\n    marginRight: theme.spacing(3),\r\n    marginLeft: theme.spacing(3),\r\n  }\r\n})\r\n\r\nexport interface CreateTemplateProps {\r\n  title: string\r\n  formElements: DynamicFormElement[]\r\n  submitForm(state: DynamicFormState[]): Promise<void>\r\n  buttonText: string\r\n  gridTempCol: string\r\n}\r\nexport default function CreateTemplate(props: CreateTemplateProps) {\r\n  return (\r\n    <MainContainer>\r\n      <StyledTypo gutterBottom variant=\"h4\">\r\n        {props.title}\r\n      </StyledTypo>\r\n      <StyledDivider />\r\n      <CustomDynamicForm\r\n        buttonText=\"Add\"\r\n        formElements={props.formElements}\r\n        submitForm={props.submitForm}\r\n        gridTempCol={props.gridTempCol}\r\n      />\r\n    </MainContainer>\r\n  )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { api, HttpMethods } from \"../api/ApiControllers\"\r\n\r\nfunction useFetch<T>(\r\n  url: string,\r\n  method: HttpMethods,\r\n  body?: any,\r\n  headers?: any\r\n) {\r\n  const [data, setData] = useState<T | null>(null)\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [error, setError] = useState<string | null>(null)\r\n\r\n  useEffect(() => {\r\n    api<T>(url, method, body, headers)\r\n      .then((resData) => {\r\n        setData(resData!)\r\n        setIsLoading(false)\r\n        setError(null)\r\n      })\r\n      .catch((e) => {\r\n        setIsLoading(false)\r\n        setError(e.message)\r\n      })\r\n  }, [])\r\n\r\n  return { data, isLoading, error }\r\n}\r\n\r\nexport default useFetch\r\n","import { grey, red } from \"@mui/material/colors\"\r\nimport { useContext, useState } from \"react\"\r\nimport { useNavigate } from \"react-router\"\r\nimport { api, HttpMethods } from \"../api/ApiControllers\"\r\nimport { CriteriaType, PropertyInputType } from \"../api/ApiModels\"\r\nimport {\r\n  ClientInit,\r\n  getNewClientInitUrl,\r\n  NewClientRequest,\r\n  newClientUrl,\r\n} from \"../api/ClientsApi\"\r\nimport {\r\n  getInitUserUrl,\r\n  InitUser,\r\n  NewUserRequest,\r\n  newUserUrl,\r\n} from \"../api/UsersApi\"\r\nimport AlertDialog from \"../components/dialogs/AlertDialog\"\r\nimport ErrorComponent from \"../components/ErrorComponent\"\r\nimport {\r\n  DynamicFormElement,\r\n  DynamicFormState,\r\n  DynamicSelectElement,\r\n  FormElementType,\r\n  FormFieldModelType,\r\n} from \"../components/form/FormModels\"\r\nimport Loading from \"../components/Loading\"\r\nimport { ScreenContainer } from \"../components/StyledComponents\"\r\nimport CreateTemplate from \"../components/templates/CreateTemplate\"\r\nimport { AuthContext } from \"../contexts/AuthContext\"\r\nimport useFetch from \"../hooks/useFetch\"\r\n\r\nexport default function NewClientScreen() {\r\n  const { user } = useContext(AuthContext)!\r\n  const navigate = useNavigate()\r\n\r\n  const {\r\n    data,\r\n    isLoading: isInitLoading,\r\n    error,\r\n  } = useFetch<ClientInit>(getNewClientInitUrl, HttpMethods.Get, null, {\r\n    Authorization: `Bearer ${user?.tokenStr}`,\r\n  })\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [dialogOpen, setDialogOpen] = useState(false)\r\n  const [dialogTitle, setDialogTitle] = useState(\"\")\r\n  const [dialogContent, setDialogContent] = useState(\"\")\r\n\r\n  const getForm: () => DynamicFormElement[] = () => {\r\n    const elements: DynamicFormElement[] = [\r\n      {\r\n        id: \"client_code\",\r\n        db_id: \"client_code\",\r\n        editable: true,\r\n        formFieldModel: FormFieldModelType.Main,\r\n        label: \"Client username\",\r\n        required: true,\r\n        type: FormElementType.Text,\r\n        fullWidth: true,\r\n        sortOrder: 1,\r\n        variant: \"outlined\",\r\n      },\r\n      {\r\n        id: \"description\",\r\n        db_id: \"description\",\r\n        editable: true,\r\n        formFieldModel: FormFieldModelType.Main,\r\n        label: \"Description\",\r\n        required: true,\r\n        type: FormElementType.Text,\r\n        fullWidth: true,\r\n        sortOrder: 2,\r\n        variant: \"outlined\",\r\n      },\r\n    ]\r\n\r\n    const criteria: DynamicFormElement[] =\r\n      data!.criteria.map<DynamicFormElement>((criterion, index) => {\r\n        return {\r\n          id: \"criteria_\" + criterion.criteria_id.toString(),\r\n          db_id: criterion.criteria_id.toString(),\r\n          editable: criterion.is_editable,\r\n          formFieldModel: FormFieldModelType.Criteria,\r\n          label: criterion.description,\r\n          required: criterion.is_required,\r\n          type: FormElementType.fromCriteriaType(\r\n            CriteriaType.parse(criterion.criteria_type)\r\n          )!,\r\n          fullWidth: true,\r\n          sortOrder: 4 + index,\r\n          variant: \"outlined\",\r\n          values: criterion.criteria_values.map<DynamicSelectElement>((cv) => {\r\n            return {\r\n              id: cv.criteria_value_id.toString(),\r\n              description: cv.description,\r\n            }\r\n          }),\r\n        }\r\n      })\r\n\r\n    const properties: DynamicFormElement[] = data!.properties.map(\r\n      (property, index) => {\r\n        return {\r\n          id: \"property_\" + property.id.toString(),\r\n          db_id: property.id.toString(),\r\n          editable: property.is_editable,\r\n          formFieldModel: FormFieldModelType.Property,\r\n          label: property.description,\r\n          required: property.is_required,\r\n          type: FormElementType.fromPropertyInputType(\r\n            PropertyInputType.parse(property.input_type)\r\n          )!,\r\n          fullWidth: true,\r\n          sortOrder: 4 + (data?.properties?.length ?? 0) + index,\r\n          variant: \"outlined\",\r\n        }\r\n      }\r\n    )\r\n\r\n    // currency drop down\r\n    const currency: DynamicFormElement = {\r\n      id: \"currency_code\",\r\n      db_id: \"currency_code\",\r\n      editable: true,\r\n      formFieldModel: FormFieldModelType.Criteria,\r\n      label: \"Currency\",\r\n      required: true,\r\n      type: FormElementType.Dropdown,\r\n      fullWidth: true,\r\n      sortOrder: 1,\r\n      variant: \"outlined\",\r\n      values: data?.currencies.map<DynamicSelectElement>((curr) => {\r\n        return {\r\n          id: curr.currency_code,\r\n          description: curr.currency_symbol,\r\n        }\r\n      }),\r\n    }\r\n\r\n    // sales rep\r\n    const sales: DynamicFormElement = {\r\n      id: \"sales_representative\",\r\n      db_id: \"sales_representative\",\r\n      editable: true,\r\n      formFieldModel: FormFieldModelType.Criteria,\r\n      label: \"Sales Rep.\",\r\n      required: true,\r\n      type: FormElementType.Dropdown,\r\n      fullWidth: true,\r\n      sortOrder: 1,\r\n      variant: \"outlined\",\r\n      values: data?.sales_representatives.map<DynamicSelectElement>((rep) => {\r\n        return {\r\n          id: rep.user_code,\r\n          description: rep.description,\r\n        }\r\n      }),\r\n    }\r\n\r\n    // TODO country\r\n    const address: DynamicFormElement = {\r\n      id: \"address_code\",\r\n      db_id: \"address_code\",\r\n      editable: true,\r\n      formFieldModel: FormFieldModelType.Criteria,\r\n      label: \"Country\",\r\n      required: true,\r\n      type: FormElementType.Dropdown,\r\n      fullWidth: true,\r\n      sortOrder: 1,\r\n      variant: \"outlined\",\r\n      values: data?.addresses.map<DynamicSelectElement>((add) => {\r\n        return {\r\n          id: add.address_code,\r\n          description: add.description,\r\n        }\r\n      }),\r\n    }\r\n\r\n    elements.push(...criteria)\r\n    elements.push(...properties)\r\n    elements.push(currency)\r\n    elements.push(sales)\r\n    elements.push(address)\r\n\r\n    return elements\r\n  }\r\n\r\n  const submitForm = async (state: DynamicFormState[]) => {\r\n    // filtering the elements\r\n    const main = state.filter(\r\n      (element) => element.element.formFieldModel === FormFieldModelType.Main\r\n    )\r\n    const props = state.filter(\r\n      (element) =>\r\n        element.element.formFieldModel === FormFieldModelType.Property\r\n    )\r\n    const criteria = state.filter(\r\n      (element) =>\r\n        element.element.formFieldModel === FormFieldModelType.Criteria\r\n    )\r\n\r\n    // constructing the body\r\n    const body: NewClientRequest = {\r\n      client_code: main.find((e) => e.element.id === \"client_code\")!.value,\r\n      description: main.find((e) => e.element.id === \"description\")!.value,\r\n      properties: props.map((prop) => {\r\n        return {\r\n          property_id: prop.element.db_id as number,\r\n          description: prop.value,\r\n        }\r\n      }),\r\n      criteria: criteria\r\n        .map((cr) => {\r\n          return {\r\n            client_criteria_value_id: Number(cr.value),\r\n          }\r\n        })\r\n        .filter((e) => !Number.isNaN(e.client_criteria_value_id)),\r\n      sales_representative: criteria.find(\r\n        (e) => e.element.id === \"sales_representative\"\r\n      )!.value,\r\n      currency_code: criteria.find((e) => e.element.id === \"currency_code\")!\r\n        .value,\r\n      address_code: criteria.find((e) => e.element.id === \"address_code\")!\r\n        .value,\r\n    }\r\n    console.log(body)\r\n\r\n    // api call\r\n    try {\r\n      setIsLoading(true)\r\n      await api(\r\n        newClientUrl,\r\n        HttpMethods.Post,\r\n        body,\r\n        {\r\n          Authorization: `Bearer ${user?.tokenStr}`,\r\n        },\r\n        undefined,\r\n        false\r\n      )\r\n\r\n      navigate(\"/clients\")\r\n    } catch (e: any) {\r\n      setDialogTitle(\"Something went wrong\")\r\n      setDialogContent(e.message)\r\n      setDialogOpen(true)\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ScreenContainer\r\n      isDataLoaded={!isInitLoading && !isLoading && !error && data !== null}\r\n    >\r\n      {isInitLoading && <Loading text=\"Loading Schema..\" />}\r\n      {error && <ErrorComponent text={error} />}\r\n      {isLoading && <Loading text=\"Creating Client\" />}\r\n      {data && !isLoading && !isInitLoading && (\r\n        <CreateTemplate\r\n          buttonText=\"Add\"\r\n          formElements={getForm()}\r\n          gridTempCol=\"1fr 1fr\"\r\n          submitForm={submitForm}\r\n          title=\"New Client\"\r\n        />\r\n      )}\r\n      <AlertDialog\r\n        content={dialogContent}\r\n        isOpen={dialogOpen}\r\n        title={dialogTitle}\r\n        onClose={() => setDialogOpen(false)}\r\n      />\r\n    </ScreenContainer>\r\n  )\r\n}\r\n","import { domainName } from \"../constants/Config\"\r\nimport { Criteria, Property, Role } from \"./ApiModels\"\r\n\r\nexport interface MinifiedUser {\r\n  user_code: string\r\n  description?: string\r\n  email?: string\r\n  roles: Role[]\r\n  is_active: boolean\r\n}\r\n\r\nexport const getAllUsersUrl = domainName + \"/api/user/all\"\r\n\r\nexport interface InitUser {\r\n  properties: Property[]\r\n  criteria: Criteria[]\r\n  roles: Role[]\r\n}\r\n\r\nexport const getInitUserUrl = domainName + \"/api/user/init\"\r\n\r\nexport interface NewUserRequest {\r\n  user_code: string\r\n  description: string\r\n  password: string\r\n  email: string\r\n  properties: {\r\n    property_id: number\r\n    description: string\r\n  }[]\r\n  criteria: {\r\n    user_criteria_value_id: number\r\n  }[]\r\n  roles: number[]\r\n}\r\n\r\nexport const newUserUrl = domainName + \"/api/user/new\"\r\n\r\nexport const getUserUrl = (id: string | number) =>\r\n  domainName + `/api/user/${id}`\r\n\r\nexport interface UserWithTemplate {\r\n  user: {\r\n    user_code: string\r\n    description: string\r\n    email: string\r\n    is_active: boolean\r\n    criteria_values: {\r\n      criteria_value_id: number\r\n      criteria_id: number\r\n      description: string\r\n    }[]\r\n    roles: {\r\n      role_id: number\r\n      role_name: string\r\n    }[]\r\n    properties: {\r\n      property_id: number\r\n      description: string\r\n    }[]\r\n  }\r\n  template: InitUser\r\n}\r\n\r\nexport interface UpdateUser {\r\n  description: string\r\n  email: string\r\n  is_active: boolean\r\n  properties: {\r\n    property_id: number\r\n    description: string\r\n  }[]\r\n  criteria: {\r\n    user_criteria_value_id: number\r\n  }[]\r\n}\r\n","import { styled } from \"@mui/material/styles\"\r\nimport { useNavigate } from \"react-router\"\r\nimport { getAllUsersUrl, MinifiedUser } from \"../api/UsersApi\"\r\nimport { CustomPaginationTableRow } from \"../components/reusable/CustomPaginationTable\"\r\nimport DisplayTemplate from \"../components/templates/DisplayTemplate\"\r\nimport CheckCircleRoundedIcon from \"@mui/icons-material/CheckCircleRounded\"\r\nimport green from \"@mui/material/colors/green\"\r\nimport CancelRoundedIcon from \"@mui/icons-material/CancelRounded\"\r\nimport red from \"@mui/material/colors/red\"\r\nimport { Button, useTheme } from \"@mui/material\"\r\nimport { useContext, useState } from \"react\"\r\nimport { api, HttpMethods } from \"../api/ApiControllers\"\r\nimport { domainName } from \"../constants/Config\"\r\nimport { AuthContext } from \"../contexts/AuthContext\"\r\nimport AlertDialog from \"../components/dialogs/AlertDialog\"\r\n\r\nconst MainContainer = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"stretch\",\r\n  }\r\n})\r\n\r\nexport default function UsersScreen() {\r\n  const navigate = useNavigate()\r\n  const theme = useTheme()\r\n  const { user } = useContext(AuthContext)!\r\n\r\n  const [buttonEnable, setButtonEnable] = useState(true)\r\n  const [error, setError] = useState(\"\")\r\n  const [dialogOpen, setDialogOpen] = useState(false)\r\n\r\n  const getTableState = (data: MinifiedUser[]) => {\r\n    const headers: string[] = [\r\n      \"Code\",\r\n      \"Description\",\r\n      \"Email\",\r\n      \"Roles\",\r\n      \"Status\",\r\n    ]\r\n    const rows: CustomPaginationTableRow[] = data.map((user) => {\r\n      return {\r\n        id: user.user_code,\r\n        cells: [\r\n          user.user_code,\r\n          user.description ?? \"N/A\",\r\n          user.email ?? \"N/A\",\r\n          user.roles.map((e) => e.role_name).join(\",\"),\r\n          user.is_active ? (\r\n            <CheckCircleRoundedIcon style={{ color: green[700] }} />\r\n          ) : (\r\n            <CancelRoundedIcon style={{ color: red[700] }} />\r\n          ),\r\n        ],\r\n      }\r\n    })\r\n\r\n    return {\r\n      heads: headers,\r\n      rows,\r\n    }\r\n  }\r\n\r\n  return (\r\n    <MainContainer>\r\n      <DisplayTemplate\r\n        searchLabel=\"Search descriptions..\"\r\n        loadingLabel=\"Loading Users..\"\r\n        url={getAllUsersUrl}\r\n        newButtonText=\"New User\"\r\n        newEntityUrl=\"/users/new\"\r\n        tableState={(data) => getTableState(data as MinifiedUser[])}\r\n        rowClicked={(id) => {\r\n          navigate(`/users/${id}`)\r\n        }}\r\n        pageTitle=\"Users\"\r\n      />\r\n      <Button\r\n        disabled={!buttonEnable}\r\n        style={{ alignSelf: \"flex-start\", margin: theme.spacing(1) }}\r\n        onClick={async () => {\r\n          try {\r\n            setButtonEnable(false)\r\n            await api(\r\n              domainName + \"/api/validation/refresh\",\r\n              HttpMethods.Get,\r\n              null,\r\n              { Authorization: `Bearer ${user?.tokenStr}` },\r\n              \"Something went wrong\",\r\n              false\r\n            )\r\n          } catch (e: any) {\r\n            setError(e.message)\r\n            setDialogOpen(true)\r\n          }\r\n          setButtonEnable(true)\r\n        }}\r\n      >\r\n        Validate License\r\n      </Button>\r\n      <AlertDialog\r\n        isOpen={dialogOpen}\r\n        content={error}\r\n        title=\"Validation Error\"\r\n        onClose={() => setDialogOpen(false)}\r\n      />\r\n    </MainContainer>\r\n  )\r\n}\r\n","import { Divider, Paper, Typography } from \"@mui/material\"\r\nimport grey from \"@mui/material/colors/grey\"\r\nimport { styled } from \"@mui/material/styles\"\r\nimport CustomDynamicForm from \"../form/CustomDynamicForm\"\r\nimport { DynamicFormElement, DynamicFormState } from \"../form/FormModels\"\r\nimport { StyledDivider } from \"../StyledComponents\"\r\n\r\nconst MainContainer = styled(Paper)(({ theme }) => {\r\n  return {\r\n    width: \"95%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignSelf: \"center\",\r\n    justifyContent: \"flex-start\",\r\n    paddingTop: theme.spacing(3),\r\n    backgroundColor:\r\n      theme.palette.mode == \"light\"\r\n        ? grey[200]\r\n        : theme.palette.background.paper,\r\n  }\r\n})\r\n\r\nconst StyledTypo = styled(Typography)(({ theme }) => {\r\n  return {\r\n    marginRight: theme.spacing(3),\r\n    marginLeft: theme.spacing(3),\r\n  }\r\n})\r\n\r\nexport interface EditTemplateProps {\r\n  title: string\r\n  formElements: DynamicFormElement[]\r\n  submitForm(state: DynamicFormState[]): Promise<void>\r\n  gridTempCol: string\r\n}\r\n\r\nexport default function EditTemplate(props: EditTemplateProps) {\r\n  return (\r\n    <MainContainer>\r\n      <StyledTypo gutterBottom variant=\"h4\">\r\n        {props.title}\r\n      </StyledTypo>\r\n      <StyledDivider />\r\n      <CustomDynamicForm\r\n        buttonText=\"Update\"\r\n        formElements={props.formElements}\r\n        submitForm={props.submitForm}\r\n        gridTempCol={props.gridTempCol}\r\n      />\r\n    </MainContainer>\r\n  )\r\n}\r\n","import Button from \"@mui/material/Button\"\r\nimport Dialog from \"@mui/material/Dialog\"\r\nimport DialogActions from \"@mui/material/DialogActions\"\r\nimport DialogContent from \"@mui/material/DialogContent\"\r\nimport DialogTitle from \"@mui/material/DialogTitle\"\r\nimport Slide from \"@mui/material/Slide\"\r\nimport { TransitionProps } from \"@mui/material/transitions\"\r\nimport { forwardRef, useContext, useState } from \"react\"\r\nimport { styled, useTheme } from \"@mui/material/styles\"\r\nimport TextField from \"@mui/material/TextField\"\r\nimport {\r\n  checkPasswordValidation,\r\n  passwordHint,\r\n} from \"../../constants/MenuConstants\"\r\nimport CheckCircleRoundedIcon from \"@mui/icons-material/CheckCircleRounded\"\r\nimport Loading from \"../Loading\"\r\nimport Typography from \"@mui/material/Typography\"\r\nimport { api, HttpMethods } from \"../../api/ApiControllers\"\r\nimport { domainName } from \"../../constants/Config\"\r\nimport { AuthContext } from \"../../contexts/AuthContext\"\r\n\r\nconst Transition = forwardRef(function Transition(\r\n  props: TransitionProps & {\r\n    children: React.ReactElement<any, any>\r\n  },\r\n  ref: React.Ref<unknown>\r\n) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />\r\n})\r\n\r\nconst StyledTypo = styled(TextField)(({ theme }) => {\r\n  return {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  }\r\n})\r\n\r\nexport interface ChangeUserPasswordDialogProps {\r\n  isOpen: boolean\r\n  dismiss(): void\r\n  userCode: string\r\n}\r\n\r\nexport default function ChangeUserPasswordDialog(\r\n  props: ChangeUserPasswordDialogProps\r\n) {\r\n  // context\r\n  const { user } = useContext(AuthContext)!\r\n\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isSuccessful, setIsSuccessful] = useState(false)\r\n\r\n  const [password1, setPassword1] = useState(\"\")\r\n\r\n  const [password2, setPassword2] = useState(\"\")\r\n\r\n  const theme = useTheme()\r\n\r\n  const submitForm = async () => {\r\n    if (isButtonActive()) {\r\n      try {\r\n        setIsLoading(true)\r\n        await api(\r\n          domainName + `/api/user/${props.userCode}/change-password`,\r\n          HttpMethods.Post,\r\n          { new_password: password1 },\r\n          { Authorization: `Bearer ${user?.tokenStr}` },\r\n          undefined,\r\n          false\r\n        )\r\n        setIsLoading(false)\r\n        setIsSuccessful(true)\r\n        setTimeout(() => clear(), 200)\r\n      } catch (error: any) {\r\n        setIsLoading(false)\r\n        setIsSuccessful(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  function isButtonActive() {\r\n    return checkPasswordValidation(password1, password2)\r\n  }\r\n\r\n  function clear() {\r\n    props.dismiss()\r\n    setPassword1(\"\")\r\n    setPassword2(\"\")\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.isOpen}\r\n      TransitionComponent={Transition}\r\n      keepMounted\r\n      onClose={clear}\r\n      aria-describedby=\"alert-dialog-slide-description\"\r\n    >\r\n      {!isLoading && !isSuccessful && (\r\n        <>\r\n          <DialogTitle>Change Password</DialogTitle>\r\n          <Typography\r\n            style={{\r\n              marginLeft: theme.spacing(3),\r\n              marginRight: theme.spacing(3),\r\n            }}\r\n            gutterBottom\r\n            variant=\"caption\"\r\n          >\r\n            {passwordHint}\r\n          </Typography>\r\n        </>\r\n      )}\r\n      <DialogContent>\r\n        {isLoading && <Loading text=\"Changing Password\" />}\r\n        {!isLoading && isSuccessful && (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <CheckCircleRoundedIcon\r\n              style={{\r\n                color: theme.palette.success.main,\r\n                height: \"100px\",\r\n                width: \"100px\",\r\n              }}\r\n            />\r\n            <Typography>Password Changed Successfully</Typography>\r\n          </div>\r\n        )}\r\n        {!isLoading && !isSuccessful && (\r\n          <>\r\n            <StyledTypo\r\n              required\r\n              fullWidth\r\n              label=\"New Password\"\r\n              value={password1}\r\n              type=\"password\"\r\n              onChange={(e) => {\r\n                setPassword1(e.target.value)\r\n              }}\r\n            />\r\n            <StyledTypo\r\n              required\r\n              fullWidth\r\n              label=\"Re-enter Password\"\r\n              value={password2}\r\n              type=\"password\"\r\n              onChange={(e) => {\r\n                setPassword2(e.target.value)\r\n              }}\r\n              onSubmit={submitForm}\r\n              onKeyDown={(e) => {\r\n                if (e.key === \"Enter\") {\r\n                  submitForm()\r\n                }\r\n              }}\r\n            />\r\n          </>\r\n        )}\r\n      </DialogContent>\r\n      {!isLoading && !isSuccessful && (\r\n        <DialogActions>\r\n          <Button color=\"warning\" onClick={clear}>\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            color=\"success\"\r\n            disabled={!isButtonActive()}\r\n            onClick={async () => await submitForm()}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      )}\r\n    </Dialog>\r\n  )\r\n}\r\n","import { useParams } from \"react-router\"\r\nimport { useContext, useState } from \"react\"\r\nimport { useNavigate } from \"react-router\"\r\nimport { api, HttpMethods } from \"../api/ApiControllers\"\r\nimport { CriteriaType, PropertyInputType } from \"../api/ApiModels\"\r\nimport { getUserUrl, UpdateUser, UserWithTemplate } from \"../api/UsersApi\"\r\nimport AlertDialog from \"../components/dialogs/AlertDialog\"\r\nimport ErrorComponent from \"../components/ErrorComponent\"\r\nimport {\r\n  DynamicFormElement,\r\n  DynamicFormState,\r\n  DynamicSelectElement,\r\n  FormElementType,\r\n  FormFieldModelType,\r\n} from \"../components/form/FormModels\"\r\nimport Loading from \"../components/Loading\"\r\nimport { ScreenContainer } from \"../components/StyledComponents\"\r\nimport { AuthContext } from \"../contexts/AuthContext\"\r\nimport useFetch from \"../hooks/useFetch\"\r\nimport EditTemplate from \"../components/templates/EditTemplate\"\r\nimport Button from \"@mui/material/Button\"\r\nimport { useTheme } from \"@mui/material/styles\"\r\nimport ChangeUserPasswordDialog from \"../components/dialogs/ChangeUserPasswordDialog\"\r\n\r\nexport default function UserDetailsScreen() {\r\n  const { id } = useParams()\r\n\r\n  const { user } = useContext(AuthContext)!\r\n  const navigate = useNavigate()\r\n  const theme = useTheme()\r\n\r\n  const {\r\n    data: userData,\r\n    isLoading: isUserDataLoading,\r\n    error,\r\n  } = useFetch<UserWithTemplate>(getUserUrl(id!), HttpMethods.Get, null, {\r\n    Authorization: `Bearer ${user?.tokenStr}`,\r\n  })\r\n\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [dialogOpen, setDialogOpen] = useState(false)\r\n  const [dialogTitle, setDialogTitle] = useState(\"\")\r\n  const [dialogContent, setDialogContent] = useState(\"\")\r\n\r\n  // password\r\n  const [changePassDialog, setChangePassDialog] = useState(false)\r\n\r\n  const getForm: () => DynamicFormElement[] = () => {\r\n    const elements: DynamicFormElement[] = [\r\n      {\r\n        id: \"user_code\",\r\n        db_id: \"user_code\",\r\n        editable: false,\r\n        formFieldModel: FormFieldModelType.Main,\r\n        label: \"Username\",\r\n        required: true,\r\n        type: FormElementType.Text,\r\n        fullWidth: true,\r\n        sortOrder: 1,\r\n        variant: \"outlined\",\r\n        initialValue: userData?.user.user_code,\r\n      },\r\n      {\r\n        id: \"description\",\r\n        db_id: \"description\",\r\n        editable: true,\r\n        formFieldModel: FormFieldModelType.Main,\r\n        label: \"Description\",\r\n        required: true,\r\n        type: FormElementType.Text,\r\n        fullWidth: true,\r\n        sortOrder: 2,\r\n        variant: \"outlined\",\r\n        initialValue: userData?.user.description,\r\n      },\r\n      {\r\n        id: \"email\",\r\n        db_id: \"email\",\r\n        editable: true,\r\n        formFieldModel: FormFieldModelType.Main,\r\n        label: \"Email\",\r\n        required: true,\r\n        type: FormElementType.Text,\r\n        fullWidth: true,\r\n        sortOrder: 4,\r\n        variant: \"outlined\",\r\n        initialValue: userData?.user.email,\r\n      },\r\n      {\r\n        id: \"is_active\",\r\n        db_id: \"is_active\",\r\n        editable: true,\r\n        formFieldModel: FormFieldModelType.Main,\r\n        label: \"Status\",\r\n        required: true,\r\n        type: FormElementType.Dropdown,\r\n        fullWidth: true,\r\n        sortOrder: 5,\r\n        variant: \"outlined\",\r\n        initialValue: userData?.user.is_active ? \"1\" : \"0\",\r\n        values: [0, 1].map((i) => {\r\n          return {\r\n            id: i.toString(),\r\n            description: i === 0 ? \"Disabled\" : \"Active\",\r\n          }\r\n        }),\r\n      },\r\n    ]\r\n\r\n    const criteria: DynamicFormElement[] =\r\n      userData!.template.criteria.map<DynamicFormElement>(\r\n        (criterion, index) => {\r\n          return {\r\n            id: \"criteria_\" + criterion.criteria_id.toString(),\r\n            db_id: criterion.criteria_id.toString(),\r\n            editable: criterion.is_editable,\r\n            formFieldModel: FormFieldModelType.Criteria,\r\n            label: criterion.description,\r\n            required: criterion.is_required,\r\n            type: FormElementType.fromCriteriaType(\r\n              CriteriaType.parse(criterion.criteria_type)\r\n            )!,\r\n            fullWidth: true,\r\n            sortOrder: 4 + index,\r\n            variant: \"outlined\",\r\n            initialValue: userData?.user.criteria_values\r\n              .find((c) => c.criteria_id === criterion.criteria_id)\r\n              ?.criteria_value_id?.toString(),\r\n            values: criterion.criteria_values.map<DynamicSelectElement>(\r\n              (cv) => {\r\n                return {\r\n                  id: cv.criteria_value_id.toString(),\r\n                  description: cv.description,\r\n                }\r\n              }\r\n            ),\r\n          }\r\n        }\r\n      )\r\n\r\n    const properties: DynamicFormElement[] = userData!.template.properties.map(\r\n      (property, index) => {\r\n        return {\r\n          id: \"property_\" + property.id.toString(),\r\n          db_id: property.id.toString(),\r\n          editable: property.is_editable,\r\n          formFieldModel: FormFieldModelType.Property,\r\n          label: property.description,\r\n          required: property.is_required,\r\n          type: FormElementType.fromPropertyInputType(\r\n            PropertyInputType.parse(property.input_type)\r\n          )!,\r\n          fullWidth: true,\r\n          sortOrder: 4 + (userData?.template?.properties?.length ?? 0) + index,\r\n          variant: \"outlined\",\r\n          initialValue: userData?.user.properties.find(\r\n            (p) => p.property_id === property.id\r\n          )?.description,\r\n        }\r\n      }\r\n    )\r\n\r\n    const roles: DynamicFormElement = {\r\n      id: \"role\",\r\n      db_id: \"role\",\r\n      editable: false,\r\n      formFieldModel: FormFieldModelType.Role,\r\n      label: \"Role\",\r\n      required: true,\r\n      type: FormElementType.Dropdown,\r\n      fullWidth: true,\r\n      sortOrder:\r\n        4 +\r\n        (userData?.template?.properties?.length ?? 0) +\r\n        (userData?.template?.criteria?.length ?? 0) +\r\n        1,\r\n      variant: \"outlined\",\r\n      values: userData!.template.roles.map<DynamicSelectElement>((role) => {\r\n        return {\r\n          id: role.role_id.toString(),\r\n          description: role.role_name,\r\n        }\r\n      }),\r\n      initialValue: userData?.user?.roles[0]?.role_id?.toString(),\r\n    }\r\n\r\n    elements.push(...criteria)\r\n    elements.push(...properties)\r\n    elements.push(roles)\r\n\r\n    return elements\r\n  }\r\n\r\n  const submitForm = async (state: DynamicFormState[]) => {\r\n    // filtering the elements\r\n    const main = state.filter(\r\n      (element) => element.element.formFieldModel === FormFieldModelType.Main\r\n    )\r\n    const props = state.filter(\r\n      (element) =>\r\n        element.element.formFieldModel === FormFieldModelType.Property\r\n    )\r\n    const criteria = state.filter(\r\n      (element) =>\r\n        element.element.formFieldModel === FormFieldModelType.Criteria\r\n    )\r\n\r\n    // constructing the body\r\n    const body: UpdateUser = {\r\n      email: main.find((e) => e.element.id === \"email\")!.value,\r\n      is_active: main.find((e) => e.element.id === \"is_active\")!.value === \"1\",\r\n      description: main.find((e) => e.element.id === \"description\")!.value,\r\n      properties: props.map((prop) => {\r\n        return {\r\n          property_id: prop.element.db_id as number,\r\n          description: prop.value,\r\n        }\r\n      }),\r\n      criteria: criteria.map((cr) => {\r\n        return {\r\n          user_criteria_value_id: Number(cr.value),\r\n        }\r\n      }),\r\n    }\r\n\r\n    // api call\r\n    try {\r\n      setIsLoading(true)\r\n      await api(\r\n        getUserUrl(id!),\r\n        HttpMethods.Patch,\r\n        body,\r\n        {\r\n          Authorization: `Bearer ${user?.tokenStr}`,\r\n        },\r\n        undefined,\r\n        false\r\n      )\r\n\r\n      navigate(\"/users\")\r\n    } catch (e: any) {\r\n      setDialogTitle(\"Something went wrong\")\r\n      setDialogContent(e.message)\r\n      setDialogOpen(true)\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ScreenContainer\r\n      isDataLoaded={\r\n        !isUserDataLoading && !isLoading && !error && userData !== null\r\n      }\r\n    >\r\n      {isUserDataLoading && <Loading text=\"Loading User..\" />}\r\n      {error && <ErrorComponent text={error} />}\r\n      {isLoading && <Loading text=\"Updating User\" />}\r\n      {userData && !isLoading && !isUserDataLoading && (\r\n        <>\r\n          <EditTemplate\r\n            formElements={getForm()}\r\n            gridTempCol=\"1fr 1fr\"\r\n            submitForm={submitForm}\r\n            title=\"Update User\"\r\n          />\r\n          <Button\r\n            color=\"warning\"\r\n            style={{ alignSelf: \"flex-end\", margin: theme.spacing(2) }}\r\n            onClick={() => setChangePassDialog(true)}\r\n          >\r\n            Change User Password\r\n          </Button>\r\n        </>\r\n      )}\r\n      <AlertDialog\r\n        content={dialogContent}\r\n        isOpen={dialogOpen}\r\n        title={dialogTitle}\r\n        onClose={() => setDialogOpen(false)}\r\n      />\r\n      <ChangeUserPasswordDialog\r\n        userCode={id!}\r\n        dismiss={() => setChangePassDialog(false)}\r\n        isOpen={changePassDialog}\r\n      />\r\n    </ScreenContainer>\r\n  )\r\n}\r\n","import { grey, red } from \"@mui/material/colors\"\r\nimport { useContext, useState } from \"react\"\r\nimport { useNavigate } from \"react-router\"\r\nimport { api, HttpMethods } from \"../api/ApiControllers\"\r\nimport { CriteriaType, PropertyInputType } from \"../api/ApiModels\"\r\nimport {\r\n  getInitUserUrl,\r\n  InitUser,\r\n  NewUserRequest,\r\n  newUserUrl,\r\n} from \"../api/UsersApi\"\r\nimport AlertDialog from \"../components/dialogs/AlertDialog\"\r\nimport ErrorComponent from \"../components/ErrorComponent\"\r\nimport {\r\n  DynamicFormElement,\r\n  DynamicFormState,\r\n  DynamicSelectElement,\r\n  FormElementType,\r\n  FormFieldModelType,\r\n} from \"../components/form/FormModels\"\r\nimport Loading from \"../components/Loading\"\r\nimport { ScreenContainer } from \"../components/StyledComponents\"\r\nimport CreateTemplate from \"../components/templates/CreateTemplate\"\r\nimport { AuthContext } from \"../contexts/AuthContext\"\r\nimport useFetch from \"../hooks/useFetch\"\r\n\r\nexport default function NewUserScreen() {\r\n  const { user } = useContext(AuthContext)!\r\n  const navigate = useNavigate()\r\n\r\n  const {\r\n    data,\r\n    isLoading: isInitLoading,\r\n    error,\r\n  } = useFetch<InitUser>(getInitUserUrl, HttpMethods.Get, null, {\r\n    Authorization: `Bearer ${user?.tokenStr}`,\r\n  })\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [dialogOpen, setDialogOpen] = useState(false)\r\n  const [dialogTitle, setDialogTitle] = useState(\"\")\r\n  const [dialogContent, setDialogContent] = useState(\"\")\r\n\r\n  const getForm: () => DynamicFormElement[] = () => {\r\n    const elements: DynamicFormElement[] = [\r\n      {\r\n        id: \"user_code\",\r\n        db_id: \"user_code\",\r\n        editable: true,\r\n        formFieldModel: FormFieldModelType.Main,\r\n        label: \"Username\",\r\n        required: true,\r\n        type: FormElementType.Text,\r\n        fullWidth: true,\r\n        sortOrder: 1,\r\n        variant: \"outlined\",\r\n        removeWhiteSpaces: true,\r\n      },\r\n      {\r\n        id: \"description\",\r\n        db_id: \"description\",\r\n        editable: true,\r\n        formFieldModel: FormFieldModelType.Main,\r\n        label: \"Description\",\r\n        required: true,\r\n        type: FormElementType.Text,\r\n        fullWidth: true,\r\n        sortOrder: 2,\r\n        variant: \"outlined\",\r\n      },\r\n      {\r\n        id: \"password\",\r\n        db_id: \"password\",\r\n        editable: true,\r\n        formFieldModel: FormFieldModelType.Main,\r\n        label: \"Password\",\r\n        required: true,\r\n        type: FormElementType.Password,\r\n        fullWidth: true,\r\n        sortOrder: 3,\r\n        variant: \"outlined\",\r\n      },\r\n      {\r\n        id: \"email\",\r\n        db_id: \"email\",\r\n        editable: true,\r\n        formFieldModel: FormFieldModelType.Main,\r\n        label: \"Email\",\r\n        required: true,\r\n        type: FormElementType.Text,\r\n        fullWidth: true,\r\n        sortOrder: 4,\r\n        variant: \"outlined\",\r\n      },\r\n    ]\r\n\r\n    const criteria: DynamicFormElement[] =\r\n      data!.criteria.map<DynamicFormElement>((criterion, index) => {\r\n        return {\r\n          id: \"criteria_\" + criterion.criteria_id.toString(),\r\n          db_id: criterion.criteria_id.toString(),\r\n          editable: criterion.is_editable,\r\n          formFieldModel: FormFieldModelType.Criteria,\r\n          label: criterion.description,\r\n          required: criterion.is_required,\r\n          type: FormElementType.fromCriteriaType(\r\n            CriteriaType.parse(criterion.criteria_type)\r\n          )!,\r\n          fullWidth: true,\r\n          sortOrder: 4 + index,\r\n          variant: \"outlined\",\r\n          values: criterion.criteria_values.map<DynamicSelectElement>((cv) => {\r\n            return {\r\n              id: cv.criteria_value_id.toString(),\r\n              description: cv.description,\r\n            }\r\n          }),\r\n        }\r\n      })\r\n\r\n    const properties: DynamicFormElement[] = data!.properties.map(\r\n      (property, index) => {\r\n        return {\r\n          id: \"property_\" + property.id.toString(),\r\n          db_id: property.id.toString(),\r\n          editable: property.is_editable,\r\n          formFieldModel: FormFieldModelType.Property,\r\n          label: property.description,\r\n          required: property.is_required,\r\n          type: FormElementType.fromPropertyInputType(\r\n            PropertyInputType.parse(property.input_type)\r\n          )!,\r\n          fullWidth: true,\r\n          sortOrder: 4 + (data?.properties?.length ?? 0) + index,\r\n          variant: \"outlined\",\r\n        }\r\n      }\r\n    )\r\n\r\n    const roles: DynamicFormElement = {\r\n      id: \"role\",\r\n      db_id: \"role\",\r\n      editable: true,\r\n      formFieldModel: FormFieldModelType.Role,\r\n      label: \"Role\",\r\n      required: true,\r\n      type: FormElementType.Dropdown,\r\n      fullWidth: true,\r\n      sortOrder:\r\n        4 + (data?.properties?.length ?? 0) + (data?.criteria?.length ?? 0) + 1,\r\n      variant: \"outlined\",\r\n      values: data!.roles.map<DynamicSelectElement>((role) => {\r\n        return {\r\n          id: role.role_id.toString(),\r\n          description: role.role_name,\r\n        }\r\n      }),\r\n    }\r\n\r\n    elements.push(...criteria)\r\n    elements.push(...properties)\r\n    elements.push(roles)\r\n\r\n    return elements\r\n  }\r\n\r\n  const submitForm = async (state: DynamicFormState[]) => {\r\n    // filtering the elements\r\n    const main = state.filter(\r\n      (element) => element.element.formFieldModel === FormFieldModelType.Main\r\n    )\r\n    const props = state.filter(\r\n      (element) =>\r\n        element.element.formFieldModel === FormFieldModelType.Property\r\n    )\r\n    const criteria = state.filter(\r\n      (element) =>\r\n        element.element.formFieldModel === FormFieldModelType.Criteria\r\n    )\r\n    const roles = state.filter(\r\n      (element) => element.element.formFieldModel === FormFieldModelType.Role\r\n    )\r\n\r\n    // constructing the body\r\n    const body: NewUserRequest = {\r\n      user_code: main.find((e) => e.element.id === \"user_code\")!.value,\r\n      password: main.find((e) => e.element.id === \"password\")!.value,\r\n      email: main.find((e) => e.element.id === \"email\")!.value,\r\n      description: main.find((e) => e.element.id === \"description\")!.value,\r\n      properties: props.map((prop) => {\r\n        return {\r\n          property_id: prop.element.db_id as number,\r\n          description: prop.value,\r\n        }\r\n      }),\r\n      criteria: criteria.map((cr) => {\r\n        return {\r\n          user_criteria_value_id: Number(cr.value),\r\n        }\r\n      }),\r\n      roles: roles.map((role) => Number(role.value)),\r\n    }\r\n\r\n    // api call\r\n    try {\r\n      setIsLoading(true)\r\n      await api(\r\n        newUserUrl,\r\n        HttpMethods.Post,\r\n        body,\r\n        {\r\n          Authorization: `Bearer ${user?.tokenStr}`,\r\n        },\r\n        undefined,\r\n        false\r\n      )\r\n\r\n      navigate(\"/users\")\r\n    } catch (e: any) {\r\n      setDialogTitle(\"Something went wrong\")\r\n      setDialogContent(e.message)\r\n      setDialogOpen(true)\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ScreenContainer\r\n      isDataLoaded={!isInitLoading && !isLoading && !error && data !== null}\r\n    >\r\n      {isInitLoading && <Loading text=\"Loading Schema..\" />}\r\n      {error && <ErrorComponent text={error} />}\r\n      {isLoading && <Loading text=\"Creating User\" />}\r\n      {data && !isLoading && !isInitLoading && (\r\n        <CreateTemplate\r\n          buttonText=\"Add\"\r\n          formElements={getForm()}\r\n          gridTempCol=\"1fr 1fr\"\r\n          submitForm={submitForm}\r\n          title=\"New User\"\r\n        />\r\n      )}\r\n      <AlertDialog\r\n        content={dialogContent}\r\n        isOpen={dialogOpen}\r\n        title={dialogTitle}\r\n        onClose={() => setDialogOpen(false)}\r\n      />\r\n    </ScreenContainer>\r\n  )\r\n}\r\n","import { useContext, useState } from \"react\"\r\nimport { useNavigate, useParams } from \"react-router\"\r\nimport { api, HttpMethods } from \"../api/ApiControllers\"\r\nimport { CriteriaType, PropertyInputType } from \"../api/ApiModels\"\r\nimport {\r\n  ClientWithTemplate,\r\n  getClientByCodeUrl,\r\n  UpdateClientRequest,\r\n} from \"../api/ClientsApi\"\r\nimport AlertDialog from \"../components/dialogs/AlertDialog\"\r\nimport ErrorComponent from \"../components/ErrorComponent\"\r\nimport {\r\n  DynamicFormElement,\r\n  DynamicFormState,\r\n  DynamicSelectElement,\r\n  FormElementType,\r\n  FormFieldModelType,\r\n} from \"../components/form/FormModels\"\r\nimport Loading from \"../components/Loading\"\r\nimport { ScreenContainer } from \"../components/StyledComponents\"\r\nimport { AuthContext } from \"../contexts/AuthContext\"\r\nimport useFetch from \"../hooks/useFetch\"\r\nimport EditTemplate from \"../components/templates/EditTemplate\"\r\n\r\nexport default function ClientDetailsScreen() {\r\n  const { id } = useParams()\r\n  const { user } = useContext(AuthContext)!\r\n  const navigate = useNavigate()\r\n\r\n  const {\r\n    data,\r\n    isLoading: isInitLoading,\r\n    error,\r\n  } = useFetch<ClientWithTemplate>(\r\n    getClientByCodeUrl(id!),\r\n    HttpMethods.Get,\r\n    null,\r\n    {\r\n      Authorization: `Bearer ${user?.tokenStr}`,\r\n    }\r\n  )\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [dialogOpen, setDialogOpen] = useState(false)\r\n  const [dialogTitle, setDialogTitle] = useState(\"\")\r\n  const [dialogContent, setDialogContent] = useState(\"\")\r\n\r\n  const getForm: () => DynamicFormElement[] = () => {\r\n    const elements: DynamicFormElement[] = [\r\n      {\r\n        id: \"client_code\",\r\n        db_id: \"client_code\",\r\n        editable: false,\r\n        formFieldModel: FormFieldModelType.Main,\r\n        label: \"Client username\",\r\n        required: false,\r\n        type: FormElementType.Text,\r\n        fullWidth: true,\r\n        sortOrder: 1,\r\n        variant: \"outlined\",\r\n        initialValue: data!.client.client_code,\r\n      },\r\n      {\r\n        id: \"description\",\r\n        db_id: \"description\",\r\n        editable: true,\r\n        formFieldModel: FormFieldModelType.Main,\r\n        label: \"Description\",\r\n        required: true,\r\n        type: FormElementType.Text,\r\n        fullWidth: true,\r\n        sortOrder: 2,\r\n        variant: \"outlined\",\r\n        initialValue: data!.client.description,\r\n      },\r\n      {\r\n        id: \"is_active\",\r\n        db_id: \"is_active\",\r\n        editable: true,\r\n        formFieldModel: FormFieldModelType.Main,\r\n        label: \"Status\",\r\n        required: true,\r\n        type: FormElementType.Dropdown,\r\n        fullWidth: true,\r\n        sortOrder: 3,\r\n        variant: \"outlined\",\r\n        initialValue: data!.client.is_active ? \"1\" : \"0\",\r\n        values: [0, 1].map((i) => {\r\n          return {\r\n            id: i.toString(),\r\n            description: i === 0 ? \"Disabled\" : \"Active\",\r\n          }\r\n        }),\r\n      },\r\n      {\r\n        id: \"barcode\",\r\n        db_id: \"barcode\",\r\n        editable: false,\r\n        formFieldModel: FormFieldModelType.Display,\r\n        label: \"Barcode\",\r\n        required: false,\r\n        type: FormElementType.Text,\r\n        fullWidth: true,\r\n        sortOrder: 4,\r\n        variant: \"outlined\",\r\n        initialValue: data!.client.barcode,\r\n      },\r\n    ]\r\n\r\n    const criteria: DynamicFormElement[] =\r\n      data!.template.criteria.map<DynamicFormElement>((criterion, index) => {\r\n        return {\r\n          id: \"criteria_\" + criterion.criteria_id.toString(),\r\n          db_id: criterion.criteria_id.toString(),\r\n          editable: criterion.is_editable,\r\n          formFieldModel: FormFieldModelType.Criteria,\r\n          label: criterion.description,\r\n          required: criterion.is_required,\r\n          type: FormElementType.fromCriteriaType(\r\n            CriteriaType.parse(criterion.criteria_type)\r\n          )!,\r\n          fullWidth: true,\r\n          sortOrder: 4 + index,\r\n          variant: \"outlined\",\r\n          values: criterion.criteria_values.map<DynamicSelectElement>((cv) => {\r\n            return {\r\n              id: cv.criteria_value_id.toString(),\r\n              description: cv.description,\r\n            }\r\n          }),\r\n          initialValue: data!.client.criteria_values\r\n            .find((cr) => cr.criteria_id == criterion.criteria_id)\r\n            ?.criteria_value_id?.toString(),\r\n        }\r\n      })\r\n\r\n    const properties: DynamicFormElement[] = data!.template.properties.map(\r\n      (property, index) => {\r\n        return {\r\n          id: \"property_\" + property.id.toString(),\r\n          db_id: property.id.toString(),\r\n          editable: property.is_editable,\r\n          formFieldModel: FormFieldModelType.Property,\r\n          label: property.description,\r\n          required: property.is_required,\r\n          type: FormElementType.fromPropertyInputType(\r\n            PropertyInputType.parse(property.input_type)\r\n          )!,\r\n          fullWidth: true,\r\n          sortOrder: 4 + (data?.template?.properties?.length ?? 0) + index,\r\n          variant: \"outlined\",\r\n          initialValue: data!.client.properties.find(\r\n            (pr) => pr.property_id == property.id\r\n          )!.description,\r\n        }\r\n      }\r\n    )\r\n\r\n    // currency drop down\r\n    const currency: DynamicFormElement = {\r\n      id: \"currency_code\",\r\n      db_id: \"currency_code\",\r\n      editable: true,\r\n      formFieldModel: FormFieldModelType.Criteria,\r\n      label: \"Currency\",\r\n      required: true,\r\n      type: FormElementType.Dropdown,\r\n      fullWidth: true,\r\n      sortOrder: 1,\r\n      variant: \"outlined\",\r\n      values: data!.template.currencies.map<DynamicSelectElement>((curr) => {\r\n        return {\r\n          id: curr.currency_code,\r\n          description: curr.currency_symbol,\r\n        }\r\n      }),\r\n      initialValue: data!.client.currency_code,\r\n    }\r\n\r\n    // sales rep\r\n    const sales: DynamicFormElement = {\r\n      id: \"sales_representative\",\r\n      db_id: \"sales_representative\",\r\n      editable: true,\r\n      formFieldModel: FormFieldModelType.Criteria,\r\n      label: \"Sales Rep.\",\r\n      required: true,\r\n      type: FormElementType.Dropdown,\r\n      fullWidth: true,\r\n      sortOrder: 1,\r\n      variant: \"outlined\",\r\n      values: data!.template.sales_representatives.map<DynamicSelectElement>(\r\n        (rep) => {\r\n          return {\r\n            id: rep.user_code,\r\n            description: rep.description,\r\n          }\r\n        }\r\n      ),\r\n      initialValue: data!.client.default_user,\r\n    }\r\n\r\n    // TODO country\r\n    const address: DynamicFormElement = {\r\n      id: \"address_code\",\r\n      db_id: \"address_code\",\r\n      editable: true,\r\n      formFieldModel: FormFieldModelType.Criteria,\r\n      label: \"Country\",\r\n      required: true,\r\n      type: FormElementType.Dropdown,\r\n      fullWidth: true,\r\n      sortOrder: 1,\r\n      variant: \"outlined\",\r\n      values: data!.template.addresses.map<DynamicSelectElement>((add) => {\r\n        return {\r\n          id: add.address_code,\r\n          description: add.description,\r\n        }\r\n      }),\r\n      initialValue: data!.client.addresses[0].address_code,\r\n    }\r\n\r\n    elements.push(...criteria)\r\n    elements.push(...properties)\r\n    elements.push(currency)\r\n    elements.push(sales)\r\n    elements.push(address)\r\n\r\n    return elements\r\n  }\r\n\r\n  const submitForm = async (state: DynamicFormState[]) => {\r\n    // filtering the elements\r\n    const main = state.filter(\r\n      (element) => element.element.formFieldModel === FormFieldModelType.Main\r\n    )\r\n    const props = state.filter(\r\n      (element) =>\r\n        element.element.formFieldModel === FormFieldModelType.Property\r\n    )\r\n    const criteria = state.filter(\r\n      (element) =>\r\n        element.element.formFieldModel === FormFieldModelType.Criteria\r\n    )\r\n    // constructing the body\r\n    const body: UpdateClientRequest = {\r\n      description: main.find((e) => e.element.id === \"description\")!.value,\r\n      is_active: main.find((e) => e.element.id === \"is_active\")!.value === \"1\",\r\n      properties: props.map((prop) => {\r\n        return {\r\n          property_id: prop.element.db_id as number,\r\n          description: prop.value,\r\n        }\r\n      }),\r\n      criteria: criteria\r\n        .map((cr) => {\r\n          return {\r\n            client_criteria_value_id: Number(cr.value),\r\n          }\r\n        })\r\n        .filter((e) => !Number.isNaN(e.client_criteria_value_id)),\r\n      sales_representative: criteria.find(\r\n        (e) => e.element.id === \"sales_representative\"\r\n      )!.value,\r\n      currency_code: criteria.find((e) => e.element.id === \"currency_code\")!\r\n        .value,\r\n      address_code: criteria.find((e) => e.element.id === \"address_code\")!\r\n        .value,\r\n    }\r\n\r\n    // api call\r\n    try {\r\n      setIsLoading(true)\r\n      await api(\r\n        getClientByCodeUrl(id!),\r\n        HttpMethods.Patch,\r\n        body,\r\n        {\r\n          Authorization: `Bearer ${user?.tokenStr}`,\r\n        },\r\n        undefined,\r\n        false\r\n      )\r\n      navigate(\"/clients\")\r\n    } catch (e: any) {\r\n      setDialogTitle(\"Something went wrong\")\r\n      setDialogContent(e.message)\r\n      setDialogOpen(true)\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ScreenContainer\r\n      isDataLoaded={!isInitLoading && !isLoading && !error && data !== null}\r\n    >\r\n      {isInitLoading && <Loading text=\"Loading Client..\" />}\r\n      {error && <ErrorComponent text={error} />}\r\n      {isLoading && <Loading text=\"Updating Client\" />}\r\n      {data && !isLoading && !isInitLoading && (\r\n        <EditTemplate\r\n          formElements={getForm()}\r\n          gridTempCol=\"1fr 1fr\"\r\n          submitForm={submitForm}\r\n          title=\"Update Client\"\r\n        />\r\n      )}\r\n      <AlertDialog\r\n        content={dialogContent}\r\n        isOpen={dialogOpen}\r\n        title={dialogTitle}\r\n        onClose={() => setDialogOpen(false)}\r\n      />\r\n    </ScreenContainer>\r\n  )\r\n}\r\n","import { domainName } from \"../constants/Config\"\r\nimport { MinifiedUser } from \"./UsersApi\"\r\n\r\n// URL\r\nexport const getAllMainTaskTempMinUrl = \r\n  domainName + \"/api/task/template/main/all/min\"\r\n\r\nexport const  testgetalltasks = ()=>\r\ndomainName + \"/api/task/template/main/all/min\"\r\n\r\nexport const getMainTempUrl = (id: number | string, isFlat: boolean) =>\r\n  domainName + `/api/task/template/main/${id}?flat=${isFlat}`\r\nexport const getTimeUnitsUrl = domainName + \"/api/task/template/time-units\"\r\nexport const newMainTaskTemplateUrl = domainName + \"/api/task/template/main/new\"\r\nexport const updateTaskUrl = (id: string | number) =>\r\n  domainName + `/api/task/template/${id}`\r\n\r\nexport const newBlockByUrl = (id: number, blockedBy: number) =>\r\n  domainName + `/api/task/template/${id}/blocked-by/${blockedBy}`\r\n\r\nexport const saveTemplateUrl = (id: number | string) =>\r\n  domainName + `/api/task/template/${id}/rewrite`\r\n\r\nexport const deleteTaskTempalteUrl = (id: number | string) =>\r\n  domainName + `/api/task/template/main/${id}`\r\n\r\nexport const taskMoredetailsUrl = (projectId: number, taskId: number) =>\r\n  domainName + `/api/project/task/item/getItems/${projectId}/${taskId}`\r\n\r\nexport const addTaskMoreDetailsUrl = () =>\r\ndomainName + `/api/project/task/item/newItem`\r\n\r\nexport const editProjectTaskItemUrl = () =>\r\ndomainName + `/api/project/task/item/updateItem`\r\n\r\nexport const deleteProjectTaskItemUrl = (id: number) =>\r\ndomainName + `/api/project/task/item/deleteItem/${id}`\r\n\r\nexport interface MainTaskTemplate {\r\n  id: number\r\n  task_code: string\r\n  task_name: string\r\n  sort_order: number\r\n  description?: string\r\n  blocked_by: BlockedBy[]\r\n  parent?: number\r\n  children: MainTaskTemplate[]\r\n  estimated_time: number\r\n  time_unit_id: number\r\n  default_assigned_to?: string\r\n}\r\n\r\nexport interface MainTaskTemplateWithoutChildren {\r\n  id: number\r\n  task_code: string\r\n  task_name: string\r\n  sort_order: number\r\n  estimated_time: number\r\n  time_unit_id: number\r\n  description?: string\r\n  parent?: number\r\n  blocked_by: BlockedBy[]\r\n}\r\n\r\nexport interface MainTaskTemplateWithTimeUnits {\r\n  task: MainTaskTemplate\r\n  tasks?: MainTaskTemplateWithoutChildren[]\r\n  time_units: TimeUnit[]\r\n  users: MinifiedUser[]\r\n}\r\n\r\nexport interface MainTaskTemplateMinified {\r\n  id: number\r\n  task_code: string\r\n  task_name: string\r\n  children_count: number\r\n}\r\n\r\nexport interface BlockedBy {\r\n  id: number\r\n  task_name: string\r\n}\r\n\r\n// time units\r\nexport interface TimeUnit {\r\n  id: number\r\n  description: string\r\n  abbreviation: string\r\n  milliseconds: number\r\n}\r\n\r\nexport interface NewMainTaskRequest {\r\n  task_name: string\r\n  task_code?: string\r\n  estimated_time: number\r\n  time_unit_id: number\r\n  sort_order: number\r\n  description?: string\r\n}\r\n\r\nexport interface NewTaskRequest {\r\n  task_name: string\r\n  task_code?: string\r\n  estimated_time: string\r\n  time_unit_id: number\r\n  sort_order: number\r\n  parent?: number\r\n  description?: string\r\n}\r\n\r\nexport interface UpdateTaskRequest {\r\n  task_name?: string\r\n  task_code?: string\r\n  estimated_time?: number\r\n  time_unit_id?: number\r\n  sort_order?: number\r\n  description?: string\r\n}\r\n","import { styled } from \"@mui/material/styles\"\r\nimport { useNavigate } from \"react-router\"\r\nimport {\r\n  getAllMainTaskTempMinUrl,\r\n  MainTaskTemplateMinified,\r\n} from \"../api/TaskTemplateApi\"\r\nimport { CustomPaginationTableRow } from \"../components/reusable/CustomPaginationTable\"\r\nimport DisplayTemplate from \"../components/templates/DisplayTemplate\"\r\n\r\nconst MainContainer = styled(\"div\")(() => {\r\n  return {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"stretch\",\r\n  }\r\n})\r\n\r\nexport default function MainTemplatesScreen() {\r\n  const navigate = useNavigate()\r\n\r\n  const getTableState = (data: MainTaskTemplateMinified[]) => {\r\n    const headers: string[] = [\"Name\", \"Task Code\", \"No. of subtasks\"]\r\n    const rows: CustomPaginationTableRow[] = data.map((temp) => {\r\n      return {\r\n        id: temp.id,\r\n        cells: [temp.task_name, temp.task_code, temp.children_count],\r\n      }\r\n    })\r\n\r\n    return {\r\n      heads: headers,\r\n      rows,\r\n    }\r\n  }\r\n\r\n  return (\r\n    <MainContainer>\r\n      <DisplayTemplate\r\n        searchLabel=\"Search names..\"\r\n        loadingLabel=\"Loading Templates..\"\r\n        url={getAllMainTaskTempMinUrl}\r\n        newButtonText=\"New Template\"\r\n        newEntityUrl=\"/tasks/templates/new\"\r\n        tableState={(data) => getTableState(data as MainTaskTemplateMinified[])}\r\n        rowClicked={(id) => {\r\n          navigate(`/tasks/templates/${id}`)\r\n        }}\r\n        pageTitle=\"Task Templates\"\r\n      />\r\n    </MainContainer>\r\n  )\r\n}\r\n","import { domainName } from \"../constants/Config\"\r\nimport { MinifiedClient } from \"./ClientsApi\"\r\nimport {\r\n  BlockedBy,\r\n  MainTaskTemplateMinified,\r\n  TimeUnit,\r\n} from \"./TaskTemplateApi\"\r\nimport { MinifiedUser } from \"./UsersApi\"\r\n\r\nexport const getAllMinifiedProjectsUrl = domainName + \"/api/project/all\"\r\nexport const getProjectsUrl = (id: string | number) =>\r\n  domainName + `/api/project/${id}`\r\n\r\nexport const initProjectUrl = domainName + \"/api/project/init\"\r\nexport const newProjectWithoutTempUrl = domainName + \"/api/project/new\"\r\nexport const newProjectFromTempUrl =\r\n  domainName + \"/api/project/new/from-template\"\r\n\r\nexport const editProjectTasksUrl = (id: number | string, query?: InitQuery) => {\r\n  let url = domainName + `/api/project/${id}/task/edit/init`\r\n\r\n  if (query && query.req && (query.start || query.end)) {\r\n    url += `?req=${query.req}`\r\n\r\n    if (query.start) {\r\n      url += `&start=${query.start}`\r\n    }\r\n\r\n    if (query.end) {\r\n      url += `&end=${query.end}`\r\n    }\r\n  }\r\n\r\n  return url\r\n}\r\n\r\nexport const editTemplateTasksUrl = (id: number | string) =>\r\n  domainName + `/api/project/${id}/getTasks`\r\n\r\n\r\nexport const saveProjectAsDraftUrl = (id: number | string) =>\r\n  domainName + `/api/project/${id}/save-draft`\r\n\r\nexport const saveProjectAsStartUrl = (id: number | string) =>\r\n  domainName + `/api/project/${id}/start`\r\n\r\nexport const getProjecTableView = (id: number | string) =>\r\n  domainName + `/api/project/${id}/table-view`\r\n\r\n\r\nexport const getProjectStatus = (id: number | string)=>\r\ndomainName+`/api/project/${id}/status`\r\n\r\nexport interface MinifiedProject {\r\n  id: number\r\n  client_code: string\r\n  total_price: number\r\n  amount_paid: number\r\n  is_draft: number\r\n  due_date: string\r\n  user_code: string\r\n  title: string\r\n  lost_sales: string\r\n  estimated_delivery: string\r\n  status: string\r\n}\r\n\r\nexport interface CurrencyInterface {\r\n  currency_code: string\r\n  currency_description: string\r\n  currency_symbol: string\r\n}\r\n\r\nexport interface TaskStatusInterface {\r\n  id: number\r\n  description: string\r\n  is_start: boolean\r\n  is_final: boolean\r\n}\r\n\r\nexport interface ProjectInterface<T = ProjectTaskInterface> {\r\n  client: MinifiedClient\r\n  user: MinifiedUser\r\n  currency_code: string\r\n  total_price: number\r\n  paid_amount: number\r\n  task_tree: T\r\n  estimated_delivery?: number\r\n  is_draft: number\r\n  id: number\r\n  title: string\r\n}\r\n\r\nexport interface ProjectInterfaceWithoutTree {\r\n  client: MinifiedClient\r\n  user: MinifiedUser\r\n  currency_code: string\r\n  total_price: number\r\n  paid_amount: number\r\n  estimated_delivery?: number\r\n  is_draft: number\r\n  id: number\r\n}\r\n\r\nexport interface ProjectWithoutTaskInterface {\r\n  client: MinifiedClient\r\n  user: MinifiedUser\r\n  currency_code: string\r\n  total_price: number\r\n  paid_amount: number\r\n  estimated_delivery?: number\r\n  is_draft: number\r\n  id: number\r\n}\r\n\r\nexport interface ProjectTaskInterface {\r\n  id: number\r\n  task_name: string\r\n  task_code?: string\r\n  estimated_time: number\r\n  time_unit_id: number\r\n  description?: string\r\n  sort_order: number\r\n  task_status_id: number\r\n  task_progress: number\r\n  parent?: number\r\n  children: ProjectTaskInterface[]\r\n  planned_start_date?: number\r\n  planned_end_date?: number\r\n  actual_start_date?: number\r\n  actual_end_date?: number\r\n  comment?: string\r\n  comment_last_updated?: number\r\n  progress_last_updated?: number\r\n  reschedule?: RescheduleInterface\r\n  predecessor?: ProjectTaskPredecessor\r\n}\r\n\r\nexport interface RequestedRescheduleInterface {\r\n  requested_by: string\r\n  requested_date: number\r\n  id: number\r\n  is_confirmed?: boolean\r\n}\r\n\r\nexport interface RescheduleInterface {\r\n  end_request?: RequestedRescheduleInterface\r\n  start_request?: RequestedRescheduleInterface\r\n}\r\n\r\nexport interface ProjectTaskWithoutChildrenInterface {\r\n  id: number\r\n  parent?: number\r\n  task_name: string\r\n  task_code: string\r\n  estimated_time: number\r\n  time_unit_id: number\r\n  due_date: number\r\n  description?: string\r\n  sort_order: number\r\n  task_status_id: number\r\n  task_progress: number\r\n  blocked_by: BlockedBy[]\r\n}\r\n\r\nexport interface ProjectWithMetaDataInterface {\r\n  project: ProjectInterface\r\n  time_units: TimeUnit[]\r\n  status: TaskStatusInterface[]\r\n}\r\n\r\nexport interface ProjectInit {\r\n  clients: MinifiedClient[]\r\n  users: MinifiedUser[]\r\n  currencies: Currency[]\r\n  templates: MainTaskTemplateMinified[]\r\n  time_units: TimeUnit[]\r\n}\r\n\r\nexport interface Currency {\r\n  currency_code: string\r\n  currency_description: string\r\n  currency_symbol: string\r\n}\r\n\r\nexport interface NewProjectRequest {\r\n  user_code: string\r\n  client_code: string\r\n  total_price: number\r\n  project_currency: string\r\n  estimated_delivery_date: number\r\n  down_payment?: number\r\n  down_payment_currency?: string\r\n  payment_collection_date?: number\r\n  task_code?: string\r\n  task_name?: string\r\n  estimated_time?: number\r\n  time_unit_id?: number\r\n  description?: string\r\n  template_id?: number\r\n  title: string\r\n  lost_sales?: string\r\n}\r\n\r\nexport interface AutofillTemplate {\r\n  id: number\r\n  task_code: string\r\n  task_name: string\r\n  estimated_time: number\r\n  time_unit_id: number\r\n  time_unit: any\r\n  default_assigned_to?: string\r\n}\r\n\r\nexport interface EditProjectTasksInitInterface {\r\n  templates: MainTaskTemplateMinified[]\r\n  users: MinifiedUser[]\r\n  project: ProjectInterface\r\n  time_units: TimeUnit[]\r\n  autofill_templates: AutofillTemplate[]\r\n}\r\n\r\nexport interface ProjectTableView {\r\n  id: number\r\n  assigned_to?: string\r\n  task_code?: string\r\n  task_name: string\r\n  estimated_time: number\r\n  time_unit: string\r\n  parent?: number\r\n  planned_start_date?: number\r\n  planned_end_date?: number\r\n  comment?: string\r\n  progress?: number\r\n  progress_last_updated?: number\r\n  comment_last_updated?: number\r\n  actual_start_date?: number\r\n  actual_end_date?: number\r\n  status: string\r\n}\r\n\r\nexport interface InitQuery {\r\n  req?: string\r\n  start?: string\r\n  end?: string\r\n}\r\n\r\nexport interface ProjectTaskPredecessor {\r\n  id: number\r\n  assigned_to?: string // MinifiedUser[]\r\n  assigned_to_user_code?: string\r\n  task_name: string\r\n  task_code?: string\r\n  estimated_time: number\r\n  time_unit_id: number\r\n  parent?: number\r\n  planned_start_date?: number\r\n  planned_end_date?: number\r\n  actual_start_date?: number\r\n  actual_end_date?: number\r\n  task_status_id?: number\r\n  sort_order: number\r\n  task_progress?: number\r\n  description?: string\r\n  fake_id?: string\r\n}\r\n\r\nexport enum ProjectTaskChangeEvent {\r\n  ChangeStart,\r\n  ChangeEnd,\r\n  ChangeTime,\r\n  None,\r\n}\r\n","import qs from \"qs\"\r\nimport { createContext, useContext, useEffect, useState } from \"react\"\r\nimport { useNavigate, useParams } from \"react-router\"\r\nimport { v4 } from \"uuid\"\r\nimport { api, HttpMethods } from \"../api/ApiControllers\"\r\nimport { AutofillTemplate, EditProjectTasksInitInterface, editProjectTasksUrl, editTemplateTasksUrl, InitQuery } from \"../api/ProjectApi\"\r\nimport {\r\n  MainTaskTemplateWithTimeUnits,\r\n  getMainTempUrl,\r\n  TimeUnit,\r\n  saveTemplateUrl,\r\n  deleteTaskTempalteUrl,\r\n  getAllMainTaskTempMinUrl,\r\n  testgetalltasks,\r\n} from \"../api/TaskTemplateApi\"\r\nimport { MinifiedUser } from \"../api/UsersApi\"\r\nimport {\r\n  getNextSortOrder,\r\n  sortProjectTasksWithReturn,\r\n} from \"../utils/projectUtils\"\r\nimport { AuthContext } from \"./AuthContext\"\r\n\r\nexport interface ContextTaskTemp {\r\n  id: number\r\n  fake_id?: string\r\n  task_name: string\r\n  task_code?: string\r\n  estimated_time: number\r\n  time_unit_id: number\r\n  description?: string\r\n  sort_order: number\r\n  parent?: number\r\n  children: ContextTaskTemp[]\r\n  parent_fake_id?: string\r\n  default_assigned_to?: string\r\n}\r\n\r\nexport interface TaskTemplateState {\r\n  // interface data\r\n  error: string | null\r\n  isLoading: boolean\r\n\r\n  // metadata\r\n  timeUnits: TimeUnit[] | null\r\n\r\n  selectedTask: ContextTaskTemp | null\r\n\r\n  // project data\r\n  rootTask: ContextTaskTemp | null\r\n  //autoFillTemplates\r\n  autofillTemplates: AutofillTemplate[]\r\n  // users\r\n  users: MinifiedUser[]\r\n\r\n  // utils\r\n  sortOrder(oldIndex: number, newIndex: number, parent: ContextTaskTemp): void\r\n\r\n  // updates\r\n  setSelectedProjectTaskCb: (task: ContextTaskTemp | null) => void\r\n  addNewTask: (task: ContextTaskTemp) => void\r\n  updateTask: (task: ContextTaskTemp) => void\r\n  saveTemplate: () => Promise<void>\r\n  deleteTask(task: ContextTaskTemp, parent: ContextTaskTemp): void\r\n  canOrderUp(task: ContextTaskTemp, parent: ContextTaskTemp): boolean\r\n  canOrderDown(task: ContextTaskTemp, parent: ContextTaskTemp): boolean\r\n  deleteMainTask(): Promise<void>\r\n}\r\n\r\nexport const TaskTemplateContext = createContext<TaskTemplateState | null>(null)\r\n\r\nexport default function TaskTemplateContextProvider(props: {\r\n  children: JSX.Element\r\n}) {\r\n  // state\r\n  const { id } = useParams()\r\n  const { user } = useContext(AuthContext)!\r\n  const [rootTask, setRootTask] = useState<ContextTaskTemp | null>(null)\r\n  const [timeUnits, setTimeUnits] = useState<TimeUnit[] | null>(null)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const [selectedTask, setSelectedTask] = useState<ContextTaskTemp | null>(null)\r\n  const [users, setUsers] = useState<MinifiedUser[]>([])\r\n  const [autofillTemplates, setAutofillTemplates] = useState<\r\n  any[]\r\n>([])\r\n\r\nconst query: InitQuery = qs.parse(window.location.search.replace(\"?\", \"\"))\r\n  const navigate = useNavigate()\r\n\r\n  /// Init state\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    api<MainTaskTemplateWithTimeUnits>(\r\n      getMainTempUrl(id!, false),\r\n      HttpMethods.Get,\r\n      null,\r\n      {\r\n        Authorization: `Bearer ${user?.tokenStr}`,\r\n      }\r\n    )\r\n      .then((resData) => {\r\n        const { task: apiTask, time_units, users } = resData!\r\n        // setRootTask(apiTask)\r\n        setTimeUnits(time_units)\r\n        setIsLoading(false)\r\n        setError(null)\r\n        updateTask(apiTask)\r\n        setUsers(users)\r\n      })\r\n      .catch((e) => {\r\n        setIsLoading(false)\r\n        setError(e.message)\r\n      })\r\n  }, [])\r\n\r\n    //todo: Paul Added this for autofilling task\r\n    useEffect(() => {\r\n      console.log(\"API CALLEDD SUCC\")\r\n      api<any[]>(\r\n        editTemplateTasksUrl(id!),\r\n        HttpMethods.Get,\r\n        null,\r\n        { Authorization: `Bearer ${user?.tokenStr}` }\r\n      )\r\n        .then((data) => {\r\n\r\n          console.log(data)\r\n  \r\n          setAutofillTemplates(data!)\r\n        })\r\n        .catch((e) => {\r\n           console.log(e)\r\n        })\r\n    }, [])\r\n\r\n      /// Init state\r\n      // useEffect(() => {\r\n      \r\n      //   api<any>(\r\n      //     testgetalltasks(),\r\n      //     HttpMethods.Post,\r\n      //     null,\r\n      //     {\r\n      //       Authorization: `Bearer ${user?.tokenStr}`,\r\n      //     }\r\n      //   )\r\n      //     .then((resData) => {\r\n      //        console.log(\"ALL TASKS:\", resData)\r\n            \r\n      //     })\r\n      //     .catch((e) => {\r\n            \r\n      //     })\r\n      // }, [])\r\n\r\n  // callbacks\r\n  const addNewTask = (task: ContextTaskTemp) => {\r\n    let projAdd: ContextTaskTemp\r\n\r\n    if (selectedTask) {\r\n      projAdd = selectedTask\r\n    } else {\r\n      projAdd = rootTask!\r\n    }\r\n\r\n    task.parent = projAdd.id\r\n    task.sort_order = getNextSortOrder(\r\n      projAdd.children.map((e) => e.sort_order) ?? []\r\n    )\r\n    task.fake_id = v4()\r\n\r\n    projAdd.children.push(task)\r\n    sortProjectTasksWithReturn(projAdd.children)\r\n\r\n    setRootTask(Object.assign({}, rootTask))\r\n  }\r\n\r\n  const updateTask = (newTree: ContextTaskTemp) => {\r\n    function getEstimatedTime(task: ContextTaskTemp): number {\r\n      const map = task.children.map((t) => {\r\n        return (\r\n          t.estimated_time *\r\n          (timeUnits?.find((i) => i.id === t.time_unit_id)?.milliseconds ?? 0)\r\n        )\r\n      })\r\n\r\n      return map.reduce((prev, curr) => prev + curr)\r\n    }\r\n\r\n    function updateEstimatedTimes(task: ContextTaskTemp) {\r\n      if (task.children.length > 0) {\r\n        task.time_unit_id = 3\r\n        const newTime = getEstimatedTime(task)\r\n        task.estimated_time = newTime / 86400000 // one day in mill\r\n        //task.children.forEach((t) => updateEstimatedTimes(t))\r\n      }\r\n    }\r\n\r\n    if (newTree) {\r\n      // skipping first node\r\n      newTree.children.forEach((task) => {\r\n        updateEstimatedTimes(task)\r\n        sortProjectTasksWithReturn(task.children)\r\n      })\r\n    }\r\n\r\n    setRootTask(Object.assign({}, newTree))\r\n  }\r\n  const setSelectedProjectTaskCb = (task: ContextTaskTemp | null) => {\r\n    if (\r\n      selectedTask?.id === task?.id &&\r\n      selectedTask?.fake_id === task?.fake_id\r\n    ) {\r\n      setSelectedTask(rootTask)\r\n    } else {\r\n      setSelectedTask(task)\r\n    }\r\n  }\r\n\r\n  const sortOrder = (\r\n    oldIndex: number,\r\n    newIndex: number,\r\n    parent: ContextTaskTemp\r\n  ) => {\r\n    const activeTask = parent.children.find((i) => i.sort_order === oldIndex)\r\n    if (activeTask) {\r\n      activeTask.sort_order = newIndex\r\n\r\n      if (newIndex < oldIndex) {\r\n        parent.children.forEach((element) => {\r\n          if (element.sort_order >= newIndex && element !== activeTask) {\r\n            element.sort_order++\r\n          }\r\n        })\r\n      } else if (newIndex > oldIndex) {\r\n        parent.children.forEach((element) => {\r\n          if (element.sort_order <= newIndex && element !== activeTask) {\r\n            element.sort_order--\r\n          }\r\n        })\r\n      }\r\n\r\n      // parent.children = arrayMove(parent.children, oldIndex, newIndex)\r\n      sortProjectTasksWithReturn(parent.children)\r\n\r\n      setRootTask(Object.assign({}, rootTask))\r\n    }\r\n  }\r\n\r\n  const saveTemplate = async () => {\r\n    try {\r\n      setIsLoading(true)\r\n      await api<MainTaskTemplateWithTimeUnits>(\r\n        saveTemplateUrl(id!),\r\n        HttpMethods.Post,\r\n        rootTask,\r\n        { Authorization: `Bearer ${user?.tokenStr}` },\r\n        undefined,\r\n        false\r\n      )\r\n      setIsLoading(false)\r\n      navigate(\"/tasks/templates\")\r\n    } catch (e: any) {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  function deleteTask(task: ContextTaskTemp, parent: ContextTaskTemp) {\r\n    if (parent.children.includes(task)) {\r\n      parent.children = parent.children.filter((i) => i !== task)\r\n      setRootTask(Object.assign({}, rootTask))\r\n    }\r\n  }\r\n\r\n  const canOrderUp = (task: ContextTaskTemp, parent: ContextTaskTemp) => {\r\n    const prev = parent.children.find(\r\n      (i) => i.sort_order === task.sort_order - 1\r\n    )\r\n\r\n    return true\r\n  }\r\n\r\n  const canOrderDown = (task: ContextTaskTemp, parent: ContextTaskTemp) => {\r\n    const next = parent.children.find(\r\n      (i) => i.sort_order === task.sort_order + 1\r\n    )\r\n\r\n    return true\r\n  }\r\n\r\n  const deleteMainTask = async () => {\r\n    try {\r\n      setIsLoading(true)\r\n      await api(\r\n        deleteTaskTempalteUrl(id!),\r\n        HttpMethods.Delete,\r\n        null,\r\n        { Authorization: `Bearer ${user?.tokenStr}` },\r\n        \"Something went wrong\",\r\n        false\r\n      )\r\n\r\n      setIsLoading(false)\r\n      navigate(\"/tasks/templates\")\r\n    } catch (e: any) {\r\n      setIsLoading(false)\r\n      setError(e.message)\r\n    }\r\n  }\r\n\r\n  const stateValue: TaskTemplateState = {\r\n    error,\r\n    isLoading,\r\n    timeUnits,\r\n    rootTask,\r\n    sortOrder,\r\n    selectedTask,\r\n    setSelectedProjectTaskCb,\r\n    addNewTask,\r\n    updateTask,\r\n    saveTemplate,\r\n    deleteTask,\r\n    canOrderUp,\r\n    canOrderDown,\r\n    users,\r\n    autofillTemplates,\r\n    deleteMainTask,\r\n  }\r\n\r\n  return (\r\n    <TaskTemplateContext.Provider value={stateValue}>\r\n      {props.children}\r\n    </TaskTemplateContext.Provider>\r\n  )\r\n}\r\n","import TextField from \"@mui/material/TextField\"\r\nimport { Box } from \"@mui/system\"\r\nimport {\r\n  DynamicSelectElement,\r\n  FormElementType,\r\n  formVariants,\r\n} from \"./FormModels\"\r\nimport { styled } from \"@mui/material/styles\"\r\nimport Select from \"@mui/material/Select\"\r\nimport FormControl from \"@mui/material/FormControl\"\r\nimport InputLabel from \"@mui/material/InputLabel\"\r\nimport MenuItem from \"@mui/material/MenuItem\"\r\nimport { Typography } from \"@mui/material\"\r\n\r\n// Styled\r\nconst MainContainer = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-start\",\r\n    margin: theme.spacing(1),\r\n    justifyContent: \"flexs-start\",\r\n    flex: \"1\",\r\n  }\r\n})\r\n\r\nexport interface TaskComponentUpdatableInputFieldProps {\r\n  value?: string\r\n  update: (value: string) => void\r\n  type: FormElementType\r\n  editable: boolean\r\n  label: string\r\n  variant?: formVariants\r\n  values?: DynamicSelectElement[]\r\n  initialValue?: string\r\n  maxLength?: number\r\n  isInput: boolean\r\n  error: boolean\r\n  width?: number\r\n}\r\n\r\nexport default function TaskComponentUpdatableInputField(\r\n  props: TaskComponentUpdatableInputFieldProps\r\n) {\r\n  return (\r\n    <MainContainer>\r\n      {props.isInput && (\r\n        <>\r\n          {(props.type === FormElementType.Text ||\r\n            props.type === FormElementType.Number ||\r\n            props.type === FormElementType.TextArea) && (\r\n            <TextField\r\n              disabled={!props.editable}\r\n              variant={props.variant ?? \"outlined\"}\r\n              required={true}\r\n              type={props.type === FormElementType.Number ? \"number\" : \"text\"}\r\n              value={props.value}\r\n              label={props.label}\r\n              inputProps={{ maxLength: props.maxLength }}\r\n              multiline={props.type === FormElementType.TextArea}\r\n              rows={props.type === FormElementType.TextArea ? 3 : 1}\r\n              color=\"secondary\"\r\n              fullWidth\r\n              error={props.error}\r\n              onChange={(e) => props.update(e.target.value)}\r\n            />\r\n          )}\r\n\r\n          {props.type === FormElementType.Dropdown && (\r\n            <Box sx={{ minWidth: props.width ?? 200 }}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id={props.label + \"-label\"}>\r\n                  {props.label}\r\n                </InputLabel>\r\n                <Select\r\n                  fullWidth\r\n                  disabled={!props.editable}\r\n                  error={props.error}\r\n                  labelId={props.label + \"-label\"}\r\n                  value={props.value}\r\n                  label={props.label}\r\n                  onChange={(e) => props.update(e.target.value)}\r\n                >\r\n                  {props.values!.map((value) => {\r\n                    return (\r\n                      <MenuItem key={value.id} value={value.id}>\r\n                        {value.description}\r\n                      </MenuItem>\r\n                    )\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n            </Box>\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      {!props.isInput && (\r\n        <MainContainer style={{ cursor: \"pointer\", userSelect: \"none\" }}>\r\n          <Typography\r\n            variant=\"caption\"\r\n            style={{ cursor: \"pointer\", userSelect: \"none\" }}\r\n          >\r\n            {props.label}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"body1\"\r\n            style={{ cursor: \"pointer\", userSelect: \"none\" }}\r\n          >\r\n            {(props.type === FormElementType.Text ||\r\n              props.type === FormElementType.Number ||\r\n              props.type === FormElementType.TextArea) &&\r\n              (props.value ?? \"N/A\")}\r\n            {props.type === FormElementType.Dropdown &&\r\n              (props.values?.find((i) => i.id === props.value)?.description ??\r\n                \"N/A\")}\r\n          </Typography>\r\n        </MainContainer>\r\n      )}\r\n    </MainContainer>\r\n  )\r\n}\r\n","import { green, grey } from \"@mui/material/colors\"\r\nimport { styled } from \"@mui/material/styles\"\r\nimport { useContext, useEffect, useState } from \"react\"\r\nimport { FormElementType } from \"../form/FormModels\"\r\nimport KeyboardArrowDownRoundedIcon from \"@mui/icons-material/KeyboardArrowDownRounded\"\r\nimport KeyboardArrowUpRoundedIcon from \"@mui/icons-material/KeyboardArrowUpRounded\"\r\nimport { Divider, IconButton } from \"@mui/material\"\r\nimport { isTaskFirstElement, isTaskLastElement } from \"../../utils/projectUtils\"\r\nimport DeleteRoundedIcon from \"@mui/icons-material/DeleteRounded\"\r\nimport TaskComponentUpdatableInputField from \"../form/TaskComponentUpdatableInputField\"\r\nimport CheckIcon from \"@mui/icons-material/CheckCircleRounded\"\r\nimport CancelIcon from \"@mui/icons-material/CancelRounded\"\r\nimport {\r\n  ContextTaskTemp,\r\n  TaskTemplateContext,\r\n} from \"../../contexts/TaskTemplateContext\"\r\nimport EditRoundedIcon from \"@mui/icons-material/EditRounded\"\r\n\r\nconst StyledRow = styled(\"div\")<{ indent: number }>(({ theme, indent }) => {\r\n  return {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    width: \"100%\",\r\n    paddingLeft: theme.spacing(2 * indent),\r\n  }\r\n})\r\n\r\nconst SelectedDot = styled(\"div\")<{ selected: boolean }>(\r\n  ({ theme, selected }) => {\r\n    return {\r\n      width: \"1rem\",\r\n      height: \"1rem\",\r\n      background: selected ? green[800] : grey[700],\r\n      borderRadius: \"3rem\",\r\n      margin: theme.spacing(0.5),\r\n      cursor: \"pointer\",\r\n      alignSelf: \"center\",\r\n      justifySelf: \"center\",\r\n    }\r\n  }\r\n)\r\n\r\nconst MainContainer = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    width: \"100%\",\r\n  }\r\n})\r\n\r\nconst ButtonRow = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    paddingRight: theme.spacing(4),\r\n  }\r\n})\r\n\r\nconst ColumnContainer = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-end\",\r\n  }\r\n})\r\n\r\nexport interface TaskTempComponentProps {\r\n  task: ContextTaskTemp\r\n  parent: ContextTaskTemp\r\n  indent: number\r\n  isRoot: boolean\r\n}\r\n\r\n// task code -  assign to - planned start date - planned end date\r\nexport default function TaskTempComponent(props: TaskTempComponentProps) {\r\n  const {\r\n    updateTask,\r\n    timeUnits,\r\n    sortOrder,\r\n    selectedTask,\r\n    rootTask,\r\n    setSelectedProjectTaskCb,\r\n    deleteTask,\r\n    canOrderUp,\r\n    users,\r\n    canOrderDown,\r\n  } = useContext(TaskTemplateContext)!\r\n\r\n  // state\r\n  const [taskName, setTaskName] = useState(props.task.task_name)\r\n  const [taskNameErr, setTaskNameErr] = useState(false)\r\n\r\n  const [taskCode, setTaskCode] = useState(props.task.task_code)\r\n  const [taskCodeErr, setTaskCodeErr] = useState(false)\r\n\r\n  const [defaultAssignedTo, setDefaultAssignedTo] = useState(\r\n    props.task.default_assigned_to\r\n  )\r\n\r\n  const [estimatedTime, setEstimatedTime] = useState(props.task.estimated_time)\r\n  const [estimatedTimeErr, setEstimatedTimeErr] = useState(false)\r\n\r\n  const [timeUnitId, setTimeUnitId] = useState(props.task.time_unit_id)\r\n  const [timeUnitIdErr, setTimeUnitIdErr] = useState(false)\r\n\r\n  const [isInput, setIsInput] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setTaskName(props.task.task_name)\r\n    setEstimatedTime(props.task.estimated_time)\r\n    setTimeUnitId(props.task.time_unit_id)\r\n  }, [rootTask])\r\n\r\n  const submit = () => {\r\n    if (validate()) {\r\n      props.task.task_name = taskName\r\n      props.task.estimated_time = estimatedTime\r\n      props.task.time_unit_id = timeUnitId\r\n      props.task.task_code = taskCode\r\n      props.task.default_assigned_to = defaultAssignedTo\r\n      updateTask(rootTask!)\r\n      setIsInput(false)\r\n    }\r\n  }\r\n\r\n  const cancelChanges = () => {\r\n    setTaskName(props.task.task_name)\r\n    setTaskNameErr(false)\r\n\r\n    setEstimatedTime(props.task.estimated_time)\r\n    setEstimatedTimeErr(false)\r\n\r\n    setTimeUnitId(props.task.time_unit_id)\r\n    setTimeUnitIdErr(false)\r\n\r\n    setIsInput(false)\r\n  }\r\n\r\n  const validate: () => boolean = () => {\r\n    let valid = true\r\n    if (taskName.length < 1) {\r\n      setTaskNameErr(true)\r\n      valid = false\r\n    }\r\n\r\n    if (Number.isNaN(timeUnitId)) {\r\n      setTimeUnitIdErr(true)\r\n      valid = false\r\n    }\r\n\r\n    if (Number.isNaN(estimatedTime)) {\r\n      setEstimatedTimeErr(true)\r\n      valid = false\r\n    }\r\n\r\n    return valid\r\n  }\r\n\r\n  return (\r\n    <MainContainer>\r\n      <ColumnContainer>\r\n        <StyledRow indent={props.indent}>\r\n          {!props.isRoot && (\r\n            <>\r\n              <IconButton\r\n                disabled={\r\n                  isTaskLastElement(props.task, props.parent) ||\r\n                  !canOrderDown(props.task, props.parent)\r\n                }\r\n                onClick={() => {\r\n                  sortOrder(\r\n                    props.task.sort_order,\r\n                    props.task.sort_order + 1,\r\n                    props.parent\r\n                  )\r\n                }}\r\n              >\r\n                <KeyboardArrowDownRoundedIcon />\r\n              </IconButton>\r\n              <IconButton\r\n                disabled={\r\n                  isTaskFirstElement(props.task, props.parent) ||\r\n                  !canOrderUp(props.task, props.parent)\r\n                }\r\n                onClick={() => {\r\n                  sortOrder(\r\n                    props.task.sort_order,\r\n                    props.task.sort_order - 1,\r\n                    props.parent\r\n                  )\r\n                }}\r\n              >\r\n                <KeyboardArrowUpRoundedIcon />\r\n              </IconButton>\r\n            </>\r\n          )}\r\n          {props.isRoot && (\r\n            <SelectedDot\r\n              selected={\r\n                props.task.id === selectedTask?.id &&\r\n                props.task.fake_id === selectedTask.fake_id\r\n              }\r\n              onClick={() => setSelectedProjectTaskCb(props.task)}\r\n            />\r\n          )}\r\n\r\n          <TaskComponentUpdatableInputField\r\n            variant=\"outlined\"\r\n            maxLength={40}\r\n            value={taskCode}\r\n            update={(value) => {\r\n              setTaskCode(value)\r\n            }}\r\n            editable\r\n            error={taskCodeErr}\r\n            label=\"Task Code\"\r\n            type={FormElementType.Text}\r\n            isInput={isInput}\r\n            initialValue={taskCode}\r\n          />\r\n\r\n          <TaskComponentUpdatableInputField\r\n            variant=\"outlined\"\r\n            maxLength={40}\r\n            value={taskName}\r\n            update={(value) => {\r\n              setTaskName(value)\r\n            }}\r\n            editable\r\n            error={taskNameErr}\r\n            label=\"Task Name\"\r\n            type={FormElementType.Text}\r\n            isInput={isInput}\r\n            initialValue={taskName}\r\n          />\r\n\r\n          <TaskComponentUpdatableInputField\r\n            variant=\"outlined\"\r\n            maxLength={40}\r\n            error={estimatedTimeErr}\r\n            value={estimatedTime.toString()}\r\n            update={(value) => {\r\n              setEstimatedTime(Math.abs(Number(value)))\r\n            }}\r\n            isInput={isInput}\r\n            editable={props.task.children.length === 0}\r\n            label=\"Estimated Time\"\r\n            type={FormElementType.Number}\r\n            initialValue={estimatedTime.toString()}\r\n          />\r\n          <TaskComponentUpdatableInputField\r\n            width={280}\r\n            variant=\"outlined\"\r\n            error={timeUnitIdErr}\r\n            maxLength={40}\r\n            value={timeUnitId.toString()}\r\n            update={(value) => {\r\n              setTimeUnitId(Number(value))\r\n            }}\r\n            isInput={isInput}\r\n            editable={props.task.children.length === 0}\r\n            label=\"Time Unit\"\r\n            type={FormElementType.Dropdown}\r\n            initialValue={timeUnitId.toString()}\r\n            values={\r\n              timeUnits?.map((tu) => {\r\n                return {\r\n                  id: tu.id.toString(),\r\n                  description: tu.description,\r\n                }\r\n              }) ?? []\r\n            }\r\n          />\r\n          <TaskComponentUpdatableInputField\r\n            width={280}\r\n            variant=\"outlined\"\r\n            error={false}\r\n            maxLength={50}\r\n            value={defaultAssignedTo}\r\n            update={(value) => {\r\n              setDefaultAssignedTo(value)\r\n            }}\r\n            isInput={isInput}\r\n            editable\r\n            label=\"Default Assgined To\"\r\n            type={FormElementType.Dropdown}\r\n            initialValue={defaultAssignedTo}\r\n            values={\r\n              users?.map((tu) => {\r\n                return {\r\n                  id: tu.user_code,\r\n                  description: tu.user_code,\r\n                }\r\n              }) ?? []\r\n            }\r\n          />\r\n\r\n          <IconButton onClick={() => deleteTask(props.task, props.parent)}>\r\n            <DeleteRoundedIcon color=\"error\" />\r\n          </IconButton>\r\n          <IconButton onClick={() => setIsInput(true)}>\r\n            <EditRoundedIcon color=\"info\" />\r\n          </IconButton>\r\n        </StyledRow>\r\n        {isInput && (\r\n          <ButtonRow>\r\n            <IconButton onClick={() => submit()}>\r\n              <CheckIcon color=\"success\" />\r\n            </IconButton>\r\n            <IconButton color=\"error\" onClick={() => cancelChanges()}>\r\n              <CancelIcon />\r\n            </IconButton>\r\n          </ButtonRow>\r\n        )}\r\n      </ColumnContainer>\r\n      <Divider orientation=\"horizontal\" />\r\n      {props.task.children.map((item) => {\r\n        return (\r\n          <TaskTempComponent\r\n            isRoot={false}\r\n            indent={props.indent + 1}\r\n            key={item.fake_id ?? item.id}\r\n            task={item}\r\n            parent={props.task}\r\n          />\r\n        )\r\n      })}\r\n    </MainContainer>\r\n  )\r\n}\r\n","import Button from \"@mui/material/Button\"\r\nimport TextField from \"@mui/material/TextField\"\r\nimport Dialog from \"@mui/material/Dialog\"\r\nimport DialogActions from \"@mui/material/DialogActions\"\r\nimport DialogContent from \"@mui/material/DialogContent\"\r\nimport DialogTitle from \"@mui/material/DialogTitle\"\r\nimport { useContext, useEffect, useState } from \"react\"\r\nimport FormControl from \"@mui/material/FormControl\"\r\nimport InputLabel from \"@mui/material/InputLabel\"\r\nimport Box from \"@mui/system/Box\"\r\nimport Select from \"@mui/material/Select\"\r\nimport MenuItem from \"@mui/material/MenuItem\"\r\nimport { LocalizationProvider } from \"@mui/lab\"\r\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\"\r\nimport { Autocomplete, Typography } from \"@mui/material\"\r\nimport { styled } from \"@mui/material/styles\"\r\n//import frLocale from \"date-fns/locale/fr\"\r\nimport frLocale from \"date-fns/locale/en-CA\"\r\n\r\nimport {\r\n  ContextTaskTemp,\r\n  TaskTemplateContext,\r\n} from \"../../contexts/TaskTemplateContext\"\r\nimport { api, HttpMethods } from \"../../api/ApiControllers\"\r\nimport { getAllMainTaskTempMinUrl, getMainTempUrl, MainTaskTemplateWithTimeUnits } from \"../../api/TaskTemplateApi\"\r\nimport AuthContext from \"../../contexts/AuthContext\"\r\nimport { EditTasksScreenContext } from \"../../contexts/EditTaskScreenContext\"\r\n\r\n\r\n\r\nexport interface NewTaskTempFormDialog2Props {\r\n  open: boolean\r\n  handleClose: () => void\r\n  title: string\r\n}\r\n\r\nconst MainContainer = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"1fr 1fr\",\r\n    gap: theme.spacing(1),\r\n  }\r\n})\r\n\r\nexport default function NewTaskTempFormDialog2(\r\n  props: NewTaskTempFormDialog2Props\r\n) {\r\n  const { timeUnits, addNewTask, users, autofillTemplates } = useContext(TaskTemplateContext)!\r\n  //const {autofillTemplates} = useContext(EditTasksScreenContext)!\r\n  \r\n\r\n  const [taskName, setTaskName] = useState({ error: false, value: \"\" })\r\n  const [estimatedTime, setEstimatedTime] = useState({\r\n    error: false,\r\n    value: \"\",\r\n  })\r\n  const [timeUnitId, setTimeUnitId] = useState({ error: false, value: \"\" })\r\n  const [plannedStart, setPlannedStart] = useState<{\r\n    error: boolean\r\n    value: Date | null\r\n  }>({\r\n    error: false,\r\n    value: null,\r\n  })\r\n  const [plannedEnd, setPlannedEnd] = useState<{\r\n    error: boolean\r\n    value: Date | null\r\n  }>({ error: false, value: null })\r\n  const [taskCode, setTaskCode] = useState({ error: false, value: \"\" })\r\n  const [defaultAssignedTo, setDefaultAssignedTo] = useState({\r\n    error: false,\r\n    value: \"\",\r\n  })\r\n\r\n\r\n\r\n  const validate = () => {\r\n    let valid = true\r\n    if (taskName.value.length < 1) {\r\n      setTaskName({ value: taskName.value, error: true })\r\n      valid = false\r\n    }\r\n\r\n    if (estimatedTime.value.length < 1 || Number.isNaN(estimatedTime.value)) {\r\n      setEstimatedTime({ value: estimatedTime.value, error: true })\r\n      valid = false\r\n    }\r\n\r\n    if (timeUnitId.value.length < 1 || Number.isNaN(timeUnitId.value)) {\r\n      setTimeUnitId({ value: timeUnitId.value, error: true })\r\n      valid = false\r\n    }\r\n\r\n    return valid\r\n  }\r\n\r\n  const submit = () => {\r\n    if (validate()) {\r\n      let task: ContextTaskTemp = {\r\n        children: [],\r\n        id: -1,\r\n        estimated_time: Number(estimatedTime.value),\r\n        task_name: taskName.value,\r\n        time_unit_id: Number(timeUnitId.value),\r\n        sort_order: 1,\r\n        default_assigned_to:\r\n          defaultAssignedTo.value.length === 0\r\n            ? undefined\r\n            : defaultAssignedTo.value,\r\n        task_code: taskCode.value.length === 0 ? undefined : taskCode.value,\r\n      }\r\n      addNewTask(task)\r\n      props.handleClose()\r\n      clear()\r\n    }\r\n  }\r\n\r\n  const clear = () => {\r\n    setTaskName({ error: false, value: \"\" })\r\n    setEstimatedTime({\r\n      error: false,\r\n      value: \"\",\r\n    })\r\n    setTimeUnitId({ error: false, value: \"\" })\r\n    setPlannedStart({\r\n      error: false,\r\n      value: null,\r\n    })\r\n    setPlannedEnd({ error: false, value: null })\r\n    setTaskCode({ error: false, value: \"\" })\r\n    setDefaultAssignedTo({ error: false, value: \"\" })\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (plannedStart.value && timeUnitId.value && estimatedTime.value) {\r\n      const timeUnit = timeUnits?.find((t) => t.id === Number(timeUnitId.value))\r\n\r\n      if (timeUnit) {\r\n        const mil =\r\n          timeUnit.milliseconds *\r\n          (Number(estimatedTime.value) === 0\r\n            ? 0\r\n            : Number(estimatedTime.value) - 1)\r\n        setPlannedEnd({\r\n          error: plannedEnd.error,\r\n          value: new Date(Number(plannedStart.value) + mil),\r\n        })\r\n      }\r\n    }\r\n  }, [plannedStart.value, timeUnitId.value, estimatedTime.value])\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={() => {\r\n        props.handleClose()\r\n        clear()\r\n      }}\r\n    >\r\n      <DialogTitle>{props.title}\r\n      \r\n      <Autocomplete\r\n          disablePortal\r\n          id=\"combo-box-demo\"\r\n          onChange={(e, newValue) => {\r\n            setTaskCode({\r\n              error: taskCode.error,\r\n              value: newValue?.task_code?? \"\"\r\n            })\r\n            \r\n            setTaskName({\r\n              error: taskName.error,\r\n              value: newValue?.task_name ?? \"\",\r\n            })\r\n            setEstimatedTime({\r\n              error: estimatedTime.error,\r\n              value: newValue?.estimated_time?.toString() ?? \"\",\r\n            })\r\n            setTimeUnitId({\r\n              error: timeUnitId.error,\r\n              value: newValue?.time_unit.id?.toString() ?? \"\",\r\n            })\r\n            setDefaultAssignedTo({\r\n              error: defaultAssignedTo.error,\r\n              value: newValue?.default_assigned_to ?? \"\",\r\n            })\r\n            \r\n          }}\r\n          options={autofillTemplates}\r\n          getOptionLabel={(e) => e.task_name}\r\n          sx={{ width: 300 }}\r\n          renderInput={(params) => (\r\n            <TextField {...params} label=\"Autofill Template\" />\r\n          )}\r\n        />\r\n      </DialogTitle>\r\n      <DialogContent style={{ padding: \"1rem\" }}>\r\n        <LocalizationProvider dateAdapter={AdapterDateFns} locale={frLocale}>\r\n          <MainContainer>\r\n            <Typography variant=\"h6\">\r\n              Default Assigned To: &nbsp;&nbsp;\r\n            </Typography>\r\n            <Box sx={{ minWidth: 160 }}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"assigned-label\">Default Assigned To</InputLabel>\r\n                <Select\r\n                  labelId=\"time-unit-label\"\r\n                  id=\"time-unit-select\"\r\n                  value={defaultAssignedTo.value}\r\n                  error={defaultAssignedTo.error}\r\n                  label=\"Default Assigned To\"\r\n                  onChange={(e) =>\r\n                    setDefaultAssignedTo({\r\n                      error: defaultAssignedTo.error,\r\n                      value: e.target.value,\r\n                    })\r\n                  }\r\n                >\r\n                  {users?.map((tu) => (\r\n                    <MenuItem key={tu.user_code} value={tu.user_code}>\r\n                      {tu.description}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Box>\r\n\r\n            <Typography variant=\"h6\">Task Code: &nbsp;&nbsp;</Typography>\r\n            <TextField\r\n              type=\"text\"\r\n              label=\"Task Code\"\r\n              value={taskCode.value}\r\n              error={taskCode.error}\r\n              onChange={(e) => {\r\n                setTaskCode({\r\n                  error: taskCode.error,\r\n                  value: e.target.value,\r\n                })\r\n              }}\r\n            />\r\n\r\n            <Typography variant=\"h6\">Task name: &nbsp;&nbsp;</Typography>\r\n            <TextField\r\n              label=\"Task Name\"\r\n              value={taskName.value}\r\n              type=\"text\"\r\n              error={taskName.error}\r\n              onChange={(e) => {\r\n                setTaskName({ error: taskName.error, value: e.target.value })\r\n              }}\r\n            />\r\n\r\n            <Typography variant=\"h6\">Estimated time: &nbsp;&nbsp;</Typography>\r\n            <TextField\r\n              type=\"number\"\r\n              label=\"Estimated Time\"\r\n              value={estimatedTime.value}\r\n              error={estimatedTime.error}\r\n              onChange={(e) => {\r\n                setEstimatedTime({\r\n                  error: estimatedTime.error,\r\n                  value: Math.abs(Number(e.target.value)).toString(),\r\n                })\r\n              }}\r\n            />\r\n\r\n            <Typography variant=\"h6\">Time unit: &nbsp;&nbsp;</Typography>\r\n            <Box sx={{ minWidth: 160 }}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"assigned-label\">Time Unit</InputLabel>\r\n                <Select\r\n                  labelId=\"time-unit-label\"\r\n                  id=\"time-unit-select\"\r\n                  value={timeUnitId.value}\r\n                  error={timeUnitId.error}\r\n                  label=\"Time unit\"\r\n                  onChange={(e) =>\r\n                    setTimeUnitId({\r\n                      error: timeUnitId.error,\r\n                      value: e.target.value,\r\n                    })\r\n                  }\r\n                >\r\n                  {timeUnits?.map((tu) => (\r\n                    <MenuItem key={tu.id} value={tu.id}>\r\n                      {tu.description}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Box>\r\n          </MainContainer>\r\n        </LocalizationProvider>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          onClick={() => {\r\n            props.handleClose()\r\n            clear()\r\n          }}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={submit}>Add</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n","import { Button, IconButton, Typography } from \"@mui/material\"\r\nimport { styled } from \"@mui/material/styles\"\r\nimport { useContext, useState } from \"react\"\r\nimport empty from \"../../images/empty_temp_1.png\"\r\nimport AddRoundedIcon from \"@mui/icons-material/AddRounded\"\r\nimport grey from \"@mui/material/colors/grey\"\r\nimport PlayArrowRoundedIcon from \"@mui/icons-material/PlayArrowRounded\"\r\nimport ConfirmationDialog from \"../dialogs/ConfirmationDialog\"\r\nimport FastRewindRoundedIcon from \"@mui/icons-material/FastRewindRounded\"\r\nimport { TaskTemplateContext } from \"../../contexts/TaskTemplateContext\"\r\nimport TaskTempComponent from \"./TaskTempComponent\"\r\nimport NewProjectTaskTempFormDialog2 from \"../dialogs/NewProjectTaskTempFormDialog2\"\r\n\r\nconst MainContainer = styled(\"div\")<{ loaded: boolean }>(\r\n  ({ theme, loaded }) => {\r\n    return {\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: loaded ? \"flex-start\" : \"center\",\r\n      alignItems: loaded ? \"flex-start\" : \"center\",\r\n      overflowY: \"scroll\",\r\n      backgroundColor:\r\n        theme.palette.mode === \"light\"\r\n          ? grey[100]\r\n          : theme.palette.background.default,\r\n      paddingTop: theme.spacing(1),\r\n      paddingBottom: theme.spacing(1),\r\n    }\r\n  }\r\n)\r\n\r\nexport default function TaskTempGrid() {\r\n  const { rootTask, saveTemplate } = useContext(TaskTemplateContext)!\r\n\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false)\r\n  const [isConfirmOpen, setIsConfirmOpen] = useState(false)\r\n\r\n  \r\n\r\n  return (\r\n    <div style={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\r\n      <IconButton\r\n        onClick={() => setIsDialogOpen(true)}\r\n        style={{ alignSelf: \"flex-end\" }}\r\n      >\r\n        <AddRoundedIcon />\r\n      </IconButton>\r\n      <MainContainer\r\n        loaded={rootTask?.children !== null && rootTask?.children?.length !== 0}\r\n      >\r\n        {!rootTask ||\r\n          !rootTask.children ||\r\n          (rootTask?.children && rootTask?.children?.length === 0 && (\r\n            <>\r\n              <img src={empty} />\r\n              <Typography>You currently have no taskTree.</Typography>\r\n            </>\r\n          ))}\r\n        {rootTask?.children && rootTask?.children?.length > 0 && (\r\n          <>\r\n            {rootTask?.children?.map((child) => {\r\n              return (\r\n                <TaskTempComponent\r\n                  indent={0}\r\n                  isRoot={true}\r\n                  key={child.fake_id ?? child.id}\r\n                  task={child}\r\n                  parent={rootTask}\r\n                />\r\n              )\r\n            })}\r\n          </>\r\n        )}\r\n      </MainContainer>\r\n      <div\r\n        style={{\r\n          padding: \"0.5rem\",\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"flex-end\",\r\n        }}\r\n      >\r\n        <Button\r\n          endIcon={<FastRewindRoundedIcon />}\r\n          variant=\"contained\"\r\n          color=\"error\"\r\n          onClick={() => window.location.reload()}\r\n          style={{ marginRight: \"2rem\" }}\r\n        >\r\n          Reset Changes\r\n        </Button>\r\n\r\n        <Button\r\n          endIcon={<PlayArrowRoundedIcon />}\r\n          variant=\"contained\"\r\n          color=\"success\"\r\n          onClick={() => setIsConfirmOpen(true)}\r\n        >\r\n          Submit Changes\r\n        </Button>\r\n      </div>\r\n      <NewProjectTaskTempFormDialog2\r\n        open={isDialogOpen}\r\n        handleClose={() => setIsDialogOpen(false)}\r\n        title=\"New Task\"\r\n      />\r\n      <ConfirmationDialog\r\n        isOpen={isConfirmOpen}\r\n        title=\"Submit changes?\"\r\n        content=\"Are you sure you want to submit the changes?\"\r\n        dismiss={() => setIsConfirmOpen(false)}\r\n        positive={async () => await saveTemplate()}\r\n        negativeText=\"Cancel\"\r\n        positiveText=\"Submit\"\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import { Paper, Typography } from \"@mui/material\"\r\nimport { styled } from \"@mui/material/styles\"\r\nimport { useTheme } from \"@mui/system\"\r\n\r\nconst Pill = styled(Paper)<{ color: string; text: string }>(\r\n  ({ theme, color, text }) => {\r\n    return {\r\n      backgroundColor: color,\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"flex-start\",\r\n      justifyContent: \"space-between\",\r\n      paddingTop: theme.spacing(1),\r\n      paddingBottom: theme.spacing(1),\r\n      paddingLeft: theme.spacing(4),\r\n      paddingRight: theme.spacing(8),\r\n      borderRadius: 50,\r\n      color: text,\r\n    }\r\n  }\r\n)\r\n\r\nexport interface TextPillComponentProps {\r\n  title: string\r\n  value: string\r\n  lightColor: string\r\n  darkColor: string\r\n}\r\n\r\nexport default function TextPillComponent(props: TextPillComponentProps) {\r\n  const theme = useTheme()\r\n  return (\r\n    <Pill\r\n      text={theme.palette.mode === \"light\" ? props.darkColor : props.lightColor}\r\n      color={\r\n        theme.palette.mode === \"light\" ? props.lightColor : props.darkColor\r\n      }\r\n    >\r\n      <Typography variant=\"body2\">{props.title}</Typography>\r\n      <Typography variant=\"h5\">{props.value}</Typography>\r\n    </Pill>\r\n  )\r\n}\r\n","import grey from \"@mui/material/colors/grey\"\r\nimport { useContext, useState } from \"react\"\r\nimport ErrorComponent from \"../components/ErrorComponent\"\r\nimport Loading from \"../components/Loading\"\r\nimport {\r\n  ScreenContainer,\r\n  StyledVerticalDivider,\r\n} from \"../components/StyledComponents\"\r\nimport { styled } from \"@mui/material/styles\"\r\nimport { TaskTemplateContext } from \"../contexts/TaskTemplateContext\"\r\nimport TaskTempGrid from \"../components/reusable/TaskTempGrid\"\r\nimport Paper from \"@mui/material/Paper\"\r\nimport green from \"@mui/material/colors/green\"\r\nimport TextPillComponent from \"../components/reusable/PillComponent\"\r\nimport DeleteRoundedIcon from \"@mui/icons-material/DeleteRounded\"\r\nimport Button from \"@mui/material/Button/Button\"\r\nimport ConfirmationDialog from \"../components/dialogs/ConfirmationDialog\"\r\n\r\nconst MainContainer = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    height: \"100%\",\r\n    overflow: \"hidden\",\r\n  }\r\n})\r\n\r\nconst TasksContainer = styled(Paper)(({ theme }) => {\r\n  return {\r\n    flex: \"4\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    backgroundColor:\r\n      theme.palette.mode === \"light\"\r\n        ? grey[300]\r\n        : theme.palette.background.paper,\r\n    height: \"100%\",\r\n    overflow: \"hidden\",\r\n  }\r\n})\r\nconst HeaderContainer = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    width: \"100%\",\r\n    // backgroundColor: grey[200],\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  }\r\n})\r\nexport default function MainTemplateDetailsScreen() {\r\n  const { isLoading, error, rootTask, deleteMainTask } =\r\n    useContext(TaskTemplateContext)!\r\n\r\n  // delete\r\n  const [deleteDialog, setDeleteDialog] = useState(false)\r\n\r\n  return (\r\n    <ScreenContainer\r\n      isDataLoaded={!isLoading && !error && rootTask !== null}\r\n      style={{}}\r\n    >\r\n      {isLoading && <Loading text=\"Loading Template..\" />}\r\n      {error && <ErrorComponent text={error ?? \"Something went wrong\"} />}\r\n      {rootTask && !isLoading && (\r\n        <MainContainer>\r\n          <HeaderContainer>\r\n            <TextPillComponent\r\n              title=\"Title\"\r\n              value={rootTask.task_name}\r\n              lightColor={green[100]}\r\n              darkColor={green[800]}\r\n            />\r\n            <StyledVerticalDivider flexItem orientation=\"vertical\" />\r\n\r\n            <Button\r\n              color=\"error\"\r\n              endIcon={<DeleteRoundedIcon />}\r\n              style={{\r\n                borderRadius: \"50px\",\r\n                padding: \"1rem\",\r\n                marginLeft: \"10px\",\r\n              }}\r\n              variant=\"contained\"\r\n              onClick={() => setDeleteDialog(true)}\r\n            >\r\n              Delete Template\r\n            </Button>\r\n          </HeaderContainer>\r\n          <TasksContainer>\r\n            <TaskTempGrid />\r\n          </TasksContainer>\r\n        </MainContainer>\r\n      )}\r\n      <ConfirmationDialog\r\n        content=\"Are you sure you want to delete this template?\"\r\n        negativeText=\"Cancel\"\r\n        positiveText=\"Delete\"\r\n        title=\"Delete Template\"\r\n        isOpen={deleteDialog}\r\n        dismiss={() => setDeleteDialog(false)}\r\n        positive={async () => {\r\n          setDeleteDialog(false)\r\n          await deleteMainTask()\r\n        }}\r\n      />\r\n    </ScreenContainer>\r\n  )\r\n}\r\n","import { grey } from \"@mui/material/colors\"\r\nimport { useContext, useState } from \"react\"\r\nimport { useNavigate } from \"react-router\"\r\nimport { api, HttpMethods } from \"../api/ApiControllers\"\r\nimport { CriteriaType, PropertyInputType } from \"../api/ApiModels\"\r\nimport {\r\n  getTimeUnitsUrl,\r\n  NewMainTaskRequest,\r\n  newMainTaskTemplateUrl,\r\n  TimeUnit,\r\n} from \"../api/TaskTemplateApi\"\r\nimport { newUserUrl } from \"../api/UsersApi\"\r\nimport AlertDialog from \"../components/dialogs/AlertDialog\"\r\nimport ErrorComponent from \"../components/ErrorComponent\"\r\nimport CustomDynamicForm from \"../components/form/CustomDynamicForm\"\r\nimport {\r\n  DynamicFormElement,\r\n  DynamicFormState,\r\n  DynamicSelectElement,\r\n  FormElementType,\r\n  FormFieldModelType,\r\n} from \"../components/form/FormModels\"\r\nimport Loading from \"../components/Loading\"\r\nimport { ScreenContainer } from \"../components/StyledComponents\"\r\nimport CreateTemplate from \"../components/templates/CreateTemplate\"\r\nimport { AuthContext } from \"../contexts/AuthContext\"\r\nimport useFetch from \"../hooks/useFetch\"\r\n\r\nexport default function NewMainTaskTemplateScreen() {\r\n  const { user } = useContext(AuthContext)!\r\n  const navigate = useNavigate()\r\n\r\n  // state\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n  // Dialog state\r\n  const [dialogOpen, setDialogOpen] = useState(false)\r\n  const [dialogTitle, setDialogTitle] = useState(\"\")\r\n  const [dialogContent, setDialogContent] = useState(\"\")\r\n\r\n  // fetch\r\n  const {\r\n    data: timeUnits,\r\n    isLoading: initLoading,\r\n    error,\r\n  } = useFetch<TimeUnit[]>(getTimeUnitsUrl, HttpMethods.Get, null, {\r\n    Authorization: `Bearer ${user?.tokenStr}`,\r\n  })\r\n\r\n  const getForm: () => DynamicFormElement[] = () => {\r\n    const elements: DynamicFormElement[] = [\r\n      {\r\n        id: \"task_name\",\r\n        db_id: \"task_name\",\r\n        editable: true,\r\n        formFieldModel: FormFieldModelType.Main,\r\n        label: \"Task Name\",\r\n        required: true,\r\n        type: FormElementType.Text,\r\n        fullWidth: true,\r\n        sortOrder: 1,\r\n        variant: \"outlined\",\r\n      },\r\n      {\r\n        id: \"task_code\",\r\n        db_id: \"task_code\",\r\n        editable: true,\r\n        formFieldModel: FormFieldModelType.Main,\r\n        label: \"Task Code\",\r\n        required: false,\r\n        type: FormElementType.Text,\r\n        fullWidth: true,\r\n        sortOrder: 1,\r\n        variant: \"outlined\",\r\n      },\r\n      {\r\n        id: \"description\",\r\n        db_id: \"description\",\r\n        editable: true,\r\n        formFieldModel: FormFieldModelType.Main,\r\n        label: \"Description\",\r\n        required: false,\r\n        type: FormElementType.TextArea,\r\n        fullWidth: true,\r\n        sortOrder: 2,\r\n        variant: \"outlined\",\r\n      },\r\n      {\r\n        id: \"estimated_time\",\r\n        db_id: \"estimated_time\",\r\n        editable: true,\r\n        formFieldModel: FormFieldModelType.Main,\r\n        label: \"Estimated Time\",\r\n        required: true,\r\n        type: FormElementType.Number,\r\n        fullWidth: true,\r\n        sortOrder: 1,\r\n        variant: \"outlined\",\r\n      },\r\n      {\r\n        id: \"time_unit_id\",\r\n        db_id: \"time_unit_id\",\r\n        editable: true,\r\n        formFieldModel: FormFieldModelType.Main,\r\n        label: \"Unit\",\r\n        required: true,\r\n        type: FormElementType.Dropdown,\r\n        fullWidth: true,\r\n        sortOrder: 4,\r\n        variant: \"outlined\",\r\n        values: timeUnits!.map<DynamicSelectElement>((tUnit) => {\r\n          return {\r\n            id: tUnit.id.toString(),\r\n            description: tUnit.description,\r\n          }\r\n        }),\r\n      },\r\n    ]\r\n\r\n    return elements\r\n  }\r\n\r\n  const submitForm = async (state: DynamicFormState[]) => {\r\n    // filtering the elements\r\n    const main = state.filter(\r\n      (element) => element.element.formFieldModel === FormFieldModelType.Main\r\n    )\r\n\r\n    // constructing the body\r\n    const body: NewMainTaskRequest = {\r\n      task_name: main.find((e) => e.element.id === \"task_name\")!.value,\r\n      task_code: main.find((e) => e.element.id === \"task_code\")!.value,\r\n      description: main.find((e) => e.element.id === \"description\")!.value,\r\n      time_unit_id: Number(\r\n        main.find((e) => e.element.id === \"time_unit_id\")!.value\r\n      ),\r\n      estimated_time: Number(\r\n        main.find((e) => e.element.id === \"estimated_time\")!.value\r\n      ),\r\n      sort_order: 1,\r\n    }\r\n    // api call\r\n    try {\r\n      setIsLoading(true)\r\n      const response = await api<{ id: number }>(\r\n        newMainTaskTemplateUrl,\r\n        HttpMethods.Post,\r\n        body,\r\n        {\r\n          Authorization: `Bearer ${user?.tokenStr}`,\r\n        },\r\n        undefined\r\n      )\r\n      console.log(response)\r\n\r\n      const redirect = response\r\n        ? `/tasks/templates/${response.id}`\r\n        : \"/tasks/templates/\"\r\n\r\n      navigate(redirect)\r\n    } catch (e: any) {\r\n      setDialogTitle(\"Something went wrong\")\r\n      setDialogContent(e.message)\r\n      setDialogOpen(true)\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ScreenContainer\r\n      isDataLoaded={!initLoading && !isLoading && !error && timeUnits !== null}\r\n    >\r\n      {initLoading && <Loading text=\"Loading Schema..\" />}\r\n      {error && <ErrorComponent text={error} />}\r\n      {isLoading && <Loading text=\"Creating Template\" />}\r\n      {timeUnits && !isLoading && !initLoading && (\r\n        <div\r\n          style={{\r\n            height: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"stretch\",\r\n          }}\r\n        >\r\n          <CreateTemplate\r\n            buttonText=\"Create\"\r\n            formElements={getForm()}\r\n            gridTempCol=\"1fr 1fr\"\r\n            submitForm={submitForm}\r\n            title=\"New Template\"\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      <AlertDialog\r\n        content={dialogContent}\r\n        isOpen={dialogOpen}\r\n        title={dialogTitle}\r\n        onClose={() => setDialogOpen(false)}\r\n      />\r\n    </ScreenContainer>\r\n  )\r\n}\r\n","import { Typography } from \"@mui/material\"\r\nimport { styled } from \"@mui/material/styles\"\r\n\r\nconst Main = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    height: \"100%\",\r\n  }\r\n})\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <Main>\r\n      <Typography variant=\"h5\">Not Found</Typography>\r\n    </Main>\r\n  )\r\n}\r\n","import { styled } from \"@mui/material/styles\"\r\nimport { useContext, useState, useEffect } from \"react\"\r\nimport { useNavigate } from \"react-router\"\r\nimport { CustomPaginationTableRow } from \"../components/reusable/CustomPaginationTable\"\r\nimport DisplayTemplate from \"../components/templates/DisplayTemplate\"\r\nimport { AuthContext } from \"../contexts/AuthContext\"\r\nimport { getAllMinifiedProjectsUrl, getProjecTableView, getProjectStatus, MinifiedProject, ProjectTableView } from \"../api/ProjectApi\"\r\nimport {  getProjectIdFormat, getTableProjectTitleFormat } from \"../utils/formatters\"\r\nimport { api, HttpMethods } from \"../api/ApiControllers\"\r\nimport moment from \"moment\"\r\n\r\nconst MainContainer = styled(\"div\")(() => {\r\n  return {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"stretch\",\r\n  }\r\n})\r\n\r\n\r\nexport function getDayFromDate(date: string) {\r\n  let parts = date.split(' ');\r\n  let months = [\"Jan\",  \r\n  \"Feb\" ,\r\n  \"Mar\",    \r\n  \"Apr\" ,   \r\n  \"May\"  ,    \r\n  \"Jun\",     \r\n  \"Jul\",     \r\n  \"Aug\" ,  \r\n  \"Sep\",\r\n  \"Oct\"  ,\r\n  \"Nov\" ,\r\n  \"Dec\" ]\r\n  let month = months.findIndex((m)=> m==parts[1])+1\r\n  let year = parts[5]\r\n  let day = parts[2]\r\n  let time = parts[3].split(':')\r\n  let hours  = parseInt(time[0])\r\n  let min = parseInt(time[1])\r\n  let sec = parseInt(time[2])\r\n  \r\n  const datee = new Date(parseInt(year), month, parseInt(day),hours,min, sec)\r\n  console.log(date, datee)\r\n\r\n  const momnt = moment(datee).format(\"D/M/YYYY\")\r\n  \r\n\r\n  return momnt\r\n}\r\n\r\nexport default function ProjectsScreen() {\r\n  const { user } = useContext(AuthContext)!\r\n  const navigate = useNavigate()\r\n\r\n\r\n\r\nfunction localGetProjectStatus(id: number | string){\r\n\r\n  \r\n  api<any>(\r\n    getProjectStatus(id!),\r\n    HttpMethods.Get,\r\n    null,\r\n    { Authorization: `Bearer ${user?.tokenStr}` },\r\n    \"Something went wrong\",\r\n    true\r\n  )\r\n\r\n    .then((data) => {\r\n\r\n      if(data==true){\r\n        return \"Complete\"\r\n      }else{\r\n        return \"Active\"\r\n       \r\n      }\r\n     \r\n    })\r\n    .catch((e) => {\r\n      console.log(e)\r\n      \r\n    })\r\n\r\n}\r\n\r\n  const getTableState =  (data: MinifiedProject[]) => {\r\n  // if(user?.token.roles.includes(\"ADMIN\") || user?.token.roles.includes(\"CFO\") )\r\n\r\n    \r\n \r\n    const headers: string[] = [\r\n      \"Number\",\r\n      \"Title\",\r\n      \"Client\",\r\n      \"Assigned to\",\r\n      // \"Total\",\r\n      // \"Paid\",\r\n      // \"Remaining\",\r\n      \"Delivery Date\",\r\n      \"Status\",\r\n    ]\r\n\r\n  \r\n\r\n\r\n    \r\n  \r\n    const rows:  CustomPaginationTableRow[] = data.map((project) => {\r\n      //TODO: Charbel: Added this status check to change the project status to complete if the last task is completed\r\n\r\n\r\n      let status;\r\n      if(project.is_draft==1){\r\n        status = \"Pending\"\r\n      }else if(project.is_draft==2){\r\n        status = \"Complete\"\r\n      }else{\r\n        status = \"Active\"\r\n      }\r\n\r\n     \r\n\r\n      \r\n        return {\r\n          \r\n          id: `${project.id}&${project.user_code}`,\r\n          cells: [\r\n            getProjectIdFormat(project.id),\r\n            project.title,\r\n            project.client_code,\r\n            project.user_code,\r\n            // project.total_price,\r\n            // project.amount_paid,\r\n            // project.total_price - project.amount_paid,\r\n            JSON.stringify(getDayFromDate(project.estimated_delivery)).replaceAll('\"', ''),\r\n            status,\r\n          ],\r\n        }\r\n  \r\n\r\n      \r\n    })\r\n\r\n\r\n\r\n\r\n    return {\r\n      heads: headers,\r\n      rows,\r\n    // rowsWithstatus\r\n    }\r\n\r\n\r\n  }\r\n\r\n  \r\n  return (\r\n    <MainContainer>\r\n      <DisplayTemplate\r\n        searchLabel=\"Search titles..\"\r\n        loadingLabel=\"Loading Projects..\"\r\n        url={getAllMinifiedProjectsUrl}\r\n        newButtonText=\"New Project\"\r\n        newEntityUrl=\"/projects/new\"\r\n        tableState={(data) => getTableState(data as MinifiedProject[])}\r\n        rowClicked={(id) => {\r\n          const [projId, userCode] = id.toString().split(\"&\")\r\n          if (\r\n            user?.username === userCode ||\r\n            user?.token?.roles?.includes(\"ADMIN\")\r\n          ) {\r\n            navigate(`/projects/${projId}`)\r\n          } else {\r\n            navigate(`/projects/${projId}/preview`)\r\n          }\r\n        }}\r\n        pageTitle=\"Projects\"\r\n        showNewButton={user?.token?.roles.includes(\"ADMIN\")}\r\n      />\r\n    </MainContainer>\r\n  )\r\n      \r\n\r\n}\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\nimport { useNavigate, useParams } from \"react-router\"\r\nimport { api, HttpMethods } from \"../api/ApiControllers\"\r\nimport {\r\n  getProjectsUrl,\r\n  ProjectTaskInterface,\r\n  ProjectWithMetaDataInterface,\r\n  ProjectWithoutTaskInterface,\r\n  TaskStatusInterface,\r\n} from \"../api/ProjectApi\"\r\nimport { TimeUnit } from \"../api/TaskTemplateApi\"\r\nimport { AuthContext } from \"./AuthContext\"\r\n\r\nexport interface ProjectState {\r\n  isLoading: boolean\r\n  error: string | null\r\n  timeUnits: TimeUnit[] | null\r\n  project: ProjectWithoutTaskInterface | null\r\n  rootTask: ProjectTaskInterface | null\r\n  status: TaskStatusInterface[] | null\r\n  deleteProject(): Promise<void>\r\n}\r\n\r\nexport const ProjectContext = createContext<ProjectState | null>(null)\r\n\r\nexport default function ProjectContextProvider(props: {\r\n  children: JSX.Element\r\n}) {\r\n  const navigate = useNavigate()\r\n  // state\r\n  const { id } = useParams()\r\n  const { user } = useContext(AuthContext)!\r\n  const [rootTask, setRootTask] = useState<ProjectTaskInterface | null>(null)\r\n  const [project, setProject] = useState<ProjectWithoutTaskInterface | null>(\r\n    null\r\n  )\r\n  const [timeUnits, setTimeUnits] = useState<TimeUnit[] | null>(null)\r\n  const [taskStatus, setTaskStatus] = useState<TaskStatusInterface[] | null>(\r\n    null\r\n  )\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [error, setError] = useState<string | null>(null)\r\n\r\n  const deleteProject = async () => {\r\n    try {\r\n      setIsLoading(true)\r\n      await api(\r\n        getProjectsUrl(id!),\r\n        HttpMethods.Delete,\r\n        null,\r\n        { Authorization: `Bearer ${user?.tokenStr}` },\r\n        \"Something went wrong\",\r\n        false\r\n      )\r\n      setIsLoading(false)\r\n      navigate(\"/projects\")\r\n    } catch (e: any) {\r\n      setIsLoading(false)\r\n      setError(e.message)\r\n    }\r\n  }\r\n\r\n  /// Init state\r\n  useEffect(() => {\r\n    api<ProjectWithMetaDataInterface>(\r\n      getProjectsUrl(id!),\r\n      HttpMethods.Get,\r\n      null,\r\n      {\r\n        Authorization: `Bearer ${user?.tokenStr}`,\r\n      }\r\n    )\r\n      .then((resData) => {\r\n        const { project, time_units, status } = resData!\r\n        setRootTask(project.task_tree)\r\n        setProject(project)\r\n        setTaskStatus(status)\r\n        setTimeUnits(time_units)\r\n        setIsLoading(false)\r\n        setError(null)\r\n      })\r\n      .catch((e) => {\r\n        setIsLoading(false)\r\n        setError(e.message)\r\n      })\r\n  }, [])\r\n\r\n  const stateValue: ProjectState = {\r\n    error,\r\n    rootTask,\r\n    isLoading,\r\n    timeUnits,\r\n    project,\r\n    deleteProject,\r\n    status: taskStatus,\r\n  }\r\n\r\n  return (\r\n    <ProjectContext.Provider value={stateValue}>\r\n      {props.children}\r\n    </ProjectContext.Provider>\r\n  )\r\n}\r\n","import * as React from \"react\"\r\nimport Dialog from \"@mui/material/Dialog\"\r\nimport AppBar from \"@mui/material/AppBar\"\r\nimport Toolbar from \"@mui/material/Toolbar\"\r\nimport IconButton from \"@mui/material/IconButton\"\r\nimport Typography from \"@mui/material/Typography\"\r\nimport CloseIcon from \"@mui/icons-material/Close\"\r\nimport Slide from \"@mui/material/Slide\"\r\nimport { TransitionProps } from \"@mui/material/transitions\"\r\nimport SortableTree from \"@nosferatu500/react-sortable-tree\"\r\nimport { ProjectTaskInterface } from \"../../api/ProjectApi\"\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & {\r\n    children: React.ReactElement\r\n  },\r\n  ref: React.Ref<unknown>\r\n) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />\r\n})\r\n\r\ninterface TreeElement {\r\n  title: string\r\n  children: TreeElement[]\r\n}\r\n\r\nexport default function ProjectTaskTreeViewDialog(props: {\r\n  isOpen: boolean\r\n  handleClose: () => void\r\n  tasks: ProjectTaskInterface[]\r\n}) {\r\n  const getTreeData: (tasks: ProjectTaskInterface[]) => TreeElement[] = (\r\n    tasks: ProjectTaskInterface[]\r\n  ) => {\r\n    return tasks.map((element) => {\r\n      return {\r\n        title: element.task_name,\r\n        children: getTreeData(element.children ?? []),\r\n      }\r\n    })\r\n  }\r\n\r\n  const [treeData, setTreeData] = React.useState(getTreeData(props.tasks))\r\n\r\n  React.useEffect(() => {\r\n    setTreeData(getTreeData(props.tasks))\r\n  }, [props.tasks])\r\n\r\n  return (\r\n    <Dialog\r\n      fullScreen\r\n      open={props.isOpen}\r\n      onClose={props.handleClose}\r\n      TransitionComponent={Transition}\r\n    >\r\n      <AppBar sx={{ position: \"relative\" }}>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            onClick={props.handleClose}\r\n            aria-label=\"close\"\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n          <Typography sx={{ ml: 2, flex: 1 }} variant=\"h6\" component=\"div\">\r\n            Tree View\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <SortableTree\r\n        style={{ color: \"black\" }}\r\n        canDrag={() => false}\r\n        canDrop={() => false}\r\n        onChange={(data) => {\r\n          setTreeData(data)\r\n        }}\r\n        treeData={treeData}\r\n      />\r\n    </Dialog>\r\n  )\r\n}\r\n","import deepOrange from \"@mui/material/colors/deepOrange\"\r\nimport { styled, useTheme } from \"@mui/material/styles\"\r\nimport Paper from \"@mui/material/Paper\"\r\nimport IconButton from \"@mui/material/IconButton\"\r\nimport { useContext, useState } from \"react\"\r\nimport TreeIcon from \"@mui/icons-material/AccountTreeRounded\"\r\nimport { ProjectContext } from \"../../contexts/ProjectContext\"\r\nimport ProjectTaskTreeViewDialog from \"../dialogs/ProjectTaskTreeViewDialog\"\r\nimport EditRoundedIcon from \"@mui/icons-material/EditRounded\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport WatchLaterRoundedIcon from \"@mui/icons-material/WatchLaterRounded\"\r\nimport AssessmentIcon from \"@mui/icons-material/AssessmentRounded\"\r\nimport { AuthContext } from \"../../contexts/AuthContext\"\r\nimport AddTaskIcon from \"@mui/icons-material/AddTask\"\r\nimport HoverPopover from \"./HoverPopover\"\r\n\r\nconst LeftTaskHolder = styled(Paper)(({ theme }) => {\r\n  return {\r\n    backgroundColor:\r\n      theme.palette.mode === \"light\" ? deepOrange[100] : deepOrange[800],\r\n    padding: theme.spacing(1),\r\n    margin: theme.spacing(1),\r\n    borderRadius: \"50px\",\r\n  }\r\n})\r\n\r\nconst HeaderContainer = styled(\"div\")(() => {\r\n  return {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  }\r\n})\r\n\r\nexport default function ProjectEditPill() {\r\n  const navigate = useNavigate()\r\n  const theme = useTheme()\r\n  const { user } = useContext(AuthContext)!\r\n  // context\r\n  const { rootTask, project } = useContext(ProjectContext)!\r\n\r\n  const [treeDialogOpen, setTreeDialogOpen] = useState(false)\r\n\r\n  return (\r\n    <LeftTaskHolder>\r\n      <HeaderContainer>\r\n        <HoverPopover hoverText=\"TreeView\">\r\n          <IconButton\r\n            onClick={() => setTreeDialogOpen(true)}\r\n            style={{\r\n              color:\r\n                theme.palette.mode === \"light\"\r\n                  ? deepOrange[800]\r\n                  : deepOrange[100],\r\n            }}\r\n          >\r\n            <TreeIcon />\r\n          </IconButton>\r\n        </HoverPopover>\r\n        <HoverPopover hoverText=\"Edit Tasks\">\r\n          <IconButton\r\n            onClick={() => navigate(`/projects/${project?.id}/tasks/edit`)}\r\n          >\r\n            <AddTaskIcon\r\n              style={{\r\n                color:\r\n                  theme.palette.mode === \"light\"\r\n                    ? deepOrange[800]\r\n                    : deepOrange[100],\r\n              }}\r\n            />\r\n          </IconButton>\r\n        </HoverPopover>\r\n        <HoverPopover hoverText=\"View Reschedule Requests\">\r\n          <IconButton\r\n            onClick={() => navigate(`/projects/${project?.id}/reschedule`)}\r\n          >\r\n            <WatchLaterRoundedIcon\r\n              style={{\r\n                color:\r\n                  theme.palette.mode === \"light\"\r\n                    ? deepOrange[800]\r\n                    : deepOrange[100],\r\n              }}\r\n            />\r\n          </IconButton>\r\n        </HoverPopover>\r\n        {user?.token?.roles?.includes(\"ADMIN\") && (\r\n          <HoverPopover hoverText=\"Duration Report\">\r\n            <IconButton\r\n              onClick={() =>\r\n                navigate(`/projects/${project?.id}/tasks/duration/report`)\r\n              }\r\n            >\r\n              <AssessmentIcon\r\n                style={{\r\n                  color:\r\n                    theme.palette.mode === \"light\"\r\n                      ? deepOrange[800]\r\n                      : deepOrange[100],\r\n                }}\r\n              />\r\n            </IconButton>\r\n          </HoverPopover>\r\n        )}\r\n        {user?.token?.roles?.includes(\"ADMIN\") && (\r\n          <HoverPopover hoverText=\"Edit Project Details\">\r\n            <IconButton\r\n              onClick={() => navigate(`/projects/${project?.id}/edit`)}\r\n            >\r\n              <EditRoundedIcon\r\n                style={{\r\n                  color:\r\n                    theme.palette.mode === \"light\"\r\n                      ? deepOrange[800]\r\n                      : deepOrange[100],\r\n                }}\r\n              />\r\n            </IconButton>\r\n          </HoverPopover>\r\n        )}\r\n      </HeaderContainer>\r\n\r\n      <ProjectTaskTreeViewDialog\r\n        isOpen={treeDialogOpen}\r\n        handleClose={() => {\r\n          setTreeDialogOpen(false)\r\n        }}\r\n        tasks={rootTask?.children ?? []}\r\n      />\r\n    </LeftTaskHolder>\r\n  )\r\n}\r\n","import { Button, Dialog, TextField, Typography } from \"@mui/material\"\r\nimport { useContext, useEffect, useState } from \"react\"\r\nimport { api, HttpMethods } from \"../../api/ApiControllers\"\r\nimport { addTaskMoreDetailsUrl, editProjectTaskItemUrl } from \"../../api/TaskTemplateApi\"\r\nimport { AuthContext } from \"../../contexts/AuthContext\"\r\nimport { InputContainer } from \"../StyledComponents\"\r\n\r\nexport interface EditProjectTaskItemDialog {\r\n    open: boolean\r\n    handleClose: () => void\r\n    taskId: number\r\n    projectId: number\r\n    item_number: string\r\n    item_name: string\r\n    quantity: number\r\n    item_id: number\r\n    dismiss(): void \r\n}\r\n\r\n\r\n\r\nexport default function EditProjectTaskItemDialog(\r\n    props: EditProjectTaskItemDialog\r\n  ) {\r\n\r\n\r\n   \r\n    const { user } = useContext(AuthContext)!\r\n    //const [itemNumber, setItemNumber] = useState({ error: false, value: \"\" })\r\n   const [itemNumber, setItemNumber] = useState({ error: false, value: props.item_number })\r\n   // const [itemName, setItemName] = useState({ error: false, value: \"\" })\r\n    const [itemName, setItemName] = useState({ error: false, value: props.item_name })\r\n   // const [quantity, setQuantity] = useState({ error: false, value: 0 })\r\n    const [quantity, setQuantity] = useState({ error: false, value: props.quantity })\r\n\r\n    const [open, setOpen] = useState(props.open)\r\n\r\n    console.log(\"ITEM NUMBEEr\", props.item_number, itemNumber)\r\n\r\n\r\n\r\n    function setInputsValues(){\r\n       \r\n        setItemName({ error: false, value: props.item_name })\r\n        setItemNumber({ error: false, value: props.item_number })\r\n        setQuantity({ error: false, value: props.quantity })\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n      console.log(\"uxsdsdsfdfdgfs\") \r\n      if(props.open==true){\r\n        setInputsValues()\r\n      }\r\n    }, [props.open])\r\n   \r\n  //  ()=>{\r\n      //setInputsValues()\r\n    //}\r\n\r\n   // setInputsValues()\r\n\r\n    // useEffect(()=>{\r\n    //   console.log(\"uxs\") \r\n    //     setInputsValues()\r\n    //   }, [])\r\n\r\n      \r\n      function validate(): boolean {\r\n        let valid = true\r\n\r\n        if(itemName.value == \"\"){\r\n            setItemName({error: true, value: ''})\r\n            valid=false\r\n        }else{\r\n            setItemName({error: false, value: itemName.value})\r\n        }\r\n    \r\n        if(Number.isNaN(itemNumber.value)){\r\n            setItemNumber({error: true, value: \"\"})\r\n            valid= false\r\n        }else{\r\n            setItemNumber({error: false, value: itemNumber.value})\r\n        }\r\n\r\n        if(Number.isNaN(quantity.value)){\r\n            setQuantity({error: true, value: 0})\r\n            valid=false\r\n        }else{\r\n            setQuantity({error: false, value: quantity.value})\r\n            \r\n        }\r\n    \r\n        return valid\r\n      }\r\n\r\n      function clear() {\r\n        setItemName({error: false, value: ''})\r\n  \r\n        setItemNumber({error: false, value: \"\"})\r\n    \r\n        setQuantity({error: false, value: 0})\r\n  }\r\n  \r\n\r\n    const submit =  async  ()=>{\r\n\r\n        try {\r\n            if(validate()){\r\n              console.log(\"EDIIT BODY:\",  { id: props.item_id,project_id: props.projectId, task_id: props.taskId,item_name: itemName.value, item_number: itemNumber.value, quantity: quantity.value })\r\n            const res: any = await api<any>(\r\n                editProjectTaskItemUrl(),\r\n                HttpMethods.Patch,\r\n                { id: props.item_id,project_id: props.projectId, task_id: props.taskId,item_name: itemName.value, item_number: itemNumber.value, quantity: quantity.value },\r\n                //null,\r\n                {\r\n                  Authorization: `Bearer ${user?.tokenStr}`,\r\n                },\r\n                \"Something went wrong\",\r\n                true\r\n              )\r\n            }\r\n\r\n             \r\n        clear()\r\n        props.dismiss()\r\n        \r\n            \r\n        } catch (error: any) {\r\n            \r\n        }\r\n       \r\n\r\n      }\r\n\r\n\r\n      return(\r\n        <Dialog\r\n              open={props.open}\r\n              onClose={() => {\r\n                  props.handleClose()\r\n              } }\r\n              onBackdropClick={()=>{\r\n                props.dismiss()\r\n                \r\n              }}\r\n          >\r\n\r\n<InputContainer>\r\n           <Typography variant=\"h6\">Item Number: &nbsp;&nbsp;</Typography>\r\n            <TextField\r\n              required\r\n              type=\"number\"\r\n              label=\"Item Number\"\r\n              value={itemNumber.value}\r\n              error={itemNumber.error}\r\n              onChange={(e) => {\r\n                setItemNumber( {\r\n                  error: itemNumber.error, \r\n                  value: e.target.value, \r\n                })\r\n              }}\r\n            />\r\n            </InputContainer>   \r\n\r\n            <InputContainer>\r\n            <Typography variant=\"h6\">Item name: &nbsp;&nbsp;</Typography>\r\n            <TextField\r\n              required\r\n              label=\"Item Name\"\r\n              value={itemName.value}\r\n              type=\"text\"\r\n              error={itemName.error}\r\n              onChange={(e) => {\r\n                setItemName({ error: itemName.error, value: e.target.value })\r\n              }}\r\n            />\r\n            </InputContainer>\r\n\r\n            <InputContainer>\r\n            <Typography variant=\"h6\">Quantity: &nbsp;&nbsp;</Typography>\r\n            <TextField\r\n              required\r\n              type=\"number\"\r\n              label=\"Quantity\"\r\n              value={quantity.value}\r\n              error={quantity.error}\r\n              onChange={(e) => {\r\n                setQuantity({\r\n                  error: quantity.error,\r\n                  value: parseInt(e.target.value),\r\n                })\r\n              }}\r\n            />\r\n            </InputContainer>\r\n\r\n            <Button onClick={submit}>Edit</Button>\r\n\r\n        </Dialog>\r\n      )\r\n\r\n  }","import { Button, Dialog, IconButton, styled, TextField, Typography } from \"@mui/material\"\r\nimport { useContext, useEffect, useState } from \"react\"\r\nimport { api, HttpMethods } from \"../../api/ApiControllers\"\r\nimport { addTaskMoreDetailsUrl, deleteProjectTaskItemUrl, taskMoredetailsUrl } from \"../../api/TaskTemplateApi\"\r\nimport { AuthContext } from \"../../contexts/AuthContext\"\r\nimport { CustomPaginationTableRow } from \"../reusable/CustomPaginationTable\"\r\nimport LivePaginationTable, { PaginationActionType } from \"../reusable/LivePaginationTable\"\r\nimport { InputContainer, StyledVerticalDivider } from \"../StyledComponents\"\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport { blue, red } from \"@mui/material/colors\"\r\nimport EditProjectTaskItemDialog from \"./EditProjectTaskItemDialog\"\r\nimport ConfirmationDialog from \"./ConfirmationDialog\"\r\nimport { Console } from \"console\"\r\n\r\nexport interface TaskMoreDetailsDialog {\r\n    open: boolean\r\n    handleClose: () => void\r\n    taskId: number\r\n    projectId: number\r\n    data: any[]\r\n}\r\n\r\nexport interface ITaskItem{\r\n    id: number\r\n    item_number: string\r\n    item_name: string\r\n    quantity: number\r\n}\r\n\r\n\r\nconst HeaderContainer = styled(\"div\")(({ theme }) => {\r\n    return {\r\n      width: \"100%\",\r\n      // backgroundColor: grey[200],\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      flexWrap: \"wrap\",\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(1),\r\n    }\r\n  })\r\n\r\nexport default function TaskMoreDetailsDialog(\r\n    props: TaskMoreDetailsDialog\r\n  ) {\r\n\r\n    \r\n\r\n    const [pageNumber, setPageNumber] = useState(0)\r\n    const [pageCount, setPageCount] = useState(1)\r\n    const [data, setData] = useState<ITaskItem[]>(props.data)\r\n    const { user } = useContext(AuthContext)!\r\n    const [itemNumber, setItemNumber] = useState({ error: false, value: \"\" })\r\n    const [itemName, setItemName] = useState({ error: false, value: \"\" })\r\n    const [quantity, setQuantity] = useState({ error: false, value: 0 })\r\n\r\n    const [currentItemNumber, setCurrentItemNumber] = useState(\"\")\r\n    const [currentItemName, setCurrentItemName] = useState(\"testestt\")\r\n    const [currentQuantity, setCurrentQuantity] = useState(0)\r\n    const [currentItemId, setCurrentItemId] = useState(0)\r\n\r\n    const [isConfirmOpen, setIsConfirmOpen] = useState(false)\r\n\r\n  \r\n    const [openEditDialog, setOpenEditDialog] = useState(false)\r\n\r\n    var currentname = \"testinitial\"\r\n\r\n    const onEditClick = ()=>{\r\n\r\n    }\r\n\r\n    useEffect(()=>{\r\n      getData()\r\n    }, [openEditDialog])\r\n    useEffect(()=>{\r\n      getData()\r\n    }, [isConfirmOpen])\r\n    useEffect(()=>{\r\n      getData()\r\n    }, [props.open])\r\n\r\n\r\n    const getTableState =  (data: ITaskItem[]) => {\r\n    \r\n        const headers: string[] = [\r\n          \"Item Number\",\r\n          \"Item Name\",\r\n          \"Quantity\",\r\n          \"Actions\"\r\n        ]\r\n\r\n      \r\n        const rows:  CustomPaginationTableRow[] = data.map((detail) => {\r\n \r\n            return {\r\n              id: detail.id,\r\n              cells: [\r\n                detail.item_number,\r\n                detail.item_name,\r\n                detail.quantity, \r\n                   \r\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n            <IconButton\r\n              onClick={() => {\r\n           \r\n                setCurrentItemName(detail.item_name)\r\n                setCurrentItemNumber(detail.item_number)\r\n                setCurrentQuantity(detail.quantity)\r\n                setCurrentItemId(detail.id)\r\n                setOpenEditDialog(true)\r\n                console.log(\"CURRENTTT NAME\",detail.item_name ,  currentItemName )\r\n                // setComment(task.comment ?? \"No comments yet.\")\r\n                // setCommentDialog(true)\r\n              }}\r\n            >\r\n              <EditIcon\r\n                style={{\r\n                  color: blue[800],\r\n                }}\r\n              />\r\n            </IconButton>\r\n\r\n            <IconButton\r\n              onClick={() => {\r\n                setCurrentItemId(detail.id)\r\n                setIsConfirmOpen(true)\r\n                // setcurrentTaskId(task.id)\r\n                // setIsMoreDetailsDialogOpen(true)\r\n              }}\r\n            >\r\n              <DeleteForeverIcon\r\n                style={{\r\n                  color: red[500],\r\n                }}\r\n              />\r\n            </IconButton>\r\n\r\n          </div>\r\n              \r\n              ],\r\n            }\r\n\r\n        })\r\n    \r\n    \r\n        return {\r\n          heads: headers,\r\n          rows,\r\n        }\r\n    \r\n    \r\n      }\r\n\r\n    const getData = async () => {\r\n        try {\r\n\r\n          console.log(\"GET DATATATATATATATTA\")\r\n      \r\n          const res: any = await api<ITaskItem[]>(\r\n            taskMoredetailsUrl(props.projectId, props.taskId),\r\n            HttpMethods.Get,\r\n            //{ page_number: pageNum, search: search },\r\n            null,\r\n            {\r\n              Authorization: `Bearer ${user?.tokenStr}`,\r\n            },\r\n            \"Something went wrong\",\r\n            true\r\n          )\r\n     \r\n\r\n          setData(res!)\r\n          console.log(\"ressss\",res)\r\n\r\n          // //props.data.splice(0,props.data.length)\r\n          // res!.forEach((item: ITaskItem )=> {\r\n          //   props.data.push(item)\r\n          // });\r\n\r\n          // props.data = res!\r\n\r\n          console.log(\"PROPSSS DATA\",props.data)\r\n      \r\n        } catch (e: any) {\r\n          console.log(\"ERRRR\",e)\r\n      \r\n        }\r\n      }\r\n\r\n      \r\n\r\n      const addItem = async () =>{\r\n        try {\r\n            const res: any = await api<any>(\r\n                addTaskMoreDetailsUrl(),\r\n                HttpMethods.Post,\r\n                { projectId: props.projectId, taskId: props.taskId,itemName: itemName, itemNumber: itemNumber, quantity: quantity },\r\n                //null,\r\n                {\r\n                  Authorization: `Bearer ${user?.tokenStr}`,\r\n                },\r\n                \"Something went wrong\",\r\n                true\r\n              )\r\n            \r\n        } catch (error: any) {\r\n            \r\n        }\r\n      }\r\n\r\n      //URLS\r\n      //taskMoredetailsUrl\r\n      //addTaskMoreDetailsUrl\r\n\r\n\r\n\r\n    const movePageCallback = async (type: PaginationActionType, page?: number) => {\r\n\r\n\r\n        // switch (type) {\r\n        //   case PaginationActionType.Input:{\r\n        //     if (page == null || page == undefined || page == NaN) {\r\n        //       break\r\n        //     }else{\r\n        //       getData(page!!)\r\n        //       break\r\n        //     }\r\n      \r\n        //   }\r\n        //   case PaginationActionType.First: {\r\n        //     getData(0)\r\n        //     break\r\n        //   }\r\n        //   case PaginationActionType.Previous: {\r\n        //     let newPage\r\n        //    // if (!didSearchChange) {\r\n        //       newPage = pageNumber - 1\r\n        //     // } else {\r\n        //     //   newPage = 0\r\n        //     // }\r\n        //     // const newPage = pageNumber - 1\r\n        //     getData(newPage)\r\n        //     break\r\n        //   }\r\n        //   case PaginationActionType.Next: {\r\n        //     let newPage\r\n        //    // if (!didSearchChange) {\r\n        //       newPage = pageNumber + 1\r\n        //     //} else {\r\n        //       //newPage = 0\r\n        //     //}\r\n    \r\n        //     //const newPage = pageNumber + 1\r\n        //     getData(newPage)\r\n        //     break\r\n        //   }\r\n        //   case PaginationActionType.Last: {\r\n        //     let newPage\r\n        //    // if (!didSearchChange) {\r\n        //       newPage = pageCount - 1\r\n        //     // } else {\r\n        //     //   newPage = 0\r\n        //     // }\r\n        //     getData(newPage)\r\n        //     break\r\n        //   }\r\n        //   default: {\r\n        //     break\r\n        //   }\r\n        // }\r\n      }\r\n\r\n      function clear() {\r\n            setItemName({error: false, value: ''})\r\n      \r\n            setItemNumber({error: false, value: \"\"})\r\n        \r\n            setQuantity({error: false, value: 0})\r\n      }\r\n\r\n      function validate(): boolean {\r\n        let valid = true\r\n\r\n        if(itemName.value == \"\"){\r\n            setItemName({error: true, value: ''})\r\n            valid=false\r\n        }else{\r\n            setItemName({error: false, value: itemName.value})\r\n        }\r\n    \r\n        if(Number.isNaN(itemNumber.value)){\r\n            setItemNumber({error: true, value: \"\"})\r\n            valid= false\r\n        }else{\r\n            setItemNumber({error: false, value: itemNumber.value})\r\n        }\r\n\r\n        if(Number.isNaN(quantity.value)){\r\n            setQuantity({error: true, value: 0})\r\n            valid=false\r\n        }else{\r\n            setQuantity({error: false, value: quantity.value})\r\n            \r\n        }\r\n    \r\n        return valid\r\n      }\r\n\r\n\r\n      const submit = async  ()=>{\r\n\r\n        try {\r\n            if(validate()){\r\n              console.log( { projectId: props.projectId, taskId: props.taskId,itemName: itemName.value, itemNumber: itemNumber.value, quantity: quantity.value })\r\n            const res: any = await api<any>(\r\n                addTaskMoreDetailsUrl(),\r\n                HttpMethods.Post,\r\n                //body:\r\n                { projectId: props.projectId, taskId: props.taskId,itemName: itemName.value, itemNumber: itemNumber.value, quantity: quantity.value },\r\n                \r\n                {\r\n                  Authorization: `Bearer ${user?.tokenStr}`,\r\n                },\r\n                \"Something went wrong\",\r\n                true\r\n              )\r\n\r\n             // props.data.push({id:props.data.length+1,item_name: itemName.value, item_number: itemNumber.value, quantity: quantity.value })\r\n             \r\n             getData()\r\n             \r\n             clear()\r\n            }\r\n\r\n     \r\n        //getData();\r\n            \r\n        } catch (error: any) {\r\n            \r\n        }\r\n\r\n      }\r\n\r\n      const deleteItem = async () =>{\r\n            const res: any = await api<any>(\r\n                deleteProjectTaskItemUrl(currentItemId),\r\n                HttpMethods.Delete,\r\n                //body:\r\n                //{ projectId: props.projectId, taskId: props.taskId,itemName: itemName.value, itemNumber: itemNumber.value, quantity: quantity.value },\r\n                null,\r\n                {\r\n                  Authorization: `Bearer ${user?.tokenStr}`,\r\n                },\r\n                \"Something went wrong\",\r\n                true\r\n              )\r\n\r\n              setIsConfirmOpen(false)\r\n\r\n              console.log(\"DELETEDDDD\")\r\n      }\r\n\r\n    //  const updateData = (nb: string, nm: string, qt: number)=>{\r\n    //     var i = props.data.findIndex((a)=>{\r\n    //       a.id == currentItemId\r\n    //     })\r\n    //     props.data[i].item_name = nm\r\n    //     props.data[i].item_number = nb\r\n    //     props.data[i].quantity = q\r\n\r\n        \r\n    //   }\r\n\r\n    \r\n\r\n\r\n      if(user?.token.roles.includes(\"ADMIN\") || user?.token.roles.includes(\"CFO\") ){\r\n\r\n    return (\r\n        <Dialog\r\n        open={props.open}\r\n        onClose={() => {\r\n          props.handleClose()\r\n        //  clear()\r\n        }}\r\n        fullWidth\r\n       maxWidth=\"xl\"\r\n      >\r\n\r\n<HeaderContainer>\r\n  \r\n         <InputContainer>\r\n           <Typography variant=\"h6\">Item Number: &nbsp;&nbsp;</Typography>\r\n            <TextField\r\n              required\r\n              type=\"text\"\r\n              label=\"Item Number\"\r\n              value={itemNumber.value}\r\n              error={itemNumber.error}\r\n              onChange={(e) => {\r\n                setItemNumber({\r\n                  error: itemNumber.error,\r\n                  value: e.target.value,\r\n                })\r\n              }}\r\n            />\r\n            </InputContainer>   \r\n\r\n            <StyledVerticalDivider orientation=\"vertical\" flexItem />\r\n                <InputContainer>\r\n            <Typography variant=\"h6\">Item name: &nbsp;&nbsp;</Typography>\r\n            <TextField\r\n              required\r\n              label=\"Item Name\"\r\n              value={itemName.value}\r\n              type=\"text\"\r\n              error={itemName.error}\r\n              onChange={(e) => {\r\n                setItemName({ error: itemName.error, value: e.target.value })\r\n              }}\r\n            />\r\n            </InputContainer>\r\n\r\n            <StyledVerticalDivider orientation=\"vertical\" flexItem />\r\n                <InputContainer>\r\n            <Typography variant=\"h6\">Quantity: &nbsp;&nbsp;</Typography>\r\n            <TextField\r\n              required\r\n              type=\"number\"\r\n              label=\"Quantity\"\r\n              value={quantity.value}\r\n              error={quantity.error}\r\n              onChange={(e) => {\r\n                setQuantity({\r\n                  error: quantity.error,\r\n                  value: parseInt(e.target.value),\r\n                })\r\n              }}\r\n            />\r\n            </InputContainer>\r\n\r\n           <Button onClick={submit}>Add</Button>\r\n\r\n</HeaderContainer>\r\n\r\n         <LivePaginationTable\r\n              currentPage={pageNumber}\r\n              pageCount={pageCount}\r\n              movePage={movePageCallback}\r\n              onRowClick={()=>{}}\r\n              table={getTableState(data)}\r\n              notInProjectsView={true}\r\n            />\r\n\r\n<EditProjectTaskItemDialog\r\n          open={openEditDialog}\r\n          handleClose={()=> getData()}\r\n          taskId={props.taskId}\r\n          projectId={props.projectId}\r\n          item_number={currentItemNumber}\r\n          item_name={currentItemName}\r\n          quantity={currentQuantity}\r\n          item_id={currentItemId}\r\n          dismiss={()=> {\r\n            setOpenEditDialog(false)\r\n            getData()\r\n          } }\r\n          \r\n          ></EditProjectTaskItemDialog>\r\n        <ConfirmationDialog\r\n        isOpen={isConfirmOpen}\r\n        title={\"Delete Task Item\"}\r\n        content={\"Are You Sure You Want To Delete This Item?\"}\r\n        dismiss={() => setIsConfirmOpen(false)}\r\n        positive={async () => await deleteItem()}\r\n        negativeText=\"Cancel\"\r\n        positiveText={\"Delete\"}\r\n      />\r\n\r\n\r\n\r\n\r\n\r\n      </Dialog>\r\n\r\n        \r\n    )}\r\n    else{\r\n        return (\r\n            <Dialog\r\n            open={props.open}\r\n            onClose={() => {\r\n              props.handleClose()\r\n            //  clear()\r\n            }}\r\n          >\r\n            <LivePaginationTable\r\n            currentPage={pageNumber}\r\n            pageCount={pageCount}\r\n            movePage={movePageCallback}\r\n            onRowClick={()=>{}}\r\n            table={getTableState(data)}\r\n            notInProjectsView={true}\r\n          />\r\n          <EditProjectTaskItemDialog\r\n          open={openEditDialog}\r\n          handleClose={()=> getData()}\r\n          taskId={props.taskId}\r\n          projectId={props.projectId}\r\n          item_number={currentItemNumber}\r\n          item_name={currentItemName}\r\n          quantity={currentQuantity}\r\n          item_id={currentItemId}\r\n          dismiss={()=> {\r\n            setOpenEditDialog(false)\r\n            getData()\r\n          } }\r\n          \r\n          ></EditProjectTaskItemDialog>\r\n        <ConfirmationDialog\r\n        isOpen={isConfirmOpen}\r\n        title={\"Delete Task Item\"}\r\n        content={\"Are You Sure You Want To Delete This Item?\"}\r\n        dismiss={() => setIsConfirmOpen(false)}\r\n        positive={async () => {\r\n          await deleteItem()\r\n         \r\n        }}\r\n        negativeText=\"Cancel\"\r\n        positiveText={\"Delete\"}\r\n      />\r\n       \r\n\r\n          \r\n      </Dialog>\r\n\r\n        )\r\n    }\r\n  }","import grey from \"@mui/material/colors/grey\"\r\nimport { useContext, useEffect, useState } from \"react\"\r\nimport ErrorComponent from \"../components/ErrorComponent\"\r\nimport Loading from \"../components/Loading\"\r\nimport {\r\n  ScreenContainer,\r\n  StyledVerticalDivider,\r\n} from \"../components/StyledComponents\"\r\nimport { styled } from \"@mui/material/styles\"\r\nimport { ProjectContext } from \"../contexts/ProjectContext\"\r\nimport ProjectEditPill from \"../components/reusable/ProjectEditPill\"\r\nimport { Button, FormControl, IconButton } from \"@mui/material\"\r\nimport { green, blue, teal, orange, red, purple, yellow, lightBlue } from \"@mui/material/colors\"\r\nimport TextPillComponent from \"../components/reusable/PillComponent\"\r\nimport { formatCurrency, getDayFromDate, getProjectIdFormat } from \"../utils/formatters\"\r\nimport { useNavigate, useParams } from \"react-router\"\r\nimport AttachMoneyRoundedIcon from \"@mui/icons-material/AttachMoneyRounded\"\r\nimport CustomPaginationTable, {\r\n  CustomPaginationTableRow,\r\n  CustomPaginationTableState,\r\n} from \"../components/reusable/CustomPaginationTable\"\r\nimport { getProjecTableView, getProjectStatus, ProjectTableView } from \"../api/ProjectApi\"\r\nimport { AuthContext } from \"../contexts/AuthContext\"\r\nimport { api, HttpMethods } from \"../api/ApiControllers\"\r\nimport CommentRoundedIcon from \"@mui/icons-material/CommentRounded\"\r\nimport CheckCircleRounded from \"@mui/icons-material/CheckCircleRounded\"\r\nimport AlertDialog from \"../components/dialogs/AlertDialog\"\r\nimport DeleteRoundedIcon from \"@mui/icons-material/DeleteRounded\"\r\nimport ConfirmationDialog from \"../components/dialogs/ConfirmationDialog\"\r\n\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormLabel from '@mui/material/FormLabel';\r\n\r\nimport moment from \"moment\";\r\nimport NewTaskTempFormDialog2 from \"../components/dialogs/NewProjectTaskTempFormDialog2\"\r\nimport TaskMoreDetailsDialog, { ITaskItem } from \"../components/dialogs/TaskMoreDetailsDialog\"\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport { taskMoredetailsUrl } from \"../api/TaskTemplateApi\"\r\n\r\nconst MainContainer = styled(\"div\")(() => {\r\n  return {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    height: \"100%\",\r\n    overflow: \"hidden\",\r\n  }\r\n})\r\n\r\nconst HeaderContainer = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    width: \"100%\",\r\n    // backgroundColor: grey[200],\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  }\r\n})\r\nexport function currentGetDayFromDate(date: string) {\r\n  let parts = date.split('/');\r\n  let months = [\"Jan\",  \r\n  \"Feb\" ,\r\n  \"Mar\",    \r\n  \"Apr\" ,   \r\n  \"May\"  ,    \r\n  \"Jun\",     \r\n  \"Jul\",     \r\n  \"Aug\" ,  \r\n  \"Sep\",\r\n  \"Oct\"  ,\r\n  \"Nov\" ,\r\n  \"Dec\" ]\r\n  let month =parts[1]\r\n  let year = parts[2]\r\n  let day = parts[0]\r\n  let time = parts[3].split(':')\r\n\r\n  \r\n  const datee = new Date(parseInt(year), parseInt(month), parseInt(day))\r\n  console.log(\"DATE\", datee)\r\n\r\n  const momnt = moment(datee).format(\"DD/MM/YYYY\")\r\n  \r\n\r\n  return datee\r\n}\r\n\r\n\r\nexport default function ProjectDetailsScreen() {\r\n  const { id } = useParams()\r\n  const { user } = useContext(AuthContext)!\r\n  const { project, deleteProject } = useContext(ProjectContext)!\r\n  const navigate = useNavigate()\r\n\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [error, setError] = useState<string | null>(null)\r\n\r\n  // comment\r\n  const [comment, setComment] = useState<string | null>(null)\r\n  const [commentDialog, setCommentDialog] = useState(false)\r\n\r\n  const [tasks, setTasks] = useState<ProjectTableView[]>([])\r\n  const [currentTaskId, setcurrentTaskId]= useState(0)\r\n  const [isMoreDetailsDialogOpen, setIsMoreDetailsDialogOpen]= useState(false)\r\n\r\n\r\n  const [sortValue, setSortValue] = useState('none');\r\n  const [projectStatus, setProjectStatus] = useState('Active')\r\n\r\n  const[taskItems, setTaskItems] = useState<ITaskItem[]>([])\r\n\r\n  // delete\r\n  const [deleteDialog, setDeleteDialog] = useState(false)\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    \r\n    api<ProjectTableView[]>(\r\n     \r\n      getProjecTableView(id!),\r\n      HttpMethods.Get,\r\n      null,\r\n      { Authorization: `Bearer ${user?.tokenStr}` },\r\n      \"Something went wrong\",\r\n      true\r\n    )\r\n      .then((data) => {\r\n        setIsLoading(false)\r\n        setError(null)\r\n        setTasks(data!)\r\n        console.log(\"TASKS\",tasks)\r\n      })\r\n      .catch((e) => {\r\n        setIsLoading(false)\r\n        setError(e.message)\r\n      })\r\n  }, [])\r\n\r\n  const getTaskItem = async (taskId: number) => {\r\n    try {\r\n\r\n      console.log(\"GET TASK ITEMS 2\")\r\n  \r\n      const res: any = await api<ITaskItem[]>(\r\n        taskMoredetailsUrl(parseInt(id!), taskId),\r\n        HttpMethods.Get,\r\n        //{ page_number: pageNum, search: search },\r\n        null,\r\n        // {\r\n        //   Authorization: `Bearer ${user?.tokenStr}`,\r\n        // },\r\n        null,\r\n        \"Something went wrong\",\r\n        true\r\n      )\r\n\r\n\r\n      console.log(\"DETAILS\",res)\r\n      setTaskItems(res!)\r\n  \r\n    } catch (e: any) {\r\n      console.log(\" DETAILS ERRRR\",e)\r\n    \r\n    }\r\n  }\r\n\r\n  //projectStatus\r\n  // useEffect(() => {\r\n  //   setIsLoading(true)\r\n    \r\n  //   api<any>(\r\n     \r\n  //     getProjectStatus(id!),\r\n  //     HttpMethods.Get,\r\n  //     null,\r\n  //     { Authorization: `Bearer ${user?.tokenStr}` },\r\n  //     \"Something went wrong\",\r\n  //     true\r\n  //   )\r\n  //     .then((data) => {\r\n  //       setIsLoading(false)\r\n  //       setError(null)\r\n  //       if(data==true){\r\n  //         setProjectStatus(\"Complete\")\r\n\r\n  //       }else{\r\n  //         setProjectStatus(\"Active\")\r\n  //       }\r\n  //       console.log(\"PROJECT ID STATUS\",projectStatus)\r\n  //     })\r\n  //     .catch((e) => {\r\n  //       setIsLoading(false)\r\n  //       setError(e.message)\r\n  //     })\r\n  // }, [])\r\n  \r\n\r\n  \r\n  \r\n  const handleSortingChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSortValue((event.target as HTMLInputElement).value);\r\n    let currentSortValue = (event.target as HTMLInputElement).value;\r\n    let sortedDataa;\r\n   \r\n    switch (currentSortValue) {\r\n      case 'none':\r\n        \r\n          api<ProjectTableView[]>(\r\n            getProjecTableView(id!),\r\n            HttpMethods.Get,\r\n            null,\r\n            { Authorization: `Bearer ${user?.tokenStr}` },\r\n            \"Something went wrong\",\r\n            true\r\n          )\r\n            .then((data) => {\r\n              setIsLoading(false)\r\n              setError(null)\r\n              setTasks(data!)\r\n            })\r\n            .catch((e) => {\r\n              setIsLoading(false)\r\n              setError(e.message)\r\n            })\r\n       \r\n      \r\n        break;\r\n      case 'status':\r\n        sortedDataa = tasks!.sort((a: any,b: any)=>{ console.log(\"a.status:\", a.status); return a.status - b.status})\r\n        setTasks(sortedDataa);\r\n        break;\r\n      case 'plannedEndDate':\r\n        sortedDataa = tasks!.sort((a: any,b: any)=>{ \r\n          let dateA =specififcDateFormat(getDayFromDate(new Date(a.planned_start_date)));\r\n         let dateB =specififcDateFormat(getDayFromDate(new Date(b.planned_start_date)));\r\n       \r\n         if(dateA < dateB){\r\n            return -1;\r\n           //return 1;\r\n          }\r\n          if(dateA > dateB){\r\n            return 1;\r\n           // return -1;\r\n          }\r\n          return 0;\r\n        })\r\n        setTasks(sortedDataa);\r\n      break;\r\n      case 'plannedStartDate':\r\n        sortedDataa = tasks!.sort((a: any,b: any)=>{ \r\n\r\n          console.log(\"TASKSS\",tasks)\r\n          let dateA =specififcDateFormat(getDayFromDate(new Date(a.planned_start_date)));\r\n         let dateB =specififcDateFormat(getDayFromDate(new Date(b.planned_start_date)));\r\n\r\n    \r\n         if(dateA < dateB){\r\n            return -1;\r\n            //return 1;\r\n          }\r\n          if(dateA > dateB){\r\n            return 1;\r\n           // return -1;\r\n          }\r\n          return 0;\r\n        })\r\n        setTasks(sortedDataa);\r\n      break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n\r\n\r\n\r\n    \r\n  };\r\n\r\n  function specififcDateFormat(date:string) {\r\n    let parts= date.split('/')\r\n    let month = parseInt(parts[1])-1\r\n    let day = parseInt(parts[0])\r\n    let year = parseInt(parts[2])\r\n   \r\n   \r\n    let newDate = new Date(year, month, day)\r\n   \r\n     return newDate;\r\n   }\r\n\r\n   function getDifferenceInDays(date1: any, date2: any) {\r\n    const diffInMs = Math.abs(date2 - date1);\r\n    return Math.ceil(diffInMs / (1000 * 60 * 60 * 24));\r\n  }\r\n\r\n  \r\nfunction isDelayed(task:any) {\r\n  if(task?.status != \"Complete\"){\r\n    if(new Date().getTime() > new Date(task?.planned_end_date).getTime()){\r\n       return getDifferenceInDays(new Date(), new Date(task?.planned_end_date))\r\n    }else{\r\n     return null\r\n    }\r\n  }else{\r\n    return null\r\n  }\r\n  \r\n}\r\n\r\n  function getTableState(): CustomPaginationTableState {\r\n    const headers: string[] = [\r\n      \"Assigned\",\r\n      \"Code\",\r\n      \"Name\",\r\n      \"Time\",\r\n      \"Unit\",\r\n      \"Planned Start\",\r\n      \"Planned End\",\r\n      \"Actual Start\",\r\n      \"Actual End\",\r\n      \"Progress\",\r\n      \"Progress Updated\",\r\n      \"Status\",\r\n      \"Actions\"\r\n    ]\r\n\r\n    const rows: CustomPaginationTableRow[] = tasks.map((task) => {\r\n      //TODO: Charbel: Added the completed check for the mark as completed button\r\n      let completed = false\r\n      if(task.progress == 100){\r\n        completed = true\r\n      }\r\n      console.log(\"STATUS\", task.status)\r\n      if(completed){\r\n        return {\r\n          id: task.id,\r\n          cells: [\r\n            task.assigned_to ?? \"-\",\r\n            task.task_code ?? \"-\",\r\n            task.task_name ?? \"-\",\r\n            task.estimated_time,\r\n            task.time_unit,\r\n            task.planned_start_date\r\n              ? getDayFromDate(new Date(task.planned_start_date))\r\n              : \"-\",\r\n            task.planned_end_date\r\n              ? getDayFromDate(new Date(task.planned_end_date))\r\n              : \"-\",\r\n            task.actual_start_date\r\n              ? getDayFromDate(new Date(task.actual_start_date))\r\n              : \"-\",\r\n            task.actual_end_date\r\n              ? getDayFromDate(new Date(task.actual_end_date))\r\n              : \"-\",\r\n            task.progress + \"%\",\r\n            task.progress_last_updated\r\n              ? getDayFromDate(new Date(task.progress_last_updated))\r\n              : \"-\",\r\n            task.status,\r\n            \r\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n              <IconButton\r\n                onClick={() => {\r\n                  setComment(task.comment ?? \"No comments yet.\")\r\n                  setCommentDialog(true)\r\n                }}\r\n              >\r\n                <CommentRoundedIcon\r\n                  style={{\r\n                    color: blue[800],\r\n                  }}\r\n                />\r\n              </IconButton>\r\n\r\n              <IconButton\r\n                onClick={async () => {\r\n                  await getTaskItem(task.id)\r\n                  setcurrentTaskId(task.id)\r\n                  setIsMoreDetailsDialogOpen(true)\r\n                }}\r\n              >\r\n                <InfoIcon\r\n                  style={{\r\n                    color: lightBlue[500],\r\n                  }}\r\n                />\r\n              </IconButton>\r\n\r\n            </div>\r\n          ],\r\n        }\r\n      }else{\r\n        return {\r\n          id: task.id,\r\n          cells: [\r\n            task.assigned_to ?? \"-\",\r\n            task.task_code ?? \"-\",\r\n            task.task_name ?? \"-\",\r\n            task.estimated_time,\r\n            task.time_unit,\r\n            task.planned_start_date\r\n              ? getDayFromDate(new Date(task.planned_start_date))\r\n              : \"-\",\r\n            task.planned_end_date\r\n              ? getDayFromDate(new Date(task.planned_end_date))\r\n              : \"-\",\r\n            task.actual_start_date\r\n              ? getDayFromDate(new Date(task.actual_start_date))\r\n              : \"-\",\r\n            task.actual_end_date\r\n              ? getDayFromDate(new Date(task.actual_end_date))\r\n              : \"-\",\r\n            task.progress + \"%\",\r\n            task.progress_last_updated\r\n              ? getDayFromDate(new Date(task.progress_last_updated))\r\n              : \"-\",\r\n            task.status,\r\n  \r\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n              <IconButton\r\n                onClick={() => {\r\n                  setComment(task.comment ?? \"No comments yet.\")\r\n                  setCommentDialog(true)\r\n                }}\r\n              >\r\n                <CommentRoundedIcon\r\n                  style={{\r\n                    color: blue[800],\r\n                  }}\r\n                />\r\n              </IconButton>\r\n\r\n              <IconButton\r\n                onClick={async () => {\r\n                  await getTaskItem(task.id)\r\n                  setcurrentTaskId(task.id)\r\n                  setIsMoreDetailsDialogOpen(true)\r\n                }}\r\n              >\r\n                <InfoIcon\r\n                  style={{\r\n                    color: lightBlue[500],\r\n                  }}\r\n                />\r\n              </IconButton>\r\n            </div>\r\n            \r\n          ],\r\n        }\r\n      }\r\n    })\r\n\r\n\r\n    return {\r\n      heads: headers,\r\n      rows,\r\n    }\r\n  }\r\n\r\n\r\n  //TODO: Charbel: Added the TextPillComponent for the last task due date, the ADMIN check for the price tag, and the number of delayed days \r\n  const today = getDayFromDate(new Date()).split(\"/\")\r\n  const a = getDayFromDate(new Date(tasks[tasks.length-1]?.planned_end_date!)).split(\"/\")\r\n  console.log(\"fetched date: \", tasks[tasks.length-1]?.planned_end_date!)\r\n  console.log(\"a\",a)\r\n  let days = parseInt(today[0]) - parseInt(a[0])\r\n  if(parseInt(today[1]) > parseInt(a[1])){\r\n    const difference = parseInt(today[1]) - parseInt(a[1])\r\n    for(let i=0; i<difference; i++){\r\n      if(today[1] == \"2\"){\r\n        days += 28 \r\n      }else if(today[1] == \"1\" || today[1] == \"3\" || today[1] == \"5\" || today[1] == \"7\" || today[1] == \"8\" || today[1] == \"10\" || today[1] == \"12\"){\r\n        days += 31 \r\n      }else{\r\n        days += 30 \r\n      }\r\n    }\r\n  }\r\n  if(parseInt(today[2]) > parseInt(a[2])){\r\n    const difference = parseInt(today[2]) - parseInt(a[2])\r\n    days += 365 * difference\r\n  } \r\n  \r\n  let status;\r\n  if(project?.is_draft == 1){\r\n    status = \"Pending\"\r\n  }else if(project?.is_draft == 2){\r\n    status = \"Complete\"\r\n  }else{\r\n    status =\"Active\"\r\n  }\r\n  // if(projectStatus == \"Complete\"){\r\n  //   status = \"Complete\"\r\n  // }\r\n // if(tasks[tasks.length-1]?.status != 'Complete' && (parseInt(today[2]) > parseInt(a[2]) || (parseInt(today[1]) > parseInt(a[1]) || (parseInt(today[0]) > parseInt(a[0]))))){\r\n if(isDelayed(tasks[tasks.length-1]) != null)  {\r\n if(user?.token.roles.includes(\"ADMIN\") || user?.token.roles.includes(\"CFO\") ){\r\n      return (\r\n        <ScreenContainer isDataLoaded={!isLoading && !error}>\r\n          {isLoading && <Loading text=\"Loading Project..\" />}\r\n          {error && <ErrorComponent text={error ?? \"Something went wrong\"} />}\r\n          {!isLoading && !error && (\r\n            <div\r\n              style={{ display: \"flex\", flexDirection: \"column\", height: \"100%\" }}\r\n            >\r\n              <HeaderContainer>\r\n              <TextPillComponent\r\n                  title=\"Project Number\"\r\n                 \r\n                  value={JSON.stringify(getProjectIdFormat(project?.id) ?? 0).slice(1).replace('\"', '')}\r\n\r\n\r\n                  lightColor={grey[100]}\r\n                  darkColor={grey[900]}\r\n                />\r\n                <StyledVerticalDivider flexItem orientation=\"vertical\" />\r\n                <TextPillComponent\r\n                  title=\"Client\"\r\n                  value={project?.client?.description ?? \"\"}\r\n                  lightColor={green[100]}\r\n                  darkColor={green[800]}\r\n                />\r\n                <StyledVerticalDivider flexItem orientation=\"vertical\" />\r\n                <TextPillComponent\r\n                  title=\"Project Owner\"\r\n                  value={project?.user?.description ?? \"\"}\r\n                  lightColor={blue[100]}\r\n                  darkColor={blue[800]}\r\n                />\r\n                <StyledVerticalDivider flexItem orientation=\"vertical\" />\r\n                <TextPillComponent\r\n                  title=\"Price\"\r\n                  value={formatCurrency(\r\n                    project?.total_price ?? 0,\r\n                    project?.currency_code ?? \"USD\"\r\n                  )}\r\n                  lightColor={teal[100]}\r\n                  darkColor={teal[800]}\r\n                />\r\n                <StyledVerticalDivider flexItem orientation=\"vertical\" />\r\n                <TextPillComponent\r\n                  title=\"Paid\"\r\n                  value={formatCurrency(\r\n                    project?.paid_amount ?? 0,\r\n                    project?.currency_code ?? \"USD\"\r\n                  )}\r\n                  lightColor={orange[100]}\r\n                  darkColor={orange[800]}\r\n                />\r\n                <StyledVerticalDivider flexItem orientation=\"vertical\" />\r\n                <TextPillComponent\r\n                  title=\"Delivery Date\"\r\n                  value={\r\n                    project?.estimated_delivery\r\n                      ? getDayFromDate(new Date(project.estimated_delivery))\r\n                      : \"N/A\"\r\n                  }\r\n                  lightColor={red[100]}\r\n                  darkColor={red[800]}\r\n                />\r\n                <StyledVerticalDivider flexItem orientation=\"vertical\" />\r\n                <TextPillComponent\r\n                  title=\"Status\"\r\n                  value={status}\r\n                  lightColor={purple[100]}\r\n                  darkColor={purple[800]}\r\n                />\r\n                <Button\r\n                  endIcon={<AttachMoneyRoundedIcon />}\r\n                  style={{\r\n                    borderRadius: \"50px\",\r\n                    padding: \"1rem\",\r\n                    marginLeft: \"10px\",\r\n                    backgroundColor: green[600],\r\n                  }}\r\n                  variant=\"contained\"\r\n                  onClick={() => navigate(`/projects/${id}/payments`)}\r\n                >\r\n                  Payment\r\n                </Button>\r\n                {user?.token?.roles.includes(\"ADMIN\") && (\r\n                  <Button\r\n                    color=\"error\"\r\n                    endIcon={<DeleteRoundedIcon />}\r\n                    style={{\r\n                      borderRadius: \"50px\",\r\n                      padding: \"1rem\",\r\n                      marginLeft: \"10px\",\r\n                    }}\r\n                    variant=\"contained\"\r\n                    onClick={() => setDeleteDialog(true)}\r\n                  >\r\n                    Delete Project\r\n                  </Button>\r\n                )}\r\n    \r\n                <ProjectEditPill />\r\n    \r\n                <TextPillComponent\r\n                  title=\"Last Task Due Date\"\r\n                  value={tasks[tasks.length-1]?.planned_end_date\r\n                    ? getDayFromDate(new Date(tasks[tasks.length-1]?.planned_end_date!))\r\n                    : \"N/A\"}\r\n                  lightColor={yellow[100]}\r\n                  darkColor={yellow[800]}\r\n                />\r\n\r\n                <StyledVerticalDivider flexItem orientation=\"vertical\" />\r\n\r\n                <TextPillComponent\r\n                  title = \"Number of Delayed Days\"\r\n                  value = {JSON.stringify(isDelayed(tasks[tasks.length-1])!)  }\r\n                  lightColor = {red[100]}\r\n                  darkColor = {red[800]}\r\n                />\r\n    \r\n              </HeaderContainer>\r\n              {/* //TODO: Paul Obeid: Added the sortby radio buttons */}\r\n              <FormControl>\r\n                 <FormLabel id=\"demo-row-radio-buttons-group-label\">Sort By:</FormLabel>\r\n                   <RadioGroup\r\n                    row\r\n                    aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                    name=\"row-radio-buttons-group\"\r\n                    value={sortValue}\r\n                   onChange={handleSortingChange}\r\n               >\r\n                 <FormControlLabel value=\"none\" control={<Radio />} label=\"None\" />\r\n                 <FormControlLabel value=\"status\" control={<Radio />} label=\"status\" />\r\n                  <FormControlLabel value=\"plannedEndDate\" control={<Radio />} label=\"Planned End Date\" />\r\n                  <FormControlLabel value=\"plannedStartDate\" control={<Radio />} label=\"Planned Start Date\" />\r\n               \r\n               </RadioGroup>\r\n            </FormControl>\r\n              <CustomPaginationTable\r\n                table={getTableState()}\r\n                onRowClick={() => {}}\r\n                cursor=\"default\"\r\n              />\r\n                 <TaskMoreDetailsDialog\r\n                  data={taskItems}\r\n                  open={isMoreDetailsDialogOpen}\r\n                   handleClose={() => setIsMoreDetailsDialogOpen(false)}\r\n                   taskId={currentTaskId}\r\n                   projectId = {parseInt(id!)}\r\n                />\r\n              <AlertDialog\r\n                content={comment ?? \"No comments yet.\"}\r\n                isOpen={commentDialog}\r\n                title=\"Comments\"\r\n                onClose={() => setCommentDialog(false)}\r\n              />\r\n              <ConfirmationDialog\r\n                content=\"Are you sure you want to delete this project?\"\r\n                negativeText=\"Cancel\"\r\n                positiveText=\"Delete\"\r\n                title=\"Delete Project\"\r\n                isOpen={deleteDialog}\r\n                dismiss={() => setDeleteDialog(false)}\r\n                positive={async () => {\r\n                  setDeleteDialog(false)\r\n                  await deleteProject()\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n        </ScreenContainer>\r\n      )\r\n    }else{\r\n      return (\r\n        <ScreenContainer isDataLoaded={!isLoading && !error}>\r\n          {isLoading && <Loading text=\"Loading Project..\" />}\r\n          {error && <ErrorComponent text={error ?? \"Something went wrong\"} />}\r\n          {!isLoading && !error && (\r\n            <div\r\n              style={{ display: \"flex\", flexDirection: \"column\", height: \"100%\" }}\r\n            >\r\n              <HeaderContainer>\r\n              <TextPillComponent\r\n                  title=\"Project Number\"\r\n                  \r\n                  value={JSON.stringify(getProjectIdFormat(project?.id) ?? 0).slice(1).replace('\"', '')}\r\n\r\n\r\n                  lightColor={grey[100]}\r\n                  darkColor={grey[900]}\r\n                />\r\n                 <StyledVerticalDivider flexItem orientation=\"vertical\" />\r\n                <TextPillComponent\r\n                  title=\"Client\"\r\n                  value={project?.client?.description ?? \"\"}\r\n                  lightColor={green[100]}\r\n                  darkColor={green[800]}\r\n                />\r\n                <StyledVerticalDivider flexItem orientation=\"vertical\" />\r\n                <TextPillComponent\r\n                  title=\"Project Owner\"\r\n                  value={project?.user?.description ?? \"\"}\r\n                  lightColor={blue[100]}\r\n                  darkColor={blue[800]}\r\n                />\r\n                <StyledVerticalDivider flexItem orientation=\"vertical\" />\r\n                \r\n                <StyledVerticalDivider flexItem orientation=\"vertical\" />\r\n                <TextPillComponent\r\n                  title=\"Delivery Date\"\r\n                  value={\r\n                    project?.estimated_delivery\r\n                      ? getDayFromDate(new Date(project.estimated_delivery))\r\n                      : \"N/A\"\r\n                  }\r\n                  lightColor={red[100]}\r\n                  darkColor={red[800]}\r\n                />\r\n                <StyledVerticalDivider flexItem orientation=\"vertical\" />\r\n                <TextPillComponent\r\n                  title=\"Status\"\r\n                  value={status}\r\n                  lightColor={purple[100]}\r\n                  darkColor={purple[800]}\r\n                />\r\n                <Button\r\n                  endIcon={<AttachMoneyRoundedIcon />}\r\n                  style={{\r\n                    borderRadius: \"50px\",\r\n                    padding: \"1rem\",\r\n                    marginLeft: \"10px\",\r\n                    backgroundColor: green[600],\r\n                  }}\r\n                  variant=\"contained\"\r\n                  onClick={() => navigate(`/projects/${id}/payments`)}\r\n                >\r\n                  Payment\r\n                </Button>\r\n                {user?.token?.roles.includes(\"ADMIN\") && (\r\n                  <Button\r\n                    color=\"error\"\r\n                    endIcon={<DeleteRoundedIcon />}\r\n                    style={{\r\n                      borderRadius: \"50px\",\r\n                      padding: \"1rem\",\r\n                      marginLeft: \"10px\",\r\n                    }}\r\n                    variant=\"contained\"\r\n                    onClick={() => setDeleteDialog(true)}\r\n                  >\r\n                    Delete Project\r\n                  </Button>\r\n                )}\r\n    \r\n                <ProjectEditPill />\r\n    \r\n                <TextPillComponent\r\n                  title=\"Last Task Due Date\"\r\n                  value={tasks[tasks.length-1]?.planned_end_date\r\n                    ? getDayFromDate(new Date(tasks[tasks.length-1]?.planned_end_date!))\r\n                    : \"N/A\"}\r\n                  lightColor={yellow[100]}\r\n                  darkColor={yellow[800]}\r\n                />\r\n\r\n                <StyledVerticalDivider flexItem orientation=\"vertical\" />\r\n\r\n                <TextPillComponent\r\n                  title = \"Number of Delayed Days\"\r\n                  value = { days.toString() + \" Days\" }\r\n                  lightColor = {red[100]}\r\n                  darkColor = {red[800]}\r\n                />\r\n    \r\n              </HeaderContainer>\r\n              {/* //TODO: Paul Obeid: Added the sortby radio buttons */}\r\n              <FormControl>\r\n                 <FormLabel id=\"demo-row-radio-buttons-group-label\">Sort By:</FormLabel>\r\n                   <RadioGroup\r\n                    row\r\n                    aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                    name=\"row-radio-buttons-group\"\r\n                    value={sortValue}\r\n                   onChange={handleSortingChange}\r\n               >\r\n                 <FormControlLabel value=\"none\" control={<Radio />} label=\"None\" />\r\n                 <FormControlLabel value=\"status\" control={<Radio />} label=\"status\" />\r\n                 <FormControlLabel value=\"plannedEndDate\" control={<Radio />} label=\"Planned End Date\" />\r\n                  <FormControlLabel value=\"plannedStartDate\" control={<Radio />} label=\"Planned Start Date\" />\r\n               \r\n               </RadioGroup>\r\n            </FormControl>\r\n              <CustomPaginationTable\r\n                table={getTableState()}\r\n                onRowClick={() => {}}\r\n                cursor=\"default\"\r\n              />\r\n             <TaskMoreDetailsDialog\r\n              data={taskItems}\r\n                  open={isMoreDetailsDialogOpen}\r\n                   handleClose={() => setIsMoreDetailsDialogOpen(false)}\r\n                   taskId={currentTaskId}\r\n                   projectId = {parseInt(id!)}\r\n                />\r\n              <AlertDialog\r\n                content={comment ?? \"No comments yet.\"}\r\n                isOpen={commentDialog}\r\n                title=\"Comments\"\r\n                onClose={() => setCommentDialog(false)}\r\n              />\r\n              <ConfirmationDialog\r\n                content=\"Are you sure you want to delete this project?\"\r\n                negativeText=\"Cancel\"\r\n                positiveText=\"Delete\"\r\n                title=\"Delete Project\"\r\n                isOpen={deleteDialog}\r\n                dismiss={() => setDeleteDialog(false)}\r\n                positive={async () => {\r\n                  setDeleteDialog(false)\r\n                  await deleteProject()\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n        </ScreenContainer>\r\n      )\r\n    }\r\n  }else{\r\n    if(user?.token.roles.includes(\"ADMIN\") || user?.token.roles.includes(\"CFO\")){\r\n      return (\r\n        <ScreenContainer isDataLoaded={!isLoading && !error}>\r\n          {isLoading && <Loading text=\"Loading Project..\" />}\r\n          {error && <ErrorComponent text={error ?? \"Something went wrong\"} />}\r\n          {!isLoading && !error && (\r\n            <div\r\n              style={{ display: \"flex\", flexDirection: \"column\", height: \"100%\" }}\r\n            >\r\n              <HeaderContainer>\r\n              <TextPillComponent\r\n                  title=\"Project Number\"\r\n                  value={JSON.stringify(getProjectIdFormat(project?.id) ?? 0).slice(1).replace('\"', '')}\r\n\r\n\r\n\r\n                  lightColor={grey[100]}\r\n                  darkColor={grey[900]}\r\n                />\r\n                 <StyledVerticalDivider flexItem orientation=\"vertical\" />\r\n                <TextPillComponent\r\n                  title=\"Client\"\r\n                  value={project?.client?.description ?? \"\"}\r\n                  lightColor={green[100]}\r\n                  darkColor={green[800]}\r\n                />\r\n                <StyledVerticalDivider flexItem orientation=\"vertical\" />\r\n                <TextPillComponent\r\n                  title=\"Project Owner\"\r\n                  value={project?.user?.description ?? \"\"}\r\n                  lightColor={blue[100]}\r\n                  darkColor={blue[800]}\r\n                />\r\n                <StyledVerticalDivider flexItem orientation=\"vertical\" />\r\n                <TextPillComponent\r\n                  title=\"Price\"\r\n                  value={formatCurrency(\r\n                    project?.total_price ?? 0,\r\n                    project?.currency_code ?? \"USD\"\r\n                  )}\r\n                  lightColor={teal[100]}\r\n                  darkColor={teal[800]}\r\n                />\r\n                <StyledVerticalDivider flexItem orientation=\"vertical\" />\r\n                <TextPillComponent\r\n                  title=\"Paid\"\r\n                  value={formatCurrency(\r\n                    project?.paid_amount ?? 0,\r\n                    project?.currency_code ?? \"USD\"\r\n                  )}\r\n                  lightColor={orange[100]}\r\n                  darkColor={orange[800]}\r\n                />\r\n                <StyledVerticalDivider flexItem orientation=\"vertical\" />\r\n                <TextPillComponent\r\n                  title=\"Delivery Date\"\r\n                  value={\r\n                    project?.estimated_delivery\r\n                      ? getDayFromDate(new Date(project.estimated_delivery))\r\n                      : \"N/A\"\r\n                  }\r\n                  lightColor={red[100]}\r\n                  darkColor={red[800]}\r\n                />\r\n                <StyledVerticalDivider flexItem orientation=\"vertical\" />\r\n                <TextPillComponent\r\n                  title=\"Status\"\r\n                  value={status}\r\n                  lightColor={purple[100]}\r\n                  darkColor={purple[800]}\r\n                />\r\n                <Button\r\n                  endIcon={<AttachMoneyRoundedIcon />}\r\n                  style={{\r\n                    borderRadius: \"50px\",\r\n                    padding: \"1rem\",\r\n                    marginLeft: \"10px\",\r\n                    backgroundColor: green[600],\r\n                  }}\r\n                  variant=\"contained\"\r\n                  onClick={() => navigate(`/projects/${id}/payments`)}\r\n                >\r\n                  Payment\r\n                </Button>\r\n                {user?.token?.roles.includes(\"ADMIN\") && (\r\n                  <Button\r\n                    color=\"error\"\r\n                    endIcon={<DeleteRoundedIcon />}\r\n                    style={{\r\n                      borderRadius: \"50px\",\r\n                      padding: \"1rem\",\r\n                      marginLeft: \"10px\",\r\n                    }}\r\n                    variant=\"contained\"\r\n                    onClick={() => setDeleteDialog(true)}\r\n                  >\r\n                    Delete Project\r\n                  </Button>\r\n                )}\r\n    \r\n                <ProjectEditPill />\r\n    \r\n                {/* <TextPillComponent\r\n                  title=\"Last Task Due Date\"\r\n                  value={tasks[tasks.length-1]?.planned_end_date\r\n                    ? getDayFromDate(new Date(tasks[tasks.length-1]?.planned_end_date!))\r\n                    : \"N/A\"}\r\n                  lightColor={yellow[100]}\r\n                  darkColor={yellow[800]}\r\n                />\r\n     */}\r\n              </HeaderContainer>\r\n              {/* //TODO: Paul Obeid: Added the sortby radio buttons */}\r\n              <FormControl>\r\n                 <FormLabel id=\"demo-row-radio-buttons-group-label\">Sort By:</FormLabel>\r\n                   <RadioGroup\r\n                    row\r\n                    aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                    name=\"row-radio-buttons-group\"\r\n                    value={sortValue}\r\n                   onChange={handleSortingChange}\r\n               >\r\n                 <FormControlLabel value=\"none\" control={<Radio />} label=\"None\" />\r\n                 <FormControlLabel value=\"status\" control={<Radio />} label=\"status\" />\r\n                 <FormControlLabel value=\"plannedEndDate\" control={<Radio />} label=\"Planned End Date\" />\r\n                  <FormControlLabel value=\"plannedStartDate\" control={<Radio />} label=\"Planned Start Date\" />\r\n               \r\n               </RadioGroup>\r\n            </FormControl>\r\n              <CustomPaginationTable\r\n                table={getTableState()}\r\n                onRowClick={() => {}}\r\n                cursor=\"default\"\r\n              />\r\n                 <TaskMoreDetailsDialog\r\n                  data={taskItems}\r\n                  open={isMoreDetailsDialogOpen}\r\n                   handleClose={() => setIsMoreDetailsDialogOpen(false)}\r\n                   taskId={currentTaskId}\r\n                   projectId = {parseInt(id!)}\r\n                />\r\n              <AlertDialog\r\n                content={comment ?? \"No comments yet.\"}\r\n                isOpen={commentDialog}\r\n                title=\"Comments\"\r\n                onClose={() => setCommentDialog(false)}\r\n              />\r\n              <ConfirmationDialog\r\n                content=\"Are you sure you want to delete this project?\"\r\n                negativeText=\"Cancel\"\r\n                positiveText=\"Delete\"\r\n                title=\"Delete Project\"\r\n                isOpen={deleteDialog}\r\n                dismiss={() => setDeleteDialog(false)}\r\n                positive={async () => {\r\n                  setDeleteDialog(false)\r\n                  await deleteProject()\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n        </ScreenContainer>\r\n      )\r\n    }else{\r\n      return (\r\n        <ScreenContainer isDataLoaded={!isLoading && !error}>\r\n          {isLoading && <Loading text=\"Loading Project..\" />}\r\n          {error && <ErrorComponent text={error ?? \"Something went wrong\"} />}\r\n          {!isLoading && !error && (\r\n            <div\r\n              style={{ display: \"flex\", flexDirection: \"column\", height: \"100%\" }}\r\n            >\r\n              <HeaderContainer>\r\n              <TextPillComponent\r\n                  title=\"Project Number\"\r\n                  value={JSON.stringify(getProjectIdFormat(project?.id) ?? 0).slice(1).replace('\"', '')}\r\n\r\n\r\n\r\n                  lightColor={grey[100]}\r\n                  darkColor={grey[900]}\r\n                />\r\n                 <StyledVerticalDivider flexItem orientation=\"vertical\" />\r\n                <TextPillComponent\r\n                  title=\"Client\"\r\n                  value={project?.client?.description ?? \"\"}\r\n                  lightColor={green[100]}\r\n                  darkColor={green[800]}\r\n                />\r\n                <StyledVerticalDivider flexItem orientation=\"vertical\" />\r\n                <TextPillComponent\r\n                  title=\"Project Owner\"\r\n                  value={project?.user?.description ?? \"\"}\r\n                  lightColor={blue[100]}\r\n                  darkColor={blue[800]}\r\n                />\r\n                <StyledVerticalDivider flexItem orientation=\"vertical\" />\r\n                \r\n                <StyledVerticalDivider flexItem orientation=\"vertical\" />\r\n                <TextPillComponent\r\n                  title=\"Delivery Date\"\r\n                  value={\r\n                    project?.estimated_delivery\r\n                      ? getDayFromDate(new Date(project.estimated_delivery))\r\n                      : \"N/A\"\r\n                  }\r\n                  lightColor={red[100]}\r\n                  darkColor={red[800]}\r\n                />\r\n                <StyledVerticalDivider flexItem orientation=\"vertical\" />\r\n                <TextPillComponent\r\n                  title=\"Status\"\r\n                  value={status}\r\n                  lightColor={purple[100]}\r\n                  darkColor={purple[800]}\r\n                />\r\n                <Button\r\n                  endIcon={<AttachMoneyRoundedIcon />}\r\n                  style={{\r\n                    borderRadius: \"50px\",\r\n                    padding: \"1rem\",\r\n                    marginLeft: \"10px\",\r\n                    backgroundColor: green[600],\r\n                  }}\r\n                  variant=\"contained\"\r\n                  onClick={() => navigate(`/projects/${id}/payments`)}\r\n                >\r\n                  Payment\r\n                </Button>\r\n                {user?.token?.roles.includes(\"ADMIN\") && (\r\n                  <Button\r\n                    color=\"error\"\r\n                    endIcon={<DeleteRoundedIcon />}\r\n                    style={{\r\n                      borderRadius: \"50px\",\r\n                      padding: \"1rem\",\r\n                      marginLeft: \"10px\",\r\n                    }}\r\n                    variant=\"contained\"\r\n                    onClick={() => setDeleteDialog(true)}\r\n                  >\r\n                    Delete Project\r\n                  </Button>\r\n                )}\r\n    \r\n                <ProjectEditPill />\r\n\r\n                {/* <TextPillComponent\r\n                  title=\"Last Task Due Date\"\r\n                  value={tasks[tasks.length-1]?.planned_end_date\r\n                    ? getDayFromDate(new Date(tasks[tasks.length-1]?.planned_end_date!))\r\n                    : \"N/A\"}\r\n                  lightColor={yellow[100]}\r\n                  darkColor={yellow[800]}\r\n                /> */}\r\n    \r\n              </HeaderContainer>\r\n              {/* //TODO: Paul Obeid: Added the sortby radio buttons */}\r\n              <FormControl>\r\n                 <FormLabel id=\"demo-row-radio-buttons-group-label\">Sort By:</FormLabel>\r\n                   <RadioGroup\r\n                    row\r\n                    aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                    name=\"row-radio-buttons-group\"\r\n                    value={sortValue}\r\n                   onChange={handleSortingChange}\r\n               >\r\n                 <FormControlLabel value=\"none\" control={<Radio />} label=\"None\" />\r\n                 <FormControlLabel value=\"status\" control={<Radio />} label=\"status\" />\r\n                 <FormControlLabel value=\"plannedEndDate\" control={<Radio />} label=\"Planned End Date\" />\r\n                  <FormControlLabel value=\"plannedStartDate\" control={<Radio />} label=\"Planned Start Date\" />\r\n               \r\n               </RadioGroup>\r\n            </FormControl>\r\n              <CustomPaginationTable\r\n                table={getTableState()}\r\n                onRowClick={() => {}}\r\n                cursor=\"default\"\r\n              />\r\n                 <TaskMoreDetailsDialog\r\n                  open={isMoreDetailsDialogOpen}\r\n                  data={taskItems}\r\n                   handleClose={() => setIsMoreDetailsDialogOpen(false)}\r\n                   taskId={currentTaskId}\r\n                   projectId = {parseInt(id!)}\r\n                />\r\n              <AlertDialog\r\n                content={comment ?? \"No comments yet.\"}\r\n                isOpen={commentDialog}\r\n                title=\"Comments\"\r\n                onClose={() => setCommentDialog(false)}\r\n              />\r\n              <ConfirmationDialog\r\n                content=\"Are you sure you want to delete this project?\"\r\n                negativeText=\"Cancel\"\r\n                positiveText=\"Delete\"\r\n                title=\"Delete Project\"\r\n                isOpen={deleteDialog}\r\n                dismiss={() => setDeleteDialog(false)}\r\n                positive={async () => {\r\n                  setDeleteDialog(false)\r\n                  await deleteProject()\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n        </ScreenContainer>\r\n      )\r\n    }\r\n  }\r\n  \r\n}","import { useContext, useEffect, useState } from \"react\"\r\nimport { styled } from \"@mui/material/styles\"\r\nimport {\r\n  InputContainer,\r\n  ScreenContainer,\r\n  StyledDivider,\r\n  StyledInputContainer,\r\n  StyledVerticalDivider,\r\n} from \"../components/StyledComponents\"\r\nimport useFetch from \"../hooks/useFetch\"\r\nimport {\r\n  initProjectUrl,\r\n  MinifiedProject,\r\n  NewProjectRequest,\r\n  newProjectWithoutTempUrl,\r\n  ProjectInit,\r\n} from \"../api/ProjectApi\"\r\nimport { AuthContext } from \"../contexts/AuthContext\"\r\nimport { api, HttpMethods } from \"../api/ApiControllers\"\r\nimport Loading from \"../components/Loading\"\r\nimport ErrorComponent from \"../components/ErrorComponent\"\r\nimport Box from \"@mui/system/Box\"\r\nimport DatePicker from \"@mui/lab/DatePicker\"\r\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\"\r\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport AlertDialog from \"../components/dialogs/AlertDialog\"\r\nimport ArrowForwardIosRoundedIcon from \"@mui/icons-material/ArrowForwardIosRounded\"\r\nimport Typography from \"@mui/material/Typography\"\r\nimport Divider from \"@mui/material/Divider\"\r\nimport green from \"@mui/material/colors/green\"\r\nimport grey from \"@mui/material/colors/grey\"\r\nimport deepPurple from \"@mui/material/colors/deepPurple\"\r\nimport Button from \"@mui/material/Button\"\r\nimport Paper from \"@mui/material/Paper\"\r\nimport TextField from \"@mui/material/TextField\"\r\nimport FormControl from \"@mui/material/FormControl\"\r\nimport InputLabel from \"@mui/material/InputLabel\"\r\nimport Select from \"@mui/material/Select\"\r\nimport MenuItem from \"@mui/material/MenuItem\"\r\n\r\nconst MainContainer = styled(Paper)(({ theme }) => {\r\n  return {\r\n    backgroundColor:\r\n      theme.palette.mode === \"light\"\r\n        ? grey[200]\r\n        : theme.palette.background.paper,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    padding: theme.spacing(1),\r\n  }\r\n})\r\n\r\nconst HeaderContainer = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-start\",\r\n  }\r\n})\r\n\r\nconst MainElements = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n  }\r\n})\r\nconst dropSize = 160\r\nexport default function NewProjectScreen() {\r\n  const { user } = useContext(AuthContext)!\r\n  const navigate = useNavigate()\r\n\r\n  // Dialog\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [dialogOpen, setDialogOpen] = useState(false)\r\n  const [dialogTitle, setDialogTitle] = useState(\"\")\r\n  const [dialogContent, setDialogContent] = useState(\"\")\r\n\r\n  // Mandatory\r\n  const [clientSelected, setClientSelected] = useState({\r\n    error: false,\r\n    value: \"\",\r\n  })\r\n  const [userSelected, setUserSelected] = useState({ error: false, value: \"\" })\r\n  const [title, setTitle] = useState({ error: false, value: \"\" })\r\n  const [projectCurrency, setProjectCurrency] = useState({\r\n    error: false,\r\n    value: \"\",\r\n  })\r\n  const [estimatedDelivery, setEstimatedDelivery] = useState<{\r\n    value: Date | null\r\n    error: boolean\r\n  }>({\r\n    error: false,\r\n    value: new Date(),\r\n  })\r\n  const [totalPrice, setTotalPrice] = useState({ error: false, value: \"\" })\r\n\r\n  const [lostSales, setLostSales] = useState({ error: false, value: \"\" })\r\n\r\n  // Payment\r\n  const [downPayment, setDownPayment] = useState({ error: false, value: \"\" })\r\n  const [downPaymentCurr, setDownPaymentCurr] = useState({\r\n    error: false,\r\n    value: \"\",\r\n  })\r\n  const [paymentCollDate, setPaymentCollDate] = useState<{\r\n    value: Date | null\r\n    error: boolean\r\n  }>({\r\n    error: false,\r\n    value: new Date(),\r\n  })\r\n\r\n  const {\r\n    data: initData,\r\n    isLoading: initLoading,\r\n    error,\r\n  } = useFetch<ProjectInit>(initProjectUrl, HttpMethods.Get, null, {\r\n    Authorization: `Bearer ${user?.tokenStr}`,\r\n  })\r\n\r\n  const submit = async () => {\r\n    if (validate()) {\r\n      let body: NewProjectRequest = {\r\n        user_code: userSelected.value,\r\n        client_code: clientSelected.value,\r\n        total_price: Number(totalPrice.value),\r\n        project_currency: projectCurrency.value,\r\n        estimated_delivery_date: estimatedDelivery.value!.getTime(),\r\n        title: title.value,\r\n        lost_sales: lostSales.value\r\n      }\r\n\r\n      if (downPayment.value.length >= 1) {\r\n        body.down_payment = Number(downPayment.value)\r\n        body.payment_collection_date = paymentCollDate.value!.getTime()\r\n        body.down_payment_currency = downPaymentCurr.value\r\n      }\r\n\r\n      let url = newProjectWithoutTempUrl\r\n\r\n      // api call\r\n\r\n      try {\r\n        setIsLoading(true)\r\n        const { id } = (await api<MinifiedProject>(\r\n          url,\r\n          HttpMethods.Post,\r\n          body,\r\n          {\r\n            Authorization: `Bearer ${user?.tokenStr}`,\r\n          },\r\n          undefined,\r\n          true\r\n        ))!\r\n\r\n        navigate(`/projects/${id}/tasks/edit`)\r\n      } catch (e: any) {\r\n        setDialogTitle(\"Something went wrong\")\r\n        setDialogContent(e.message)\r\n        setDialogOpen(true)\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  function validate(): boolean {\r\n    let valid = true\r\n\r\n    if (userSelected.value.length < 1) {\r\n      setUserSelected({ value: userSelected.value, error: true })\r\n      valid = false\r\n    }\r\n\r\n    if (clientSelected.value.length < 1) {\r\n      setClientSelected({ value: clientSelected.value, error: true })\r\n      valid = false\r\n    }\r\n\r\n    if (Number.isNaN(totalPrice.value) || totalPrice.value.length < 1) {\r\n      setTotalPrice({ value: totalPrice.value, error: true })\r\n      valid = false\r\n    }\r\n\r\n    if (projectCurrency.value.length < 1) {\r\n      setProjectCurrency({ value: projectCurrency.value, error: true })\r\n      valid = false\r\n    }\r\n\r\n    if (estimatedDelivery.value === null) {\r\n      setEstimatedDelivery({ value: estimatedDelivery.value, error: true })\r\n      valid = false\r\n    }\r\n\r\n    if (title.value.length < 1) {\r\n      setTitle({ value: title.value, error: true })\r\n      valid = false\r\n    }\r\n\r\n    if (downPayment.value.length >= 1) {\r\n      if (Number.isNaN(downPayment.value) || downPayment.value.length < 1) {\r\n        setDownPayment({ value: downPayment.value, error: true })\r\n        valid = false\r\n      }\r\n\r\n      if (downPaymentCurr.value.length < 1) {\r\n        setDownPaymentCurr({ value: downPaymentCurr.value, error: true })\r\n        valid = false\r\n      }\r\n\r\n      if (paymentCollDate.value === null) {\r\n        setPaymentCollDate({ value: paymentCollDate.value, error: true })\r\n        valid = false\r\n      }\r\n    } else {\r\n      setDownPayment({ value: downPayment.value, error: false })\r\n      setDownPaymentCurr({ value: downPaymentCurr.value, error: false })\r\n      setPaymentCollDate({ value: paymentCollDate.value, error: false })\r\n    }\r\n\r\n    return valid\r\n  }\r\n\r\n  useEffect(() => {\r\n    const client = initData?.clients.find(\r\n      (i) => i.client_code === clientSelected.value\r\n    )\r\n    if (client) {\r\n      setProjectCurrency({\r\n        error: projectCurrency.error,\r\n        value: client.currency,\r\n      })\r\n      setDownPaymentCurr({\r\n        error: downPaymentCurr.error,\r\n        value: client.currency,\r\n      })\r\n    }\r\n  }, [clientSelected])\r\n\r\n  return (\r\n    <ScreenContainer\r\n      isDataLoaded={initData !== null && !error && !isLoading && !initLoading}\r\n    >\r\n      {initLoading && <Loading text=\"Fetching Data..\" />}\r\n      {isLoading && <Loading text=\"Adding Project..\" />}\r\n      {error && <ErrorComponent text={error} />}\r\n      {initData && !isLoading && (\r\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n          <MainContainer>\r\n            <HeaderContainer>\r\n              <Typography gutterBottom variant=\"h5\">\r\n                New Project\r\n              </Typography>\r\n            </HeaderContainer>\r\n            <Divider\r\n              style={{ backgroundColor: \"black\", marginBottom: \"1rem\" }}\r\n            />\r\n\r\n            <InputContainer>\r\n              <MainElements>\r\n                <InputContainer>\r\n                  <Typography variant=\"h6\">Title: &nbsp;&nbsp;</Typography>\r\n                  <TextField\r\n                    required\r\n                    type=\"text\"\r\n                    variant=\"outlined\"\r\n                    onChange={(e) =>\r\n                      setTitle({\r\n                        value: e.target.value,\r\n                        error: title.error,\r\n                      })\r\n                    }\r\n                    value={title.value}\r\n                    error={title.error}\r\n                    label=\"Title\"\r\n                  />\r\n                </InputContainer>\r\n                <InputContainer>\r\n                  <Typography variant=\"h6\">Client: &nbsp;&nbsp;</Typography>\r\n                  <Box sx={{ minWidth: dropSize }}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"client-label\">Client</InputLabel>\r\n                      <Select\r\n                        labelId=\"client-label\"\r\n                        id=\"client-select\"\r\n                        value={clientSelected.value}\r\n                        error={clientSelected.error}\r\n                        label=\"Client\"\r\n                        onChange={(e) =>\r\n                          setClientSelected({\r\n                            error: clientSelected.error,\r\n                            value: e.target.value,\r\n                          })\r\n                        }\r\n                      >\r\n                        {initData.clients.map((client) => (\r\n                          <MenuItem\r\n                            key={client.client_code}\r\n                            value={client.client_code}\r\n                          >\r\n                            {client.description}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Box>\r\n                </InputContainer>\r\n                <StyledVerticalDivider orientation=\"vertical\" flexItem />\r\n                <InputContainer>\r\n                  <Typography variant=\"h6\">\r\n                    Project Owner: &nbsp;&nbsp;\r\n                  </Typography>\r\n                  <Box sx={{ minWidth: dropSize }}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"user-label\">User</InputLabel>\r\n                      <Select\r\n                        labelId=\"user-label\"\r\n                        id=\"user-select\"\r\n                        value={userSelected.value}\r\n                        error={userSelected.error}\r\n                        label=\"user\"\r\n                        onChange={(e) =>\r\n                          setUserSelected({\r\n                            value: e.target.value,\r\n                            error: userSelected.error,\r\n                          })\r\n                        }\r\n                      >\r\n                        {initData.users.map((user) => (\r\n                          <MenuItem key={user.user_code} value={user.user_code}>\r\n                            {user.description}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Box>\r\n                </InputContainer>\r\n                <StyledVerticalDivider orientation=\"vertical\" flexItem />\r\n                <InputContainer>\r\n                  <Typography variant=\"h6\">Currency: &nbsp;&nbsp;</Typography>\r\n                  <Box sx={{ minWidth: dropSize }}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"currency-label\">Currency</InputLabel>\r\n                      <Select\r\n                        labelId=\"currency-label\"\r\n                        id=\"currency-select\"\r\n                        value={projectCurrency.value}\r\n                        error={projectCurrency.error}\r\n                        label=\"Currency\"\r\n                        onChange={(e) =>\r\n                          setProjectCurrency({\r\n                            error: projectCurrency.error,\r\n                            value: e.target.value,\r\n                          })\r\n                        }\r\n                      >\r\n                        {initData.currencies.map((curr) => (\r\n                          <MenuItem\r\n                            key={curr.currency_code}\r\n                            value={curr.currency_code}\r\n                          >\r\n                            {curr.currency_symbol}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Box>\r\n                </InputContainer>\r\n                <StyledVerticalDivider orientation=\"vertical\" flexItem />\r\n                <InputContainer>\r\n                  <Typography variant=\"h6\">Delivery: &nbsp;&nbsp;</Typography>\r\n                  <DatePicker\r\n                    label=\"Estimated Delivery\"\r\n                    openTo=\"month\"\r\n                    views={[\"year\", \"month\", \"day\"]}\r\n                    value={estimatedDelivery.value}\r\n                    onChange={(newValue) => {\r\n                      setEstimatedDelivery({\r\n                        value: newValue,\r\n                        error: estimatedDelivery.error,\r\n                      })\r\n                    }}\r\n                    renderInput={(params) => <TextField {...params} />}\r\n                  />\r\n                </InputContainer>\r\n                <StyledVerticalDivider orientation=\"vertical\" flexItem />\r\n                <InputContainer>\r\n                  <Typography variant=\"h6\">Price: &nbsp;&nbsp;</Typography>\r\n                  <TextField\r\n                    required\r\n                    type=\"number\"\r\n                    variant=\"outlined\"\r\n                    onChange={(e) =>\r\n                      setTotalPrice({\r\n                        value: Math.abs(Number(e.target.value)).toString(),\r\n                        error: totalPrice.error,\r\n                      })\r\n                    }\r\n                    value={totalPrice.value}\r\n                    error={totalPrice.error}\r\n                    label=\"Project Price\"\r\n                  />\r\n                </InputContainer>\r\n                <StyledVerticalDivider orientation=\"vertical\" flexItem />\r\n                <InputContainer>\r\n                  <Typography variant=\"h6\">Lost Sales: &nbsp;&nbsp;</Typography>\r\n                  <TextField\r\n                    \r\n                    type=\"text\"\r\n                    variant=\"outlined\"\r\n                    onChange={(e) =>\r\n                      setLostSales({\r\n                        value: e.target.value,\r\n                        error: lostSales.error,\r\n                      })\r\n                    }\r\n                    value={lostSales.value}\r\n                    error={lostSales.error}\r\n                    label=\"Lost Sales\"\r\n                  />\r\n                </InputContainer>\r\n              </MainElements>\r\n            </InputContainer>\r\n            <StyledDivider />\r\n            <InputContainer>\r\n              <MainElements>\r\n                <InputContainer>\r\n                  <Typography variant=\"h6\">Amount: &nbsp;&nbsp;</Typography>\r\n                  <TextField\r\n                    type=\"number\"\r\n                    required\r\n                    label=\"Amount\"\r\n                    variant=\"outlined\"\r\n                    value={downPayment.value}\r\n                    error={downPayment.error}\r\n                    onChange={(e) =>\r\n                      setDownPayment({\r\n                        value: Math.abs(Number(e.target.value)).toString(),\r\n                        error: downPayment.error,\r\n                      })\r\n                    }\r\n                  />\r\n                </InputContainer>\r\n                <StyledVerticalDivider orientation=\"vertical\" flexItem />\r\n                <InputContainer>\r\n                  <Typography variant=\"h6\">Currency: &nbsp;&nbsp;</Typography>\r\n                  <Box sx={{ minWidth: dropSize }}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"currency-label\">Currency</InputLabel>\r\n                      <Select\r\n                        labelId=\"currency-label\"\r\n                        id=\"currency-select\"\r\n                        value={downPaymentCurr.value}\r\n                        error={downPaymentCurr.error}\r\n                        label=\"Currency\"\r\n                        onChange={(e) =>\r\n                          setDownPaymentCurr({\r\n                            value: e.target.value,\r\n                            error: downPaymentCurr.error,\r\n                          })\r\n                        }\r\n                      >\r\n                        {initData.currencies.map((curr) => (\r\n                          <MenuItem\r\n                            key={curr.currency_code}\r\n                            value={curr.currency_code}\r\n                          >\r\n                            {curr.currency_symbol}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Box>\r\n                </InputContainer>\r\n                <StyledVerticalDivider orientation=\"vertical\" flexItem />\r\n                <InputContainer>\r\n                  <Typography variant=\"h6\">\r\n                    Collection Date: &nbsp;&nbsp;\r\n                  </Typography>\r\n                  <DatePicker\r\n                    label=\"Collection Date\"\r\n                    openTo=\"month\"\r\n                    views={[\"year\", \"month\", \"day\"]}\r\n                    value={paymentCollDate.value}\r\n                    onChange={(newValue) => {\r\n                      setPaymentCollDate({\r\n                        value: newValue,\r\n                        error: paymentCollDate.error,\r\n                      })\r\n                    }}\r\n                    renderInput={(params) => <TextField {...params} />}\r\n                  />\r\n                </InputContainer>\r\n              </MainElements>\r\n            </InputContainer>\r\n\r\n            <Button\r\n              color=\"success\"\r\n              style={{\r\n                alignSelf: \"flex-end\",\r\n                justifySelf: \"center\",\r\n                margin: \"1rem\",\r\n              }}\r\n              variant=\"contained\"\r\n              onClick={async () => await submit()}\r\n              endIcon={<ArrowForwardIosRoundedIcon />}\r\n            >\r\n              Next\r\n            </Button>\r\n          </MainContainer>\r\n        </LocalizationProvider>\r\n      )}\r\n\r\n      <AlertDialog\r\n        content={dialogContent}\r\n        isOpen={dialogOpen}\r\n        title={dialogTitle}\r\n        onClose={() => setDialogOpen(false)}\r\n      />\r\n    </ScreenContainer>\r\n  )\r\n}\r\n","import { useContext, createContext, useState, useEffect } from \"react\"\r\nimport { useNavigate, useParams } from \"react-router-dom\"\r\nimport { v4 } from \"uuid\"\r\nimport { api, HttpMethods } from \"../api/ApiControllers\"\r\nimport {\r\n  saveProjectAsDraftUrl,\r\n  EditProjectTasksInitInterface,\r\n  editProjectTasksUrl,\r\n  ProjectInterfaceWithoutTree,\r\n  saveProjectAsStartUrl,\r\n  AutofillTemplate,\r\n  InitQuery,\r\n  RescheduleInterface,\r\n  RequestedRescheduleInterface,\r\n  ProjectTaskPredecessor,\r\n  ProjectTaskChangeEvent,\r\n} from \"../api/ProjectApi\"\r\nimport {\r\n  getMainTempUrl,\r\n  MainTaskTemplate,\r\n  MainTaskTemplateMinified,\r\n  MainTaskTemplateWithTimeUnits,\r\n  TimeUnit,\r\n} from \"../api/TaskTemplateApi\"\r\nimport { MinifiedUser } from \"../api/UsersApi\"\r\nimport {\r\n  getLargestNum,\r\n  getNextSortOrder,\r\n  isTaskLastElement,\r\n  sortProjectTasks,\r\n  sortProjectTasksWithReturn,\r\n} from \"../utils/projectUtils\"\r\nimport { AuthContext } from \"./AuthContext\"\r\nimport qs from \"qs\"\r\n\r\nexport interface ContextTask {\r\n  id: number\r\n  fake_id?: string\r\n  task_name: string\r\n  task_code?: string\r\n  estimated_time: number\r\n  time_unit_id: number\r\n  description?: string\r\n  assigned_to?: string\r\n  assigned_to_user_code?: string\r\n  sort_order: number\r\n  task_status_id?: number\r\n  task_progress_id?: number\r\n  parent?: number\r\n  children: ContextTask[]\r\n  planned_start_date?: number\r\n  planned_end_date?: number\r\n  actual_start_date?: number\r\n  actual_end_date?: number\r\n  parent_fake_id?: string\r\n  reschedule?: RescheduleInterface\r\n  predecessor?: ProjectTaskPredecessor\r\n}\r\n\r\nexport interface EditTasksScreenState {\r\n  // interface data\r\n  error: string | null\r\n  isLoading: boolean\r\n\r\n  // metadata\r\n  users: MinifiedUser[] | null\r\n  timeUnits: TimeUnit[] | null\r\n  minifiedTemplates: MainTaskTemplateMinified[] | null\r\n\r\n  // project data\r\n  project: ProjectInterfaceWithoutTree | null\r\n  taskTree: ContextTask | null\r\n\r\n  // template\r\n  template: MainTaskTemplate | null\r\n  showingTemplate: boolean\r\n\r\n  // autofill\r\n  autofillTemplates: AutofillTemplate[]\r\n\r\n  // utils\r\n  sortOrder(oldIndex: number, newIndex: number, parent: ContextTask): void\r\n\r\n  // updates\r\n  selectTemplate: () => Promise<void>\r\n  resetTempSelection: () => void\r\n  selectedTemplateId: string | null\r\n  setSelectedTemplateId: (value: string | null) => void\r\n  selectedProjectTask: ContextTask | null\r\n  setSelectedProjectTaskCb: (task: ContextTask | null) => void\r\n  addNewTask: (task: ContextTask) => void\r\n  updateTask: (\r\n    task: ContextTask,\r\n    parentTask: ContextTask,\r\n    event: ProjectTaskChangeEvent\r\n  ) => void\r\n  // updateTaskTreeInit: (task: ContextTask, rerender: boolean) => void\r\n  pickTemplate: () => void\r\n  saveDraft: () => Promise<void>\r\n  startProject: () => Promise<void>\r\n  isProjectReadyToStart(): boolean\r\n  canDeleteTask: (task: ContextTask) => boolean\r\n  deleteTask(task: ContextTask, parent: ContextTask): void\r\n  canOrderUp(task: ContextTask, parent: ContextTask): boolean\r\n  canOrderDown(task: ContextTask, parent: ContextTask): boolean\r\n  acceptRescheduleStart(\r\n    task: ContextTask,\r\n    parentTask: ContextTask,\r\n    schedule: RequestedRescheduleInterface\r\n  ): void\r\n  declineRescheduleStart(schedule: RequestedRescheduleInterface): void\r\n  acceptRescheduleEnd(\r\n    task: ContextTask,\r\n    parentTask: ContextTask,\r\n    schedule: RequestedRescheduleInterface\r\n  ): void\r\n  declineRescheduleEnd(schedule: RequestedRescheduleInterface): void\r\n  getAvailablePredecessors(\r\n    task: ContextTask,\r\n    parent: ContextTask\r\n  ): ProjectTaskPredecessor[]\r\n}\r\n\r\nexport const EditTasksScreenContext =\r\n  createContext<EditTasksScreenState | null>(null)\r\n\r\nexport default function EditTasksScreenContextProvider({\r\n  children,\r\n}: {\r\n  children: JSX.Element\r\n}) {\r\n  const { id } = useParams()\r\n  const { user } = useContext(AuthContext)!\r\n  const navigate = useNavigate()\r\n  const query: InitQuery = qs.parse(window.location.search.replace(\"?\", \"\"))\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    api<EditProjectTasksInitInterface>(\r\n      editProjectTasksUrl(id!, query),\r\n      HttpMethods.Get,\r\n      null,\r\n      { Authorization: `Bearer ${user?.tokenStr}` }\r\n    )\r\n      .then((data) => {\r\n        setProject(data!.project)\r\n\r\n        // task tree\r\n        const tree = Object.assign({}, data!.project.task_tree)\r\n        sortProjectTasks(tree.children)\r\n        setTaskTree(Object.assign({}, tree))\r\n        //updateTaskTreeInit(tree)\r\n\r\n        setSelectedProjectTask(tree)\r\n        setUsers(data!.users)\r\n        setMinifiedTemplates(data!.templates)\r\n        setTimeUnits(data!.time_units)\r\n        setIsLoading(false)\r\n        setError(null)\r\n        setAutofillTemplates(data!.autofill_templates)\r\n        console.log(data!.autofill_templates)\r\n      })\r\n      .catch((e) => {\r\n        setError(e.message)\r\n        setMinifiedTemplates(null)\r\n        setProject(null)\r\n        setIsLoading(false)\r\n        setUsers(null)\r\n      })\r\n  }, [])\r\n\r\n  // state\r\n  const [showingTemplate, setShowingTemplate] = useState(false)\r\n  const [taskTree, setTaskTree] = useState<ContextTask | null>(null)\r\n  const [selectedTemplateId, setSelectedTemplateId] = useState<string | null>(\r\n    null\r\n  )\r\n  const [minifiedTemplates, setMinifiedTemplates] = useState<\r\n    MainTaskTemplateMinified[] | null\r\n  >(null)\r\n  const [users, setUsers] = useState<MinifiedUser[] | null>(null)\r\n  const [project, setProject] = useState<ProjectInterfaceWithoutTree | null>(\r\n    null\r\n  )\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const [timeUnits, setTimeUnits] = useState<TimeUnit[] | null>(null)\r\n  const [selectedProjectTask, setSelectedProjectTask] =\r\n    useState<ContextTask | null>(null)\r\n  const [template, setTemplate] = useState<MainTaskTemplate | null>(null)\r\n  const [autofillTemplates, setAutofillTemplates] = useState<\r\n    AutofillTemplate[]\r\n  >([])\r\n  // TODO: remove pred from flat tree to avoid loops\r\n  // callbacks\r\n  const resetTempSelection = () => {\r\n    setSelectedTemplateId(null)\r\n    setTemplate(null)\r\n    setShowingTemplate(false)\r\n  }\r\n  const selectTemplate = async () => {\r\n    if (selectedTemplateId) {\r\n      try {\r\n        setIsLoading(true)\r\n        const res = await api<MainTaskTemplateWithTimeUnits>(\r\n          getMainTempUrl(selectedTemplateId, false),\r\n          HttpMethods.Get,\r\n          null,\r\n          { Authorization: `Bearer ${user?.tokenStr}` },\r\n          undefined,\r\n          true\r\n        )\r\n\r\n        setIsLoading(false)\r\n\r\n        if (res) {\r\n          setTemplate(res.task)\r\n          setShowingTemplate(true)\r\n        }\r\n      } catch (e: any) {\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  const addNewTask = (task: ContextTask) => {\r\n    let projAdd: ContextTask\r\n\r\n    if (selectedProjectTask) {\r\n      projAdd = selectedProjectTask\r\n    } else {\r\n      projAdd = taskTree!\r\n    }\r\n\r\n    task.parent = projAdd.id\r\n    task.sort_order = getNextSortOrder(\r\n      projAdd.children.map((e) => e.sort_order) ?? []\r\n    )\r\n    task.fake_id = v4()\r\n\r\n    projAdd.children.push(task)\r\n    sortProjectTasksWithReturn(projAdd.children)\r\n\r\n    setTaskTree(Object.assign({}, taskTree))\r\n  }\r\n  const updateTask = (\r\n    task: ContextTask,\r\n    parentTask: ContextTask,\r\n    event: ProjectTaskChangeEvent\r\n  ) => {\r\n    switch (event) {\r\n      case ProjectTaskChangeEvent.ChangeStart: {\r\n        changeStartDateAndCascade(task, parentTask)\r\n        break\r\n      }\r\n\r\n      case ProjectTaskChangeEvent.ChangeEnd: {\r\n        changeEndDateAndCascade(task, parentTask)\r\n        break\r\n      }\r\n      case ProjectTaskChangeEvent.ChangeTime: {\r\n        changeStartDateAndCascade(task, parentTask)\r\n        break\r\n      }\r\n\r\n      default: {\r\n        break\r\n      }\r\n    }\r\n\r\n    // TODO: Update all pred tasks\r\n    const flatTree: ContextTask[] = []\r\n    getFlatTaskTreeWithParents(taskTree!, flatTree)\r\n    const depTasks: { task: ContextTask; parent: ContextTask }[] = flatTree\r\n      .filter((i) => {\r\n        if (i.predecessor) {\r\n          if (i.predecessor.fake_id) {\r\n            return i.predecessor.fake_id === task.fake_id\r\n          } else {\r\n            return i.predecessor.id === task.id\r\n          }\r\n        } else {\r\n          return false\r\n        }\r\n      })\r\n      .map((i) => {\r\n        return {\r\n          task: i,\r\n          parent: flatTree.find((t) => {\r\n            if (i.parent_fake_id) {\r\n              return t.fake_id === i.parent_fake_id\r\n            } else {\r\n              return t.id === i.parent\r\n            }\r\n          })!,\r\n        }\r\n      })\r\n\r\n    depTasks.forEach((i) => {\r\n      i.task.planned_start_date = task.planned_end_date\r\n      updateTask(i.task, i.parent, ProjectTaskChangeEvent.ChangeStart)\r\n    })\r\n\r\n    updateFirstNodeTasks()\r\n    setTaskTree(Object.assign({}, taskTree))\r\n  }\r\n  const setSelectedProjectTaskCb = (task: ContextTask | null) => {\r\n    if (\r\n      selectedProjectTask?.id === task?.id &&\r\n      selectedProjectTask?.fake_id === task?.fake_id\r\n    ) {\r\n      setSelectedProjectTask(taskTree)\r\n    } else {\r\n      setSelectedProjectTask(task)\r\n    }\r\n  }\r\n\r\n  //! Rewriting the update task and cascading ////////////////////////////////////////////////////////////////////\r\n\r\n  function getMillisecondsFromTimeUnitId(id: number) {\r\n    return timeUnits!.find((i) => i.id === id)!.milliseconds\r\n  }\r\n\r\n  function updatePlannedEndFromPlannedStart(\r\n    task: ContextTask,\r\n    plannedStart: number\r\n  ) {\r\n    // getting the processing time needed minus one day\r\n    const processingPeriod =\r\n      getMillisecondsFromTimeUnitId(task.time_unit_id) * task.estimated_time // - (86400000/2)\r\n\r\n    task.planned_start_date = plannedStart\r\n    task.planned_end_date = plannedStart + processingPeriod\r\n  }\r\n\r\n  function updateFirstNodeTaskDatesWithNoChildren(task: ContextTask) {\r\n    const pred = getPredecessorRef(task)\r\n    if (pred && pred.planned_end_date) {\r\n      //here paul\r\n        if(pred.planned_end_date > task.planned_start_date! ){\r\n        updatePlannedEndFromPlannedStart(task, pred.planned_end_date)\r\n\r\n        }   \r\n    } else {\r\n      // Update end to start if there is no pred\r\n      if (task.planned_start_date) {\r\n       updatePlannedEndFromPlannedStart(task, task.planned_start_date)\r\n      }\r\n    }\r\n  }\r\n\r\n  function updateFirstNodeTaskDatesWithChildren(task: ContextTask) {\r\n    // TODO: update estimated time\r\n    // should update parent node to get the start from sort order 1 and end from sort order n\r\n    const sortOrderOne = task.children.find((i) => i.sort_order === 1)\r\n\r\n    // Getting the largest sort\r\n    const largestSortOrder = getLargestNum(\r\n      task.children.map((i) => i.sort_order)\r\n    )\r\n    const sortOrderLast = task.children.find(\r\n      (i) => i.sort_order === largestSortOrder\r\n    )\r\n\r\n    if (sortOrderOne && sortOrderOne.planned_start_date) {\r\n      task.planned_start_date = sortOrderOne.planned_start_date\r\n    }\r\n\r\n    if (sortOrderLast && sortOrderLast?.planned_end_date) {\r\n      task.planned_end_date = sortOrderLast.planned_end_date\r\n    }\r\n\r\n    // TODO: Test\r\n    // calc the diff\r\n    const startDate = task.planned_start_date\r\n    const endDate = task.planned_end_date\r\n\r\n    if (startDate && endDate) {\r\n      const diff = endDate - startDate\r\n\r\n      if (diff > 0) {\r\n        task.time_unit_id = 3\r\n        task.estimated_time = Math.floor(diff / 86400000 + 1) // one day in mill\r\n      }\r\n    }\r\n\r\n    // sort and reorder\r\n    sortProjectTasksWithReturn(task.children)\r\n  }\r\n\r\n  const updateFirstNodeTasks = () => {\r\n    // TODO: Update time unit and estimated time for task with children\r\n    taskTree?.children?.forEach((nodeOneChild) => {\r\n      if (nodeOneChild.children.length === 0) {\r\n        updateFirstNodeTaskDatesWithNoChildren(nodeOneChild)\r\n      } else {\r\n        updateFirstNodeTaskDatesWithChildren(nodeOneChild)\r\n      }\r\n    })\r\n  }\r\n\r\n  function cascade(task: ContextTask, parentTask: ContextTask) {\r\n    if (parentTask.parent) {\r\n      // second node task\r\n      // update tasks with sort order + 1\r\n      let nextSort = task.sort_order + 1\r\n      const sortOrderLimit = getLargestNum(\r\n        parentTask.children.map((i) => i.sort_order)\r\n      )\r\n\r\n      while (nextSort <= sortOrderLimit) {\r\n        const taskToUpdate = parentTask.children.find(\r\n          (i) => i.sort_order === nextSort\r\n        )\r\n\r\n        if (taskToUpdate) {\r\n          if (!taskToUpdate.predecessor) {\r\n            const prev = parentTask.children.find(\r\n              (i) => i.sort_order === nextSort - 1\r\n            )\r\n            if (prev && prev.planned_end_date) {\r\n              taskToUpdate.planned_start_date = prev.planned_end_date\r\n              updatePlannedEndFromPlannedStart(\r\n                taskToUpdate,\r\n                prev.planned_end_date\r\n              )\r\n            }\r\n          } else {\r\n            const pred = getPredecessorRef(taskToUpdate)\r\n\r\n            if (pred && pred.planned_end_date) {\r\n              updatePlannedEndFromPlannedStart(\r\n                taskToUpdate,\r\n                pred.planned_end_date\r\n              )\r\n            }\r\n          }\r\n        }\r\n        nextSort++\r\n      }\r\n\r\n      // update the dates for the parent\r\n      // updateFirstNodeTaskDatesWithChildren(parentTask)\r\n    } else {\r\n      // updateFirstNodeTaskDatesWithNoChildren(task)\r\n    }\r\n  }\r\n\r\n  function getPredecessorRef(task: ContextTask) {\r\n    const flatTree: ContextTask[] = []\r\n    getFlatTaskTree(taskTree!, flatTree)\r\n\r\n    let pred: ContextTask | undefined\r\n\r\n    if (task.predecessor !== undefined) {\r\n      if (task.predecessor.fake_id) {\r\n        pred = flatTree.find((i) => i.fake_id === task.predecessor?.fake_id)\r\n      } else {\r\n        pred = flatTree.find((i) => i.id === task.predecessor?.id)\r\n      }\r\n    }\r\n\r\n    return pred\r\n  }\r\n\r\n  function changeStartDateAndCascade(\r\n    task: ContextTask,\r\n    parentTask: ContextTask\r\n  ) {\r\n    if (task.planned_start_date) {\r\n      \r\n      updatePlannedEndFromPlannedStart(task, task.planned_start_date)\r\n      cascade(task, parentTask)\r\n    }\r\n  }\r\n\r\n  function changeEndDateAndCascade(task: ContextTask, parentTask: ContextTask) {\r\n    // calc the diff\r\n    const startDate = task.planned_start_date\r\n    const endDate = task.planned_end_date\r\n\r\n    if (startDate && endDate) {\r\n      const diff = endDate - startDate\r\n\r\n      if (diff > 0) {\r\n        task.time_unit_id = 3\r\n        task.estimated_time = Math.floor(diff / 86400000 + 1) // one day in mill\r\n        cascade(task, parentTask)\r\n      }\r\n    }\r\n  }\r\n\r\n  //! End of the update task and cascading ////////////////////////////////////////////////////////////////////\r\n\r\n  const pickTemplate = () => {\r\n    function getContextTasks(\r\n      tasks: MainTaskTemplate[],\r\n      parent: string\r\n    ): ContextTask[] {\r\n      return tasks.map((task) => {\r\n        const id = v4()\r\n        return {\r\n          id: -1,\r\n          fake_id: id,\r\n          task_name: task.task_name,\r\n          task_code: task.task_code,\r\n          estimated_time: task.estimated_time,\r\n          time_unit_id: task.time_unit_id,\r\n          description: task.description,\r\n          parent: -1,\r\n          parent_fake_id: parent,\r\n          sort_order: task.sort_order,\r\n          children: getContextTasks(task.children, id),\r\n          assigned_to_user_code: task.default_assigned_to,\r\n        }\r\n      })\r\n    }\r\n\r\n    if (template) {\r\n      const id = v4()\r\n      const newTasks: ContextTask = {\r\n        id: -1,\r\n        estimated_time: template.estimated_time,\r\n        task_name: template.task_name,\r\n        task_code: template.task_code,\r\n        time_unit_id: template.time_unit_id,\r\n        fake_id: id,\r\n        description: template.description,\r\n        sort_order: template.sort_order,\r\n        children: getContextTasks(template.children, id),\r\n      }\r\n\r\n      //updateTask(newTasks) // TODO: Task tree sorting\r\n      setTaskTree(Object.assign({}, newTasks))\r\n      setSelectedProjectTask(null)\r\n      resetTempSelection()\r\n    }\r\n  }\r\n\r\n  const sortOrder = (\r\n    oldIndex: number,\r\n    newIndex: number,\r\n    parent: ContextTask\r\n  ) => {\r\n    const activeTask = parent.children.find((i) => i.sort_order === oldIndex)\r\n    if (activeTask) {\r\n      activeTask.sort_order = newIndex\r\n\r\n      if (newIndex < oldIndex) {\r\n        parent.children.forEach((element) => {\r\n          if (element.sort_order >= newIndex && element !== activeTask) {\r\n            element.sort_order++\r\n          }\r\n        })\r\n      } else if (newIndex > oldIndex) {\r\n        parent.children.forEach((element) => {\r\n          if (element.sort_order <= newIndex && element !== activeTask) {\r\n            element.sort_order--\r\n          }\r\n        })\r\n      }\r\n\r\n      // parent.children = arrayMove(parent.children, oldIndex, newIndex)\r\n      sortProjectTasksWithReturn(parent.children)\r\n\r\n      setTaskTree(Object.assign({}, taskTree))\r\n    }\r\n  }\r\n\r\n  const saveDraft = async () => {\r\n    try {\r\n      setIsLoading(true)\r\n      await api<MainTaskTemplateWithTimeUnits>(\r\n        saveProjectAsDraftUrl(id!),\r\n        HttpMethods.Post,\r\n        taskTree,\r\n        { Authorization: `Bearer ${user?.tokenStr}` },\r\n        undefined,\r\n        false\r\n      )\r\n\r\n      setIsLoading(false)\r\n\r\n      navigate(\"/projects\")\r\n    } catch (e: any) {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const startProject = async () => {\r\n    try {\r\n      setIsLoading(true)\r\n      await api(\r\n        saveProjectAsStartUrl(id!),\r\n        HttpMethods.Post,\r\n        taskTree,\r\n        { Authorization: `Bearer ${user?.tokenStr}` },\r\n        undefined,\r\n        false\r\n      )\r\n\r\n      setIsLoading(false)\r\n\r\n      navigate(`/projects/${id}`)\r\n    } catch (e: any) {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  function isProjectReadyToStart(): boolean {\r\n    if (taskTree && taskTree.children && taskTree.children.length > 0) {\r\n      const value = { value: true }\r\n      taskTree.children.forEach((c) => checkTasksIfReadyRecursively(c, value))\r\n\r\n      return value.value\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  function checkTasksIfReadyRecursively(\r\n    task: ContextTask,\r\n    value: { value: boolean }\r\n  ) {\r\n    if (task.children.length === 0) {\r\n      if (\r\n        task.assigned_to_user_code === undefined ||\r\n        task.assigned_to_user_code === null ||\r\n        task.planned_start_date === undefined ||\r\n        task.planned_start_date === null ||\r\n        task.planned_end_date === undefined ||\r\n        task.planned_end_date === null\r\n      ) {\r\n        value.value = false\r\n      }\r\n    } else {\r\n      if (\r\n        task.planned_start_date === undefined ||\r\n        task.planned_start_date === null ||\r\n        task.planned_end_date === undefined ||\r\n        task.planned_end_date === null\r\n      ) {\r\n        value.value = false\r\n      }\r\n    }\r\n\r\n    task.children.forEach((child) => checkTasksIfReadyRecursively(child, value))\r\n  }\r\n\r\n  function canDeleteTask(task: ContextTask): boolean {\r\n    if (project?.is_draft) {\r\n      return true\r\n    }\r\n\r\n    if (task.actual_start_date) {\r\n      return false\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  function deleteTask(task: ContextTask, parent: ContextTask) {\r\n    if (parent.children.includes(task)) {\r\n      parent.children = parent.children.filter((i) => i !== task)\r\n      setTaskTree(Object.assign({}, taskTree))\r\n    }\r\n  }\r\n\r\n  const canOrderUp = (task: ContextTask, parent: ContextTask) => {\r\n    if (task.actual_start_date) {\r\n      return false\r\n    }\r\n\r\n    const prev = parent.children.find(\r\n      (i) => i.sort_order === task.sort_order - 1\r\n    )\r\n\r\n    if (prev && prev.actual_start_date) {\r\n      return false\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  const canOrderDown = (task: ContextTask, parent: ContextTask) => {\r\n    if (task.actual_start_date) {\r\n      return false\r\n    }\r\n\r\n    const next = parent.children.find(\r\n      (i) => i.sort_order === task.sort_order + 1\r\n    )\r\n\r\n    if (next && next.actual_start_date) {\r\n      return false\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  const acceptRescheduleStart = (\r\n    task: ContextTask,\r\n    parentTask: ContextTask,\r\n    schedule: RequestedRescheduleInterface\r\n  ) => {\r\n    task.planned_start_date = schedule.requested_date\r\n    schedule.is_confirmed = true\r\n    updateTask(task, parentTask, ProjectTaskChangeEvent.ChangeStart)\r\n  }\r\n\r\n  const declineRescheduleStart = (schedule: RequestedRescheduleInterface) => {\r\n    schedule.is_confirmed = false\r\n    setTaskTree(Object.assign({}, taskTree))\r\n  }\r\n\r\n  const acceptRescheduleEnd = (\r\n    task: ContextTask,\r\n    parentTask: ContextTask,\r\n    schedule: RequestedRescheduleInterface\r\n  ) => {\r\n    task.planned_end_date = schedule.requested_date\r\n    schedule.is_confirmed = true\r\n    //! in case of a negative diff the reschedule is accepted bu never updated\r\n    updateTask(task, parentTask, ProjectTaskChangeEvent.ChangeEnd)\r\n  }\r\n\r\n  const declineRescheduleEnd = (schedule: RequestedRescheduleInterface) => {\r\n    schedule.is_confirmed = false\r\n    // updateTask(taskTree!)\r\n    setTaskTree(Object.assign({}, taskTree))\r\n  }\r\n\r\n  function getFlatTaskTree(task: ContextTask, tasks: ContextTask[]) {\r\n    if (task.children.length === 0) {\r\n      tasks.push(task)\r\n    } else {\r\n      task.children.forEach((t) => getFlatTaskTree(t, tasks))\r\n    }\r\n  }\r\n\r\n  function getFlatTaskTreeWithParents(task: ContextTask, tasks: ContextTask[]) {\r\n    tasks.push(task)\r\n    task.children.forEach((t) => getFlatTaskTreeWithParents(t, tasks))\r\n  }\r\n\r\n  function getAvailablePredecessors(\r\n    task: ContextTask,\r\n    parent: ContextTask\r\n  ): ProjectTaskPredecessor[] {\r\n    const tasksList: ContextTask[] = []\r\n    taskTree?.children.forEach((t) => getFlatTaskTree(t, tasksList))\r\n\r\n    const availableTasks: ProjectTaskPredecessor[] = tasksList.filter(\r\n      (t) =>\r\n        (!parent.parent || !parent.children.includes(t)) &&\r\n        t !== task &&\r\n        (t.predecessor?.fake_id ?? t.predecessor?.id) !==\r\n          (task.fake_id ?? task.id)\r\n    )\r\n\r\n    if (availableTasks.length > 0) {\r\n      availableTasks.unshift({\r\n        id: -100,\r\n        task_name: \"None\",\r\n        time_unit_id: 1,\r\n        estimated_time: 1,\r\n        sort_order: 1,\r\n      })\r\n    }\r\n\r\n    return availableTasks\r\n  }\r\n\r\n  const value: EditTasksScreenState = {\r\n    users,\r\n    error,\r\n    isLoading,\r\n    minifiedTemplates: minifiedTemplates,\r\n    project,\r\n    showingTemplate,\r\n    selectTemplate,\r\n    resetTempSelection,\r\n    selectedTemplateId,\r\n    setSelectedTemplateId,\r\n    selectedProjectTask,\r\n    setSelectedProjectTaskCb,\r\n    timeUnits,\r\n    addNewTask,\r\n    updateTask,\r\n    template,\r\n    pickTemplate,\r\n    taskTree,\r\n    sortOrder,\r\n    saveDraft,\r\n    startProject,\r\n    isProjectReadyToStart,\r\n    canDeleteTask,\r\n    deleteTask,\r\n    canOrderUp,\r\n    canOrderDown,\r\n    autofillTemplates,\r\n    acceptRescheduleStart,\r\n    declineRescheduleStart,\r\n    acceptRescheduleEnd,\r\n    declineRescheduleEnd,\r\n    getAvailablePredecessors,\r\n  }\r\n\r\n  return (\r\n    <EditTasksScreenContext.Provider value={value}>\r\n      {children}\r\n    </EditTasksScreenContext.Provider>\r\n  )\r\n}\r\n","import Button from \"@mui/material/Button\"\r\nimport TextField from \"@mui/material/TextField\"\r\nimport Dialog from \"@mui/material/Dialog\"\r\nimport DialogActions from \"@mui/material/DialogActions\"\r\nimport DialogContent from \"@mui/material/DialogContent\"\r\nimport DialogTitle from \"@mui/material/DialogTitle\"\r\nimport { useContext, useEffect, useState } from \"react\"\r\nimport FormControl from \"@mui/material/FormControl\"\r\nimport InputLabel from \"@mui/material/InputLabel\"\r\nimport Box from \"@mui/system/Box\"\r\nimport Select from \"@mui/material/Select\"\r\nimport MenuItem from \"@mui/material/MenuItem\"\r\nimport { LocalizationProvider, DatePicker } from \"@mui/lab\"\r\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\"\r\nimport { Autocomplete, Typography } from \"@mui/material\"\r\nimport {\r\n  ContextTask,\r\n  EditTasksScreenContext,\r\n} from \"../../contexts/EditTaskScreenContext\"\r\nimport { styled } from \"@mui/material/styles\"\r\nimport frLocale from \"date-fns/locale/en-CA\"\r\nimport { ClearRounded } from \"@mui/icons-material\"\r\n\r\nexport interface NewTaskFormDialog2Props {\r\n  open: boolean\r\n  handleClose: () => void\r\n  title: string\r\n}\r\n\r\nconst MainContainer = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"1fr 1fr\",\r\n    gap: theme.spacing(2),\r\n  }\r\n})\r\n\r\nexport default function NewTaskFormDialog2(props: NewTaskFormDialog2Props) {\r\n  const { users, timeUnits, addNewTask, autofillTemplates } = useContext(\r\n    EditTasksScreenContext\r\n  )!\r\n\r\n  const [assignedTo, setAssignedTo] = useState({ error: false, value: \"\" })\r\n  const [taskName, setTaskName] = useState({ error: false, value: \"\" })\r\n  const [estimatedTime, setEstimatedTime] = useState({\r\n    error: false,\r\n    value: \"\",\r\n  })\r\n  const [timeUnitId, setTimeUnitId] = useState({ error: false, value: \"\" })\r\n  const [plannedStart, setPlannedStart] = useState<{\r\n    error: boolean\r\n    value: Date | null\r\n  }>({\r\n    error: false,\r\n    value: null,\r\n  })\r\n  const [plannedEnd, setPlannedEnd] = useState<{\r\n    error: boolean\r\n    value: Date | null\r\n  }>({ error: false, value: null })\r\n\r\n  const [selectedAutofill, setSelectedAutofill] = useState(\"\")\r\n\r\n  const validate = () => {\r\n    let valid = true\r\n    if (taskName.value.length < 1) {\r\n      setTaskName({ value: taskName.value, error: true })\r\n      valid = false\r\n    }\r\n\r\n    if (estimatedTime.value.length < 1 || Number.isNaN(estimatedTime.value)) {\r\n      setEstimatedTime({ value: estimatedTime.value, error: true })\r\n      valid = false\r\n    }\r\n\r\n    if (timeUnitId.value.length < 1 || Number.isNaN(timeUnitId.value)) {\r\n      setTimeUnitId({ value: timeUnitId.value, error: true })\r\n      valid = false\r\n    }\r\n\r\n    return valid\r\n  }\r\n\r\n  const submit = () => {\r\n    if (validate()) {\r\n      let task: ContextTask = {\r\n        children: [],\r\n        id: -1,\r\n        estimated_time: Number(estimatedTime.value),\r\n        task_name: taskName.value,\r\n        time_unit_id: Number(timeUnitId.value),\r\n        planned_start_date: plannedStart.value?.getTime(),\r\n        planned_end_date: plannedEnd.value?.getTime(),\r\n        assigned_to_user_code: assignedTo.value,\r\n        sort_order: 1,\r\n      }\r\n      addNewTask(task)\r\n      props.handleClose()\r\n      clear()\r\n    }\r\n  }\r\n\r\n  const clear = () => {\r\n    setAssignedTo({ error: false, value: \"\" })\r\n    setTaskName({ error: false, value: \"\" })\r\n    setEstimatedTime({\r\n      error: false,\r\n      value: \"\",\r\n    })\r\n    setTimeUnitId({ error: false, value: \"\" })\r\n    setPlannedStart({\r\n      error: false,\r\n      value: null,\r\n    })\r\n    setPlannedEnd({ error: false, value: null })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (plannedStart.value && timeUnitId.value && estimatedTime.value) {\r\n      const timeUnit = timeUnits?.find((t) => t.id === Number(timeUnitId.value))\r\n\r\n      if (timeUnit) {\r\n        const mil =\r\n          timeUnit.milliseconds *\r\n          (Number(estimatedTime.value) === 0\r\n            ? 0\r\n            : Number(estimatedTime.value) - 1)\r\n        setPlannedEnd({\r\n          error: plannedEnd.error,\r\n          value: new Date(Number(plannedStart.value) + mil),\r\n        })\r\n      }\r\n    }\r\n  }, [plannedStart.value, timeUnitId.value, estimatedTime.value])\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={() => {\r\n        props.handleClose()\r\n        clear()\r\n      }}\r\n    >\r\n      <DialogTitle\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        {props.title}\r\n        <Autocomplete\r\n          disablePortal\r\n          id=\"combo-box-demo\"\r\n          onChange={(e, newValue) => {\r\n            setTaskName({\r\n              error: taskName.error,\r\n              value: newValue?.task_name ?? \"\",\r\n            })\r\n            setEstimatedTime({\r\n              error: estimatedTime.error,\r\n              value: newValue?.estimated_time?.toString() ?? \"\",\r\n            })\r\n            setTimeUnitId({\r\n              error: timeUnitId.error,\r\n              value: newValue?.time_unit_id?.toString() ?? \"\",\r\n            })\r\n            setAssignedTo({\r\n              error: assignedTo.error,\r\n              value: newValue?.default_assigned_to ?? \"\",\r\n            })\r\n          }}\r\n          options={autofillTemplates}\r\n          getOptionLabel={(e) => e.task_name}\r\n          sx={{ width: 300 }}\r\n          renderInput={(params) => (\r\n            <TextField {...params} label=\"Autofill Template\" />\r\n          )}\r\n        />\r\n      </DialogTitle>\r\n      <DialogContent style={{ padding: \"1rem\" }}>\r\n        <LocalizationProvider dateAdapter={AdapterDateFns} locale={frLocale}>\r\n          <MainContainer>\r\n            <Typography variant=\"h6\">Assigned to: &nbsp;&nbsp;</Typography>\r\n            <Box sx={{ minWidth: 160 }}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"assigned-label\">Assigned</InputLabel>\r\n                <Select\r\n                  labelId=\"client-label\"\r\n                  id=\"client-select\"\r\n                  value={assignedTo.value}\r\n                  error={assignedTo.error}\r\n                  label=\"Client\"\r\n                  onChange={(e) =>\r\n                    setAssignedTo({\r\n                      error: assignedTo.error,\r\n                      value: e.target.value,\r\n                    })\r\n                  }\r\n                >\r\n                  {users!.map((user) => (\r\n                    <MenuItem key={user.user_code} value={user.user_code}>\r\n                      {user.description}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Box>\r\n\r\n            <Typography variant=\"h6\">Task name: &nbsp;&nbsp;</Typography>\r\n            <TextField\r\n              label=\"Task Name\"\r\n              value={taskName.value}\r\n              type=\"text\"\r\n              error={taskName.error}\r\n              onChange={(e) => {\r\n                setTaskName({ error: taskName.error, value: e.target.value })\r\n              }}\r\n            />\r\n\r\n            <Typography variant=\"h6\">Estimated time: &nbsp;&nbsp;</Typography>\r\n            <TextField\r\n              type=\"number\"\r\n              label=\"Estimated Time\"\r\n              value={estimatedTime.value}\r\n              error={estimatedTime.error}\r\n              onChange={(e) => {\r\n                setEstimatedTime({\r\n                  error: estimatedTime.error,\r\n                  value: Math.abs(Number(e.target.value)).toString(),\r\n                })\r\n              }}\r\n            />\r\n\r\n            <Typography variant=\"h6\">Time unit: &nbsp;&nbsp;</Typography>\r\n            <Box sx={{ minWidth: 160 }}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"assigned-label\">Time Unit</InputLabel>\r\n                <Select\r\n                  labelId=\"time-unit-label\"\r\n                  id=\"time-unit-select\"\r\n                  value={timeUnitId.value}\r\n                  error={timeUnitId.error}\r\n                  label=\"Time unit\"\r\n                  onChange={(e) =>\r\n                    setTimeUnitId({\r\n                      error: timeUnitId.error,\r\n                      value: e.target.value,\r\n                    })\r\n                  }\r\n                >\r\n                  {timeUnits?.map((tu) => (\r\n                    <MenuItem key={tu.id} value={tu.id}>\r\n                      {tu.description}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Box>\r\n\r\n            <Typography variant=\"h6\">\r\n              Planned start date: &nbsp;&nbsp;\r\n            </Typography>\r\n            <DatePicker\r\n              label=\"Planned Start\"\r\n              openTo=\"month\"\r\n              views={[\"year\", \"month\", \"day\"]}\r\n              value={plannedStart.value}\r\n              onChange={(newValue) => {\r\n                setPlannedStart({\r\n                  value: newValue,\r\n                  error: plannedStart.error,\r\n                })\r\n              }}\r\n              renderInput={(params) => <TextField {...params} />}\r\n            />\r\n\r\n            <Typography variant=\"h6\">Planned end date: &nbsp;&nbsp;</Typography>\r\n            <DatePicker\r\n              label=\"Planned End\"\r\n              openTo=\"month\"\r\n              views={[\"year\", \"month\", \"day\"]}\r\n              value={plannedEnd.value}\r\n              onChange={(newValue) => {\r\n                setPlannedEnd({\r\n                  value: newValue,\r\n                  error: plannedEnd.error,\r\n                })\r\n              }}\r\n              renderInput={(params) => <TextField {...params} />}\r\n            />\r\n          </MainContainer>\r\n        </LocalizationProvider>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          onClick={() => {\r\n            props.handleClose()\r\n            clear()\r\n          }}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={submit}>Add</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n","import TextField from \"@mui/material/TextField\"\r\nimport { formVariants } from \"./FormModels\"\r\nimport { styled } from \"@mui/material/styles\"\r\nimport { deepOrange, indigo, teal } from \"@mui/material/colors\"\r\nimport Button from \"@mui/material/Button\"\r\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\"\r\nimport { LocalizationProvider, DatePicker } from \"@mui/lab\"\r\nimport { DatePickerView } from \"@mui/lab/DatePicker/shared\"\r\nimport Typography from \"@mui/material/Typography\"\r\nimport { getDayFromDate } from \"../../utils/formatters\"\r\n//import frLocale from \"date-fns/locale/fr\"\r\nimport frLocale from \"date-fns/locale/en-CA\"\r\n\r\nimport { RequestedRescheduleInterface } from \"../../api/ProjectApi\"\r\nimport { Paper, useTheme } from \"@mui/material\"\r\n\r\n// Styled\r\nconst MainContainer = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-start\",\r\n    margin: theme.spacing(1),\r\n    justifyContent: \"flexs-start\",\r\n    flex: \"1\",\r\n  }\r\n})\r\n\r\nexport interface TaskComponentUpdatableDateFieldProps {\r\n  value: number | null | undefined\r\n  update: (value: number | undefined) => void\r\n  openTo: DatePickerView | undefined\r\n  editable: boolean\r\n  label: string\r\n  disablePast: boolean\r\n  shouldDisableDate?: ((day: Date | null) => boolean) | undefined\r\n  variant?: formVariants\r\n  isInput: boolean\r\n  reschedule?: RequestedRescheduleInterface\r\n  acceptReschedule?: () => void\r\n  declineReschedule?: () => void\r\n}\r\n\r\nexport default function TaskComponentUpdatableDateField(\r\n  props: TaskComponentUpdatableDateFieldProps\r\n) {\r\n  const theme = useTheme()\r\n  return (\r\n    <MainContainer>\r\n      {props.isInput && (\r\n        <LocalizationProvider dateAdapter={AdapterDateFns} locale={frLocale}>\r\n          <DatePicker\r\n            disabled={!props.editable}\r\n            label={props.label}\r\n            openTo={props.openTo}\r\n            disablePast={props.disablePast}\r\n            views={[\"year\", \"month\", \"day\"]}\r\n            value={props.value ? new Date(props.value) : null}\r\n            shouldDisableDate={props.shouldDisableDate}\r\n            onChange={(newValue) => props.update(newValue?.getTime())}\r\n            renderInput={(params) => <TextField {...params} />}\r\n          />\r\n        </LocalizationProvider>\r\n      )}\r\n\r\n      {!props.isInput && (\r\n        <MainContainer style={{ cursor: \"pointer\", userSelect: \"none\" }}>\r\n          <Typography\r\n            variant=\"caption\"\r\n            style={{ cursor: \"pointer\", userSelect: \"none\" }}\r\n          >\r\n            {props.label}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"body1\"\r\n            style={{ cursor: \"pointer\", userSelect: \"none\" }}\r\n          >\r\n            {props.value ? getDayFromDate(new Date(props.value)) : \"N/A\"}\r\n          </Typography>\r\n\r\n          {/* Reschedule */}\r\n\r\n          {props.reschedule && props.reschedule.is_confirmed === undefined && (\r\n            <Paper\r\n              style={{\r\n                backgroundColor:\r\n                  theme.palette.mode === \"light\"\r\n                    ? teal[100]\r\n                    : theme.palette.grey[900],\r\n                padding: \"5px\",\r\n              }}\r\n              elevation={0}\r\n            >\r\n              <Typography\r\n                variant=\"body1\"\r\n                style={{\r\n                  cursor: \"pointer\",\r\n                  userSelect: \"none\",\r\n                }}\r\n              >\r\n                Reschedule?\r\n              </Typography>\r\n              <Typography\r\n                variant=\"body2\"\r\n                style={{\r\n                  cursor: \"pointer\",\r\n                  userSelect: \"none\",\r\n                  color: deepOrange[600],\r\n                }}\r\n              >\r\n                <span style={{ color: theme.palette.text.primary }}>By: </span>\r\n                {props.reschedule.requested_by}\r\n              </Typography>\r\n\r\n              <Typography\r\n                variant=\"body2\"\r\n                style={{\r\n                  cursor: \"pointer\",\r\n                  userSelect: \"none\",\r\n                  color: indigo[700],\r\n                }}\r\n              >\r\n                <span style={{ color: theme.palette.text.primary }}>\r\n                  Till:{\" \"}\r\n                </span>\r\n                {getDayFromDate(new Date(props.reschedule.requested_date))}\r\n              </Typography>\r\n              <Button\r\n                color=\"success\"\r\n                onClick={() => {\r\n                  if (props.acceptReschedule) {\r\n                    props.acceptReschedule()\r\n                  }\r\n                }}\r\n              >\r\n                Accept\r\n              </Button>\r\n              <Button\r\n                color=\"error\"\r\n                onClick={() => {\r\n                  if (props.declineReschedule) {\r\n                    props.declineReschedule()\r\n                  }\r\n                }}\r\n              >\r\n                Decline\r\n              </Button>\r\n            </Paper>\r\n          )}\r\n        </MainContainer>\r\n      )}\r\n    </MainContainer>\r\n  )\r\n}\r\n","import { green, grey } from \"@mui/material/colors\"\r\nimport { styled } from \"@mui/material/styles\"\r\nimport { useContext, useEffect, useState } from \"react\"\r\nimport {\r\n  ContextTask,\r\n  EditTasksScreenContext,\r\n} from \"../../contexts/EditTaskScreenContext\"\r\nimport { FormElementType } from \"../form/FormModels\"\r\nimport KeyboardArrowDownRoundedIcon from \"@mui/icons-material/KeyboardArrowDownRounded\"\r\nimport KeyboardArrowUpRoundedIcon from \"@mui/icons-material/KeyboardArrowUpRounded\"\r\nimport { Divider, IconButton } from \"@mui/material\"\r\nimport { isTaskFirstElement, isTaskLastElement } from \"../../utils/projectUtils\"\r\nimport DeleteRoundedIcon from \"@mui/icons-material/DeleteRounded\"\r\nimport TaskComponentUpdatableInputField from \"../form/TaskComponentUpdatableInputField\"\r\nimport TaskComponentUpdatableDateField from \"../form/TaskComponentUpdatableDateField\"\r\nimport CheckIcon from \"@mui/icons-material/CheckCircleRounded\"\r\nimport CancelIcon from \"@mui/icons-material/CancelRounded\"\r\nimport EditRoundedIcon from \"@mui/icons-material/EditRounded\"\r\nimport {\r\n  ProjectTaskChangeEvent,\r\n  ProjectTaskPredecessor,\r\n} from \"../../api/ProjectApi\"\r\n\r\nconst StyledRow = styled(\"div\")<{ indent: number }>(({ theme, indent }) => {\r\n  return {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    width: \"100%\",\r\n    paddingLeft: theme.spacing(2 * indent),\r\n  }\r\n})\r\n\r\nconst SelectedDot = styled(\"div\")<{ selected: boolean }>(\r\n  ({ theme, selected }) => {\r\n    return {\r\n      width: \"1rem\",\r\n      height: \"1rem\",\r\n      background: selected ? green[800] : grey[700],\r\n      borderRadius: \"3rem\",\r\n      margin: theme.spacing(0.5),\r\n      cursor: \"pointer\",\r\n      alignSelf: \"center\",\r\n      justifySelf: \"center\",\r\n    }\r\n  }\r\n)\r\n\r\nconst MainContainer = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    width: \"100%\",\r\n  }\r\n})\r\n\r\nconst ButtonRow = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    paddingRight: theme.spacing(4),\r\n  }\r\n})\r\n\r\nconst ColumnContainer = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-end\",\r\n  }\r\n})\r\n\r\nexport interface ProjectTaskComponentProps {\r\n  task: ContextTask\r\n  parent: ContextTask\r\n  indent: number\r\n  isRoot: boolean\r\n}\r\n\r\n// task code -  assign to - planned start date - planned end date\r\nexport default function ProjectTaskComponent(props: ProjectTaskComponentProps) {\r\n  const {\r\n    updateTask,\r\n    timeUnits,\r\n    users,\r\n    sortOrder,\r\n    selectedProjectTask,\r\n    taskTree,\r\n    canDeleteTask,\r\n    setSelectedProjectTaskCb,\r\n    deleteTask,\r\n    canOrderUp,\r\n    canOrderDown,\r\n    acceptRescheduleStart,\r\n    declineRescheduleStart,\r\n    acceptRescheduleEnd,\r\n    declineRescheduleEnd,\r\n    getAvailablePredecessors,\r\n  } = useContext(EditTasksScreenContext)!\r\n\r\n  // state\r\n  const [taskName, setTaskName] = useState(props.task.task_name)\r\n  const [taskNameErr, setTaskNameErr] = useState(false)\r\n\r\n  const [assignedTo, setAssignedTo] = useState(props.task.assigned_to_user_code)\r\n\r\n  const [estimatedTime, setEstimatedTime] = useState(props.task.estimated_time)\r\n  const [estimatedTimeErr, setEstimatedTimeErr] = useState(false)\r\n\r\n  const [timeUnitId, setTimeUnitId] = useState(props.task.time_unit_id)\r\n  const [timeUnitIdErr, setTimeUnitIdErr] = useState(false)\r\n\r\n  const [plannedStart, setPlannedStart] = useState(\r\n    props.task.planned_start_date\r\n  )\r\n  const [plannedEnd, setPlannedEnd] = useState(props.task.planned_start_date)\r\n  const [predecessor, setPredecessor] = useState(props.task.predecessor)\r\n  const [isInput, setIsInput] = useState(false)\r\n  const [changeEvent, setChangeEvent] = useState(ProjectTaskChangeEvent.None)\r\n\r\n  useEffect(() => {\r\n    setTaskName(props.task.task_name)\r\n    setAssignedTo(props.task.assigned_to_user_code)\r\n    setEstimatedTime(props.task.estimated_time)\r\n    setTimeUnitId(props.task.time_unit_id)\r\n    setPlannedStart(props.task.planned_start_date)\r\n    setPlannedEnd(props.task.planned_end_date)\r\n  }, [taskTree])\r\n\r\n  const submit = () => {\r\n    console.log(\"PLANNED END FOM SUBMIT\",plannedEnd )\r\n    if (validate()) {\r\n      props.task.task_name = taskName\r\n      props.task.assigned_to_user_code = assignedTo\r\n      props.task.estimated_time = estimatedTime\r\n      props.task.time_unit_id = timeUnitId\r\n      props.task.planned_start_date = plannedStart\r\n      props.task.planned_end_date = plannedEnd\r\n      props.task.predecessor = predecessor\r\n      updateTask(props.task, props.parent, changeEvent)\r\n      setIsInput(false)\r\n      setChangeEvent(ProjectTaskChangeEvent.None)\r\n    }\r\n  }\r\n\r\n  const cancelChanges = () => {\r\n    setTaskName(props.task.task_name)\r\n    setTaskNameErr(false)\r\n\r\n    setAssignedTo(props.task.assigned_to_user_code)\r\n\r\n    setEstimatedTime(props.task.estimated_time)\r\n    setEstimatedTimeErr(false)\r\n\r\n    setTimeUnitId(props.task.time_unit_id)\r\n    setTimeUnitIdErr(false)\r\n\r\n    setPlannedStart(props.task.planned_start_date)\r\n    setPlannedEnd(props.task.planned_end_date)\r\n    setIsInput(false)\r\n    setChangeEvent(ProjectTaskChangeEvent.None)\r\n  }\r\n\r\n  const validate: () => boolean = () => {\r\n    let valid = true\r\n    if (taskName.length < 1) {\r\n      setTaskNameErr(true)\r\n      valid = false\r\n    }\r\n\r\n    if (Number.isNaN(timeUnitId)) {\r\n      setTimeUnitIdErr(true)\r\n      valid = false\r\n    }\r\n\r\n    if (Number.isNaN(estimatedTime)) {\r\n      setEstimatedTimeErr(true)\r\n      valid = false\r\n    }\r\n\r\n    return valid\r\n  }\r\n\r\n  function isTaskEditable() {\r\n    if (props.task.actual_start_date && props.task.actual_end_date) {\r\n      return false\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  return (\r\n    <MainContainer>\r\n      <ColumnContainer>\r\n        <StyledRow indent={props.indent}>\r\n          {!props.isRoot && (\r\n            <>\r\n              <IconButton\r\n                disabled={\r\n                  isTaskLastElement(props.task, props.parent) ||\r\n                  !canOrderDown(props.task, props.parent)\r\n                }\r\n                onClick={() => {\r\n                  sortOrder(\r\n                    props.task.sort_order,\r\n                    props.task.sort_order + 1,\r\n                    props.parent\r\n                  )\r\n                }}\r\n              >\r\n                <KeyboardArrowDownRoundedIcon />\r\n              </IconButton>\r\n              <IconButton\r\n                disabled={\r\n                  isTaskFirstElement(props.task, props.parent) ||\r\n                  !canOrderUp(props.task, props.parent)\r\n                }\r\n                onClick={() => {\r\n                  sortOrder(\r\n                    props.task.sort_order,\r\n                    props.task.sort_order - 1,\r\n                    props.parent\r\n                  )\r\n                }}\r\n              >\r\n                <KeyboardArrowUpRoundedIcon />\r\n              </IconButton>\r\n            </>\r\n          )}\r\n          {props.isRoot && (\r\n            <SelectedDot\r\n              selected={\r\n                props.task.id === selectedProjectTask?.id &&\r\n                props.task.fake_id === selectedProjectTask.fake_id\r\n              }\r\n              onClick={() => setSelectedProjectTaskCb(props.task)}\r\n            />\r\n          )}\r\n\r\n          <TaskComponentUpdatableInputField\r\n            variant=\"outlined\"\r\n            maxLength={40}\r\n            value={taskName}\r\n            update={(value) => {\r\n              setTaskName(value)\r\n            }}\r\n            error={taskNameErr}\r\n            editable={isTaskEditable()}\r\n            label=\"Task Name\"\r\n            type={FormElementType.Text}\r\n            isInput={isInput}\r\n            initialValue={taskName}\r\n          />\r\n          <TaskComponentUpdatableInputField\r\n            variant=\"outlined\"\r\n            maxLength={40}\r\n            value={assignedTo ?? \"\"}\r\n            update={(value) => {\r\n              // TODO: Test\r\n              if (props.task.children.length > 0) {\r\n                props.task.children.forEach((element) => {\r\n                  element.assigned_to_user_code = value\r\n                })\r\n              }\r\n\r\n              if (props.parent.parent) {\r\n                props.parent.assigned_to_user_code = undefined\r\n              }\r\n\r\n              setAssignedTo(value)\r\n            }}\r\n            isInput={isInput}\r\n            error={false}\r\n            editable={\r\n              isTaskEditable() &&\r\n              (props.task.actual_start_date === null ||\r\n                props.task.actual_start_date === undefined)\r\n            }\r\n            label=\"Assigned To\"\r\n            type={FormElementType.Dropdown}\r\n            initialValue={assignedTo}\r\n            values={\r\n              users?.map((user) => {\r\n                return {\r\n                  id: user.user_code,\r\n                  description: user.description ?? \"\",\r\n                }\r\n              }) ?? []\r\n            }\r\n          />\r\n          <TaskComponentUpdatableInputField\r\n            variant=\"outlined\"\r\n            maxLength={40}\r\n            error={estimatedTimeErr}\r\n            value={estimatedTime.toString()}\r\n            update={(value) => {\r\n              setEstimatedTime(Math.abs(Number(value)))\r\n              setChangeEvent(ProjectTaskChangeEvent.ChangeTime)\r\n    console.log(\"PLANNED END FOM ESTIMATED TIME\",plannedEnd )\r\n\r\n            }}\r\n            isInput={isInput}\r\n            editable={isTaskEditable() && props.task.children.length === 0}\r\n            label=\"Estimated Time\"\r\n            type={FormElementType.Number}\r\n            initialValue={estimatedTime.toString()}\r\n          />\r\n          <TaskComponentUpdatableInputField\r\n            variant=\"outlined\"\r\n            error={timeUnitIdErr}\r\n            maxLength={40}\r\n            value={timeUnitId.toString()}\r\n            update={(value) => {\r\n              setTimeUnitId(Number(value))\r\n    console.log(\"PLANNED END beforeeee\",plannedEnd )\r\n\r\n              setChangeEvent(ProjectTaskChangeEvent.ChangeTime)\r\n    console.log(\"PLANNED ENdaftereererer\",plannedEnd )\r\n\r\n            }}\r\n            isInput={isInput}\r\n            editable={isTaskEditable() && props.task.children.length === 0}\r\n            label=\"Time Unit\"\r\n            type={FormElementType.Dropdown}\r\n            initialValue={timeUnitId.toString()}\r\n            values={\r\n              timeUnits?.map((tu) => {\r\n                return {\r\n                  id: tu.id.toString(),\r\n                  description: tu.description,\r\n                }\r\n              }) ?? []\r\n            }\r\n          />\r\n          <TaskComponentUpdatableInputField\r\n            variant=\"outlined\"\r\n            error={false}\r\n            maxLength={60}\r\n            value={predecessor?.fake_id ?? predecessor?.id?.toString()}\r\n            update={(value) => {\r\n              if (value === \"-100\") {\r\n                setPredecessor(undefined)\r\n                return\r\n              }\r\n\r\n              let task: ProjectTaskPredecessor | undefined\r\n              if (value.includes(\"-\")) {\r\n                task = getAvailablePredecessors(props.task, props.parent).find(\r\n                  (i) => i.fake_id === value\r\n                )\r\n              } else {\r\n                task = getAvailablePredecessors(props.task, props.parent).find(\r\n                  (i) => i.id.toString() === value\r\n                )\r\n              }\r\n\r\n              setPredecessor(task)\r\n            }}\r\n            isInput={isInput}\r\n            editable={\r\n              isTaskEditable() &&\r\n              props.task.children.length === 0 &&\r\n              getAvailablePredecessors(props.task, props.parent).length > 0\r\n            }\r\n            label=\"Predecessor\"\r\n            type={FormElementType.Dropdown}\r\n            initialValue={predecessor?.fake_id ?? predecessor?.id?.toString()}\r\n            values={\r\n              getAvailablePredecessors(props.task, props.parent).map((tu) => {\r\n                return {\r\n                  id: tu.fake_id ?? tu.id.toString(),\r\n                  description: tu.task_name,\r\n                }\r\n              }) ?? []\r\n            }\r\n          />\r\n          <TaskComponentUpdatableDateField\r\n            variant=\"outlined\"\r\n            value={plannedStart}\r\n            update={(value) => {\r\n              setPlannedStart(value)\r\n\r\n              setChangeEvent(ProjectTaskChangeEvent.ChangeStart)\r\n    \r\n\r\n            }}\r\n            editable={\r\n              isTaskEditable() &&\r\n              props.task.children.length === 0 &&\r\n               (props.task.actual_start_date === null ||\r\n                 props.task.actual_start_date === undefined)\r\n            }\r\n            disablePast={true}\r\n            label=\"Planned Start\"\r\n            openTo=\"day\"\r\n            shouldDisableDate={() => {\r\n              return false\r\n            }}\r\n            isInput={isInput}\r\n            reschedule={props.task.reschedule?.start_request}\r\n            acceptReschedule={\r\n              props.task.reschedule?.start_request !== undefined\r\n                ? () =>\r\n                    acceptRescheduleStart(\r\n                      props.task,\r\n                      props.parent,\r\n                      props.task.reschedule!.start_request!\r\n                    )\r\n                : undefined\r\n            }\r\n            declineReschedule={\r\n              props.task.reschedule?.start_request !== undefined\r\n                ? () =>\r\n                    declineRescheduleStart(\r\n                      props.task.reschedule!.start_request!\r\n                    )\r\n                : undefined\r\n            }\r\n          />\r\n          <TaskComponentUpdatableDateField\r\n            variant=\"outlined\"\r\n            disablePast={true}\r\n            value={plannedEnd}\r\n            isInput={isInput}\r\n            update={(value) => {\r\n              setPlannedEnd(value)\r\n              setChangeEvent(ProjectTaskChangeEvent.ChangeEnd)\r\n            }}\r\n            editable={isTaskEditable() && props.task.children.length === 0}\r\n            shouldDisableDate={() => {\r\n              return false\r\n            }}\r\n            label=\"Planned End\"\r\n            openTo=\"day\"\r\n            reschedule={props.task.reschedule?.end_request}\r\n            acceptReschedule={\r\n              props.task.reschedule?.end_request !== undefined\r\n                ? () =>\r\n                    acceptRescheduleEnd(\r\n                      props.task,\r\n                      props.parent,\r\n                      props.task.reschedule!.end_request!\r\n                    )\r\n                : undefined\r\n            }\r\n            declineReschedule={\r\n              props.task.reschedule?.end_request !== undefined\r\n                ? () =>\r\n                    declineRescheduleEnd(props.task.reschedule!.end_request!)\r\n                : undefined\r\n            }\r\n          />\r\n\r\n          <IconButton\r\n            onClick={() => deleteTask(props.task, props.parent)}\r\n            disabled={!canDeleteTask(props.task)}\r\n          >\r\n            <DeleteRoundedIcon\r\n              color={canDeleteTask(props.task) ? \"error\" : \"disabled\"}\r\n            />\r\n          </IconButton>\r\n          <IconButton onClick={() => setIsInput(true)}>\r\n            <EditRoundedIcon color=\"info\" />\r\n          </IconButton>\r\n        </StyledRow>\r\n        {isInput && (\r\n          <ButtonRow>\r\n            <IconButton onClick={() => submit()}>\r\n              <CheckIcon color=\"success\" />\r\n            </IconButton>\r\n            <IconButton color=\"error\" onClick={() => cancelChanges()}>\r\n              <CancelIcon />\r\n            </IconButton>\r\n          </ButtonRow>\r\n        )}\r\n      </ColumnContainer>\r\n      <Divider orientation=\"horizontal\" />\r\n      {props.task.children.map((item) => {\r\n        return (\r\n          <ProjectTaskComponent\r\n            isRoot={false}\r\n            indent={props.indent + 1}\r\n            key={item.fake_id ?? item.id}\r\n            task={item}\r\n            parent={props.task}\r\n          />\r\n        )\r\n      })}\r\n    </MainContainer>\r\n  )\r\n}\r\n","import { Button, IconButton, Typography } from \"@mui/material\"\r\nimport { styled } from \"@mui/material/styles\"\r\nimport { useContext, useState } from \"react\"\r\nimport { EditTasksScreenContext } from \"../../contexts/EditTaskScreenContext\"\r\nimport empty from \"../../images/empty_temp_1.png\"\r\nimport AddRoundedIcon from \"@mui/icons-material/AddRounded\"\r\nimport NewProjectTaskFormDialog2 from \"../dialogs/NewProjectTaskFormDialog2\"\r\nimport ProjectTaskComponent from \"./ProjectTaskComponent\"\r\nimport grey from \"@mui/material/colors/grey\"\r\nimport SaveRoundedIcon from \"@mui/icons-material/SaveRounded\"\r\nimport PlayArrowRoundedIcon from \"@mui/icons-material/PlayArrowRounded\"\r\nimport ConfirmationDialog from \"../dialogs/ConfirmationDialog\"\r\nimport FastRewindRoundedIcon from \"@mui/icons-material/FastRewindRounded\"\r\n\r\nconst MainContainer = styled(\"div\")<{ loaded: boolean }>(\r\n  ({ theme, loaded }) => {\r\n    return {\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: loaded ? \"flex-start\" : \"center\",\r\n      alignItems: loaded ? \"flex-start\" : \"center\",\r\n      overflowY: \"scroll\",\r\n      backgroundColor:\r\n        theme.palette.mode === \"light\"\r\n          ? grey[100]\r\n          : theme.palette.background.default,\r\n      paddingTop: theme.spacing(1),\r\n      paddingBottom: theme.spacing(1),\r\n    }\r\n  }\r\n)\r\n\r\nexport default function TasksGrid() {\r\n  const { taskTree, saveDraft, project, startProject, isProjectReadyToStart } =\r\n    useContext(EditTasksScreenContext)!\r\n\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false)\r\n  const [isConfirmOpen, setIsConfirmOpen] = useState(false)\r\n\r\n  return (\r\n    <div style={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\r\n      <IconButton\r\n        onClick={() => setIsDialogOpen(true)}\r\n        style={{ alignSelf: \"flex-end\" }}\r\n      >\r\n        <AddRoundedIcon />\r\n      </IconButton>\r\n      <MainContainer\r\n        loaded={taskTree?.children !== null && taskTree?.children?.length !== 0}\r\n      >\r\n        {!taskTree ||\r\n          !taskTree.children ||\r\n          (taskTree?.children && taskTree?.children?.length === 0 && (\r\n            <>\r\n              <img src={empty} />\r\n              <Typography>You currently have no taskTree.</Typography>\r\n            </>\r\n          ))}\r\n        {taskTree?.children && taskTree?.children?.length > 0 && (\r\n          <>\r\n            {taskTree?.children?.map((child) => {\r\n              return (\r\n                <ProjectTaskComponent\r\n                  indent={0}\r\n                  isRoot={true}\r\n                  key={child.fake_id ?? child.id}\r\n                  task={child}\r\n                  parent={taskTree}\r\n                />\r\n              )\r\n            })}\r\n          </>\r\n        )}\r\n      </MainContainer>\r\n      <div\r\n        style={{\r\n          padding: \"0.5rem\",\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"flex-end\",\r\n        }}\r\n      >\r\n        <Button\r\n          endIcon={<FastRewindRoundedIcon />}\r\n          variant=\"contained\"\r\n          color=\"error\"\r\n          onClick={() => window.location.reload()}\r\n          style={{ marginRight: \"2rem\" }}\r\n        >\r\n          Reset Changes\r\n        </Button>\r\n        {project?.is_draft === 1 && (\r\n          <>\r\n            <Button\r\n              endIcon={<SaveRoundedIcon />}\r\n              variant=\"contained\"\r\n              color=\"warning\"\r\n              onClick={async () => await saveDraft()}\r\n              style={{ marginRight: \"2rem\" }}\r\n            >\r\n              Save Draft\r\n            </Button>\r\n            <Button\r\n              endIcon={<PlayArrowRoundedIcon />}\r\n              variant=\"contained\"\r\n              color=\"success\"\r\n              disabled={!isProjectReadyToStart()}\r\n              onClick={() => setIsConfirmOpen(true)}\r\n            >\r\n              Start Project\r\n            </Button>\r\n          </>\r\n        )}\r\n        {project?.is_draft != 1 && (\r\n          <>\r\n            <Button\r\n              endIcon={<PlayArrowRoundedIcon />}\r\n              variant=\"contained\"\r\n              color=\"success\"\r\n              disabled={!isProjectReadyToStart()}\r\n              onClick={() => setIsConfirmOpen(true)}\r\n            >\r\n              Submit Changes\r\n            </Button>\r\n          </>\r\n        )}\r\n      </div>\r\n      <NewProjectTaskFormDialog2\r\n        open={isDialogOpen}\r\n        handleClose={() => setIsDialogOpen(false)}\r\n        title=\"New Task\"\r\n      />\r\n      <ConfirmationDialog\r\n        isOpen={isConfirmOpen}\r\n        title={project?.is_draft === 1 ? \"Start Project?\" : \"Submit changes?\"}\r\n        content={\r\n          project?.is_draft ===1\r\n            ? \"Are you sure you want to start the project?\"\r\n            : \"Are you sure you want to submit the changes?\"\r\n        }\r\n        dismiss={() => setIsConfirmOpen(false)}\r\n        positive={async () => await startProject()}\r\n        negativeText=\"Cancel\"\r\n        positiveText={project?.is_draft ===1 ? \"Start\" : \"Submit\"}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import Button from \"@mui/material/Button\"\r\nimport { styled } from \"@mui/material/styles\"\r\nimport SortableTree from \"@nosferatu500/react-sortable-tree\"\r\nimport { useContext, useEffect, useState } from \"react\"\r\nimport { MainTaskTemplate } from \"../../api/TaskTemplateApi\"\r\nimport { EditTasksScreenContext } from \"../../contexts/EditTaskScreenContext\"\r\nimport { TreeElement } from \"../dialogs/TaskTreeViewDialog\"\r\nimport CheckRoundedIcon from \"@mui/icons-material/CheckRounded\"\r\nimport { grey } from \"@mui/material/colors\"\r\nimport { Typography } from \"@mui/material\"\r\nimport empty from \"../../images/empty_temp_1.png\"\r\n\r\nconst MainContainer = styled(\"div\")<{ empty: boolean }>(({ theme, empty }) => {\r\n  return {\r\n    height: \"100%\",\r\n    display: empty ? \"flex\" : undefined,\r\n    flexDirection: empty ? \"column\" : undefined,\r\n    alignItems: empty ? \"center\" : undefined,\r\n    justifyContent: empty ? \"center\" : undefined,\r\n  }\r\n})\r\n\r\nconst TreeDiv = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    height: \"90%\",\r\n    backgroundColor:\r\n      theme.palette.mode === \"light\"\r\n        ? grey[100]\r\n        : theme.palette.grey[900],\r\n  }\r\n})\r\n\r\nexport default function TaskTemplatePreview() {\r\n  const { template, pickTemplate } = useContext(EditTasksScreenContext)!\r\n\r\n  useEffect(() => {\r\n    setTreeData(getTreeData(template?.children ?? []))\r\n  }, [template])\r\n\r\n  const getTreeData: (tasks: MainTaskTemplate[]) => TreeElement[] = (\r\n    tasks: MainTaskTemplate[]\r\n  ) => {\r\n    return tasks.map((element) => {\r\n      return {\r\n        title: element.task_name,\r\n        children: getTreeData(element.children ?? []),\r\n      }\r\n    })\r\n  }\r\n\r\n  const [treeData, setTreeData] = useState(\r\n    getTreeData(template?.children ?? [])\r\n  )\r\n\r\n  return (\r\n    <MainContainer empty={treeData.length === 0}>\r\n      {treeData.length === 0 && (\r\n        <>\r\n          <img src={empty} />\r\n          <Typography variant=\"h6\">This template is empty</Typography>\r\n        </>\r\n      )}\r\n\r\n      {treeData.length > 0 && (\r\n        <>\r\n          <TreeDiv>\r\n            <SortableTree\r\n            style={{color: \"black\"}}\r\n              canDrag={() => false}\r\n              canDrop={() => false}\r\n              onChange={(data) => {\r\n                setTreeData(data)\r\n              }}\r\n              treeData={treeData}\r\n            />\r\n          </TreeDiv>\r\n          <div\r\n            style={{\r\n              height: \"10%\",\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Button\r\n              endIcon={<CheckRoundedIcon />}\r\n              variant=\"contained\"\r\n              color=\"success\"\r\n              onClick={pickTemplate}\r\n            >\r\n              Select this template\r\n            </Button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </MainContainer>\r\n  )\r\n}\r\n","import Box from \"@mui/material/Box\"\r\nimport Button from \"@mui/material/Button\"\r\nimport FormControl from \"@mui/material/FormControl\"\r\nimport InputLabel from \"@mui/material/InputLabel\"\r\nimport MenuItem from \"@mui/material/MenuItem\"\r\nimport Paper from \"@mui/material/Paper\"\r\nimport Select from \"@mui/material/Select\"\r\nimport Typography from \"@mui/material/Typography\"\r\nimport ErrorComponent from \"../components/ErrorComponent\"\r\nimport Loading from \"../components/Loading\"\r\nimport {\r\n  InputContainer,\r\n  ScreenContainer,\r\n  StyledVerticalDivider,\r\n} from \"../components/StyledComponents\"\r\nimport { styled } from \"@mui/material/styles\"\r\nimport { blue, green, grey, orange, red, teal } from \"@mui/material/colors\"\r\nimport { useContext } from \"react\"\r\nimport { EditTasksScreenContext } from \"../contexts/EditTaskScreenContext\"\r\nimport TasksGrid from \"../components/reusable/TasksGrid\"\r\nimport TaskTemplatePreview from \"../components/reusable/TaskTemplatePreview\"\r\nimport TextPillComponent from \"../components/reusable/PillComponent\"\r\nimport { formatCurrency, getDayFromDate } from \"../utils/formatters\"\r\n\r\nconst HeaderContainer = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    width: \"100%\",\r\n    // backgroundColor: grey[200],\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  }\r\n})\r\n\r\nconst MainContainer = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    height: \"100%\",\r\n    overflow: \"hidden\",\r\n  }\r\n})\r\n\r\nconst TasksContainer = styled(Paper)(({ theme }) => {\r\n  return {\r\n    flex: \"4\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    backgroundColor:\r\n      theme.palette.mode === \"light\"\r\n        ? grey[300]\r\n        : theme.palette.background.paper,\r\n    height: \"100%\",\r\n    overflow: \"hidden\",\r\n  }\r\n})\r\n\r\nexport default function ProjectTasksEditScreen() {\r\n  const {\r\n    isLoading,\r\n    error,\r\n    minifiedTemplates: templates,\r\n    project,\r\n    users,\r\n    showingTemplate,\r\n    selectTemplate,\r\n    resetTempSelection,\r\n    setSelectedTemplateId,\r\n    selectedTemplateId,\r\n  } = useContext(EditTasksScreenContext)!\r\n\r\n  return (\r\n    <ScreenContainer\r\n      isDataLoaded={\r\n        !isLoading && !error && templates !== null && users !== null\r\n      }\r\n    >\r\n      {error && <ErrorComponent text={error} />}\r\n      {isLoading && <Loading text=\"Loading..\" />}\r\n      {!isLoading && !error && templates !== null && users !== null && (\r\n        <MainContainer>\r\n          <HeaderContainer>\r\n            <TextPillComponent\r\n              title=\"Client\"\r\n              value={project?.client?.description ?? \"\"}\r\n              lightColor={green[100]}\r\n              darkColor={green[800]}\r\n            />\r\n            <StyledVerticalDivider flexItem orientation=\"vertical\" />\r\n            <TextPillComponent\r\n              title=\"Project Owner\"\r\n              value={project?.user?.description ?? \"\"}\r\n              lightColor={blue[100]}\r\n              darkColor={blue[800]}\r\n            />\r\n            <StyledVerticalDivider flexItem orientation=\"vertical\" />\r\n            <TextPillComponent\r\n              title=\"Price\"\r\n              value={formatCurrency(\r\n                project?.total_price ?? 0,\r\n                project?.currency_code ?? \"USD\"\r\n              )}\r\n              lightColor={teal[100]}\r\n              darkColor={teal[800]}\r\n            />\r\n            <StyledVerticalDivider flexItem orientation=\"vertical\" />\r\n            <TextPillComponent\r\n              title=\"Paid\"\r\n              value={formatCurrency(\r\n                project?.paid_amount ?? 0,\r\n                project?.currency_code ?? \"USD\"\r\n              )}\r\n              lightColor={orange[100]}\r\n              darkColor={orange[800]}\r\n            />\r\n            <StyledVerticalDivider flexItem orientation=\"vertical\" />\r\n            <TextPillComponent\r\n              title=\"Delivery Date\"\r\n              value={\r\n                project?.estimated_delivery\r\n                  ? getDayFromDate(new Date(project.estimated_delivery))\r\n                  : \"N/A\"\r\n              }\r\n              lightColor={red[100]}\r\n              darkColor={red[800]}\r\n            />\r\n            <StyledVerticalDivider flexItem orientation=\"vertical\" />\r\n            <InputContainer>\r\n              <Typography variant=\"h6\">Template: &nbsp;&nbsp;</Typography>\r\n              <Box sx={{ minWidth: 160 }}>\r\n                <FormControl fullWidth>\r\n                  <InputLabel id=\"template-label\">Template</InputLabel>\r\n                  <Select\r\n                    labelId=\"template-label\"\r\n                    id=\"template-select\"\r\n                    value={selectedTemplateId}\r\n                    label=\"Template\"\r\n                    onChange={(e) => setSelectedTemplateId(e.target.value)}\r\n                  >\r\n                    {templates.map((temp) => (\r\n                      <MenuItem key={temp.id} value={temp.id}>\r\n                        {temp.task_name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Box>\r\n            </InputContainer>\r\n            <InputContainer>\r\n              <Button\r\n                color=\"warning\"\r\n                onClick={async () => await selectTemplate()}\r\n              >\r\n                Select\r\n              </Button>\r\n              {selectedTemplateId && (\r\n                <Button color=\"error\" onClick={resetTempSelection}>\r\n                  Reset\r\n                </Button>\r\n              )}\r\n            </InputContainer>\r\n          </HeaderContainer>\r\n          <TasksContainer>\r\n            {!showingTemplate && <TasksGrid />}\r\n            {showingTemplate && <TaskTemplatePreview />}\r\n          </TasksContainer>\r\n        </MainContainer>\r\n      )}\r\n    </ScreenContainer>\r\n  )\r\n}\r\n","import { domainName } from \"../constants/Config\"\r\nimport { CurrencyInterface } from \"./ProjectApi\"\r\n\r\nexport interface ProjectPaymentRes {\r\n  payments: ProjectPaymentInterface[]\r\n  currencies: CurrencyInterface[]\r\n  project_currency_code: string\r\n  client_currency_code: string\r\n  paid: number\r\n  price: number\r\n}\r\n\r\nexport interface ProjectPaymentInterface {\r\n  id: number\r\n  is_down_payment: boolean\r\n  payment_amount: number\r\n  collection_date: number\r\n  currency: string\r\n}\r\n\r\nexport const getProjectPayments = (id: number | string) =>\r\n  domainName + `/api/project/${id}/payment/all`\r\n\r\nexport const newProjectPaymentsUrl = (id: number | string) =>\r\n  domainName + `/api/project/${id}/payment/new`\r\n\r\nexport interface NewProjectPaymentReq {\r\n  payment_amount: number\r\n  collection_date: number\r\n  currency_code: string\r\n}\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport { api, HttpMethods } from \"../api/ApiControllers\"\r\nimport { CurrencyInterface } from \"../api/ProjectApi\"\r\n\r\nimport {\r\n  getProjectPayments,\r\n  NewProjectPaymentReq,\r\n  newProjectPaymentsUrl,\r\n  ProjectPaymentInterface,\r\n  ProjectPaymentRes,\r\n} from \"../api/ProjectPaymentApi\"\r\nimport { AuthContext } from \"./AuthContext\"\r\n\r\nexport interface ProjectPaymentState {\r\n  payments: ProjectPaymentInterface[]\r\n  currencies: CurrencyInterface[]\r\n  projectCurrency: string | undefined\r\n  clientCurrency: string | undefined\r\n  isLoading: boolean\r\n  error: string | undefined\r\n  paid: number\r\n  price: number\r\n  newProjectPayment(\r\n    amount: number,\r\n    date: number,\r\n    currency: string\r\n  ): Promise<void>\r\n}\r\n\r\nexport const ProjectPaymentContext = createContext<ProjectPaymentState | null>(\r\n  null\r\n)\r\n\r\nexport default function ProjectPaymentContextProvider(props: {\r\n  children: JSX.Element\r\n}) {\r\n  const { id } = useParams()\r\n  const { user } = useContext(AuthContext)!\r\n\r\n  useEffect(() => {\r\n    setIsLaoding(true)\r\n    api<ProjectPaymentRes>(\r\n      getProjectPayments(id!),\r\n      HttpMethods.Get,\r\n      null,\r\n      { Authorization: `Bearer ${user?.tokenStr}` },\r\n      \"Something went wrong\",\r\n      true\r\n    )\r\n      .then((data) => {\r\n        setError(undefined)\r\n        setPayments(data!.payments)\r\n        setCurrencies(data!.currencies)\r\n        setProjectCurrency(data!.project_currency_code)\r\n        setClientCurrency(data!.client_currency_code)\r\n        setPaid(data!.paid)\r\n        setPrice(data!.price)\r\n        setIsLaoding(false)\r\n      })\r\n      .catch((err) => {\r\n        setError(err.message)\r\n        setIsLaoding(false)\r\n      })\r\n  }, [])\r\n\r\n  const [price, setPrice] = useState(0)\r\n  const [paid, setPaid] = useState(0)\r\n  const [payments, setPayments] = useState<ProjectPaymentInterface[]>([])\r\n  const [error, setError] = useState<string | undefined>(undefined)\r\n  const [isLoading, setIsLaoding] = useState(false)\r\n  const [currencies, setCurrencies] = useState<CurrencyInterface[]>([])\r\n  const [projectCurrency, setProjectCurrency] = useState<string | undefined>(\r\n    undefined\r\n  )\r\n  const [clientCurrency, setClientCurrency] = useState<string | undefined>(\r\n    undefined\r\n  )\r\n\r\n  const newProjectPayment = async (\r\n    amount: number,\r\n    date: number,\r\n    currency: string\r\n  ) => {\r\n    try {\r\n      setIsLaoding(true)\r\n      const body: NewProjectPaymentReq = {\r\n        collection_date: date,\r\n        payment_amount: amount,\r\n        currency_code: currency,\r\n      }\r\n      const data = await api<ProjectPaymentRes>(\r\n        newProjectPaymentsUrl(id!),\r\n        HttpMethods.Post,\r\n        body,\r\n        { Authorization: `Bearer ${user?.tokenStr}` },\r\n        \"Something went wrong\",\r\n        true\r\n      )\r\n      setError(undefined)\r\n      setPayments(data!.payments)\r\n      setCurrencies(data!.currencies)\r\n      setProjectCurrency(data!.project_currency_code)\r\n      setClientCurrency(data!.client_currency_code)\r\n      setPaid(data!.paid)\r\n      setPrice(data!.price)\r\n      setIsLaoding(false)\r\n    } catch (e: any) {\r\n      setError(e.message)\r\n      setIsLaoding(false)\r\n    }\r\n  }\r\n\r\n  const value: ProjectPaymentState = {\r\n    payments,\r\n    error,\r\n    isLoading,\r\n    currencies,\r\n    projectCurrency,\r\n    clientCurrency,\r\n    paid,\r\n    price,\r\n    newProjectPayment,\r\n  }\r\n\r\n  return (\r\n    <ProjectPaymentContext.Provider value={value}>\r\n      {props.children}\r\n    </ProjectPaymentContext.Provider>\r\n  )\r\n}\r\n","import AdapterDateFns from \"@mui/lab/AdapterDateFns\"\r\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\"\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Paper,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\"\r\nimport { styled } from \"@mui/material/styles\"\r\nimport { useContext, useState } from \"react\"\r\nimport { ProjectPaymentContext } from \"../contexts/ProjectPaymentContext\"\r\n//import frLocale from \"date-fns/locale/fr\"\r\nimport frLocale from \"date-fns/locale/en-CA\"\r\n\r\nimport DatePicker from \"@mui/lab/DatePicker\"\r\nimport PaymentsRoundedIcon from \"@mui/icons-material/PaymentsRounded\"\r\n\r\nconst Container = styled(Paper)(({ theme }) => {\r\n  return {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    margin: theme.spacing(2),\r\n    padding: theme.spacing(2),\r\n    height: \"450px\",\r\n  }\r\n})\r\n\r\nexport default function NewProjectPaymentForm() {\r\n  const { currencies, projectCurrency, newProjectPayment, price, paid } =\r\n    useContext(ProjectPaymentContext)!\r\n\r\n  const [amount, setAmount] = useState<number>()\r\n  const [amountErr, setAmountErr] = useState(false)\r\n  const [date, setDate] = useState(new Date())\r\n  const [dateErr, setDateErr] = useState(false)\r\n  const [currency, setCurrency] = useState(projectCurrency!)\r\n  const [currencyErr, setCurrencyErr] = useState(false)\r\n\r\n  function validate(): boolean {\r\n    let valid = true\r\n\r\n    if (!amount || amount <= 0 || amount > price - paid) {\r\n      setAmountErr(true)\r\n      valid = false\r\n    } else {\r\n      setAmountErr(false)\r\n    }\r\n\r\n    if (!date) {\r\n      setDateErr(true)\r\n      valid = false\r\n    } else {\r\n      setDateErr(false)\r\n    }\r\n\r\n    if (!currency) {\r\n      setCurrencyErr(true)\r\n      valid = false\r\n    } else {\r\n      setCurrencyErr(false)\r\n    }\r\n\r\n    return valid\r\n  }\r\n\r\n  async function submit() {\r\n    if (validate()) {\r\n      await newProjectPayment(amount!, date.getTime(), currency)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Typography gutterBottom variant=\"h5\">\r\n        New Payment\r\n      </Typography>\r\n      <TextField\r\n        style={{ margin: \"1rem\" }}\r\n        type=\"number\"\r\n        error={amountErr}\r\n        label=\"Amount\"\r\n        value={amount}\r\n        onChange={(value) => {\r\n          if (!Number.isNaN(value.target.value)) {\r\n            setAmount(Number(value.target.value))\r\n          }\r\n        }}\r\n        required\r\n      />\r\n      <LocalizationProvider dateAdapter={AdapterDateFns} locale={frLocale}>\r\n        <DatePicker\r\n          label=\"Collection Date\"\r\n          openTo=\"day\"\r\n          views={[\"year\", \"month\", \"day\"]}\r\n          value={date}\r\n          onChange={(newValue) => {\r\n            if (newValue) {\r\n              setDate(newValue)\r\n            }\r\n          }}\r\n          renderInput={(params) => (\r\n            <TextField style={{ margin: \"1rem\" }} error={dateErr} {...params} />\r\n          )}\r\n        />\r\n      </LocalizationProvider>\r\n      <Box style={{ margin: \"1rem\" }} sx={{ minWidth: 200 }}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Currency</InputLabel>\r\n          <Select\r\n            fullWidth\r\n            error={currencyErr}\r\n            value={currency}\r\n            label=\"Currency\"\r\n            onChange={(e) => setCurrency(e.target.value)}\r\n          >\r\n            {currencies.map((value) => {\r\n              return (\r\n                <MenuItem key={value.currency_code} value={value.currency_code}>\r\n                  {value.currency_description}\r\n                </MenuItem>\r\n              )\r\n            })}\r\n          </Select>\r\n        </FormControl>\r\n      </Box>\r\n      <Button\r\n        style={{ height: \"60px\", margin: \"1rem\" }}\r\n        color=\"success\"\r\n        variant=\"contained\"\r\n        endIcon={<PaymentsRoundedIcon />}\r\n        onClick={async () => await submit()}\r\n      >\r\n        Submit Payment\r\n      </Button>\r\n    </Container>\r\n  )\r\n}\r\n","import { styled } from \"@mui/material\"\r\nimport { blue, green, grey, orange, red, teal } from \"@mui/material/colors\"\r\nimport { useContext } from \"react\"\r\nimport ErrorComponent from \"../components/ErrorComponent\"\r\nimport Loading from \"../components/Loading\"\r\nimport NewProjectPaymentForm from \"../components/NewProjectPaymentForm\"\r\nimport CustomPaginationTable, {\r\n  CustomPaginationTableState,\r\n  CustomPaginationTableRow,\r\n} from \"../components/reusable/CustomPaginationTable\"\r\nimport TextPillComponent from \"../components/reusable/PillComponent\"\r\nimport {\r\n  ScreenContainer,\r\n  StyledVerticalDivider,\r\n} from \"../components/StyledComponents\"\r\nimport { ProjectPaymentContext } from \"../contexts/ProjectPaymentContext\"\r\nimport { formatCurrency, getDayFromDate } from \"../utils/formatters\"\r\n\r\nconst HeaderContainer = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    width: \"100%\",\r\n    // backgroundColor: grey[200],\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  }\r\n})\r\n\r\nconst BodyGrid = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"3fr 1fr\",\r\n    height: \"100%\",\r\n  }\r\n})\r\n\r\nexport default function ProjectPaymentScreen() {\r\n  const {\r\n    payments,\r\n    isLoading,\r\n    error,\r\n    paid,\r\n    price,\r\n    projectCurrency,\r\n    clientCurrency,\r\n  } = useContext(ProjectPaymentContext)!\r\n\r\n  function getTableState(): CustomPaginationTableState {\r\n    const headers: string[] = [\r\n      \"Amount\",\r\n      \"Currency\",\r\n      \"Collection Date\",\r\n      \"Down Payment\",\r\n    ]\r\n    const rows: CustomPaginationTableRow[] = payments.map((payment) => {\r\n      return {\r\n        id: payment.id,\r\n        cells: [\r\n          payment.payment_amount,\r\n          payment.currency,\r\n          getDayFromDate(new Date(payment.collection_date)),\r\n          payment.is_down_payment ? \"down\" : \"\",\r\n        ],\r\n      }\r\n    })\r\n\r\n    return {\r\n      heads: headers,\r\n      rows,\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ScreenContainer isDataLoaded={!isLoading && !error}>\r\n      {isLoading && <Loading text=\"Loading Schema..\" />}\r\n      {error && <ErrorComponent text={error ?? \"Something went wrong\"} />}\r\n      {!isLoading && !error && projectCurrency && (\r\n        <div\r\n          style={{ display: \"flex\", flexDirection: \"column\", height: \"100%\" }}\r\n        >\r\n          <HeaderContainer>\r\n            <TextPillComponent\r\n              title=\"Price\"\r\n              value={formatCurrency(price, projectCurrency!)}\r\n              lightColor={green[100]}\r\n              darkColor={green[800]}\r\n            />\r\n            <StyledVerticalDivider flexItem orientation=\"vertical\" />\r\n            <TextPillComponent\r\n              title=\"Paid\"\r\n              value={formatCurrency(paid, projectCurrency!)}\r\n              lightColor={blue[100]}\r\n              darkColor={blue[800]}\r\n            />\r\n            <StyledVerticalDivider flexItem orientation=\"vertical\" />\r\n            <TextPillComponent\r\n              title=\"Amount Due\"\r\n              value={formatCurrency(price - paid, projectCurrency!)}\r\n              lightColor={red[100]}\r\n              darkColor={red[800]}\r\n            />\r\n            <StyledVerticalDivider flexItem orientation=\"vertical\" />\r\n            <TextPillComponent\r\n              title=\"Project Currency\"\r\n              value={projectCurrency!}\r\n              lightColor={teal[100]}\r\n              darkColor={teal[800]}\r\n            />\r\n            <StyledVerticalDivider flexItem orientation=\"vertical\" />\r\n            <TextPillComponent\r\n              title=\"Client Currency\"\r\n              value={clientCurrency!}\r\n              lightColor={orange[100]}\r\n              darkColor={orange[800]}\r\n            />\r\n          </HeaderContainer>\r\n          <BodyGrid>\r\n            <CustomPaginationTable\r\n              table={getTableState()}\r\n              onRowClick={() => {}}\r\n              cursor=\"default\"\r\n            />\r\n            <NewProjectPaymentForm />\r\n          </BodyGrid>\r\n        </div>\r\n      )}\r\n    </ScreenContainer>\r\n  )\r\n}\r\n","import { domainName } from \"../constants/Config\"\r\n\r\nexport interface CurrencyWithRatioInterface {\r\n  currency_code: string\r\n  description: string\r\n  symbol: string\r\n  ratio: number\r\n  is_main: boolean\r\n}\r\n\r\nexport interface NewCurrencyReq {\r\n  description: string\r\n  currency_code: string\r\n  ratio: number\r\n  symbol: string\r\n}\r\n\r\nexport const getAllCurrenciesUrl = domainName + \"/api/currency/all\"\r\n\r\nexport const newCurrenciesUrl = domainName + \"/api/currency/new\"\r\n\r\nexport const updateCurrenciesUrl = (currCode: string) =>\r\n  domainName + `/api/currency/${currCode}`\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\nimport { api, HttpMethods } from \"../api/ApiControllers\"\r\nimport {\r\n  CurrencyWithRatioInterface,\r\n  getAllCurrenciesUrl,\r\n  newCurrenciesUrl,\r\n  NewCurrencyReq,\r\n  updateCurrenciesUrl,\r\n} from \"../api/CurrenciesApi\"\r\nimport { AuthContext } from \"./AuthContext\"\r\n\r\nexport interface CurrenciesState {\r\n  isLoading: boolean\r\n  error: string | null\r\n  currencies: CurrencyWithRatioInterface[]\r\n  newCurrency(req: NewCurrencyReq): Promise<void>\r\n  selectedCurrency: CurrencyWithRatioInterface | null\r\n  setSelectedCurrencyCb: (currency: CurrencyWithRatioInterface) => void\r\n  updateCurrency: (currencyCode: string, newRatio: number) => Promise<void>\r\n}\r\n\r\nexport const CurrrenciesContext = createContext<CurrenciesState | null>(null)\r\n\r\nexport default function CurrenciesContextProvider({\r\n  children,\r\n}: {\r\n  children: JSX.Element\r\n}) {\r\n  const { user } = useContext(AuthContext)!\r\n\r\n  const [currencies, setCurrencies] = useState<CurrencyWithRatioInterface[]>([])\r\n  const [error, setError] = useState<string | null>(null)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [selectedCurrency, setSelectedCurrency] =\r\n    useState<CurrencyWithRatioInterface | null>(null)\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    api<CurrencyWithRatioInterface[]>(\r\n      getAllCurrenciesUrl,\r\n      HttpMethods.Get,\r\n      null,\r\n      { Authorization: `Bearer ${user?.tokenStr}` },\r\n      \"Something went wrong\",\r\n      true\r\n    )\r\n      .then((data) => {\r\n        setCurrencies(data!)\r\n        setError(null)\r\n        setIsLoading(false)\r\n      })\r\n      .catch((e) => {\r\n        setError(e.message)\r\n        setIsLoading(false)\r\n      })\r\n  }, [])\r\n\r\n  const newCurrency = async (req: NewCurrencyReq) => {\r\n    try {\r\n      setIsLoading(true)\r\n      const res = await api<CurrencyWithRatioInterface[]>(\r\n        newCurrenciesUrl,\r\n        HttpMethods.Post,\r\n        req,\r\n        { Authorization: `Bearer ${user?.tokenStr}` },\r\n        \"Something went wrong\",\r\n        true\r\n      )\r\n      if (res) {\r\n        setCurrencies(res)\r\n      }\r\n      setIsLoading(false)\r\n    } catch (e: any) {\r\n      setError(e.message)\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const updateCurrency = async (currencyCode: string, newRatio: number) => {\r\n    try {\r\n      setIsLoading(true)\r\n      const res = await api<CurrencyWithRatioInterface[]>(\r\n        updateCurrenciesUrl(currencyCode),\r\n        HttpMethods.Patch,\r\n        { ratio: newRatio },\r\n        { Authorization: `Bearer ${user?.tokenStr}` },\r\n        \"Something went wrong\",\r\n        true\r\n      )\r\n      if (res) {\r\n        setCurrencies(res)\r\n      }\r\n      setIsLoading(false)\r\n      setSelectedCurrency(null)\r\n    } catch (e: any) {\r\n      setError(e.message)\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const setSelectedCurrencyCb = (currency: CurrencyWithRatioInterface) => {\r\n    if (currency === selectedCurrency) {\r\n      setSelectedCurrency(null)\r\n    } else {\r\n      setSelectedCurrency(currency)\r\n    }\r\n  }\r\n\r\n  const value: CurrenciesState = {\r\n    isLoading,\r\n    error,\r\n    currencies,\r\n    selectedCurrency,\r\n    updateCurrency,\r\n    newCurrency,\r\n    setSelectedCurrencyCb,\r\n  }\r\n\r\n  return (\r\n    <CurrrenciesContext.Provider value={value}>\r\n      {children}\r\n    </CurrrenciesContext.Provider>\r\n  )\r\n}\r\n","import { Button, TextField, Typography } from \"@mui/material\"\r\nimport Paper from \"@mui/material/Paper\"\r\nimport { styled } from \"@mui/material/styles\"\r\nimport { useContext, useEffect, useState } from \"react\"\r\nimport { CurrrenciesContext } from \"../contexts/CurrenciesContext\"\r\nimport { StyledDivider } from \"./StyledComponents\"\r\nimport CheckCircleRoundedIcon from \"@mui/icons-material/CheckCircleRounded\"\r\nimport { green, orange } from \"@mui/material/colors\"\r\nimport { NewCurrencyReq } from \"../api/CurrenciesApi\"\r\n\r\nconst Container = styled(Paper)(({ theme }) => {\r\n  return {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    padding: theme.spacing(1),\r\n  }\r\n})\r\n\r\nconst CustomTextField = styled(TextField)(({ theme }) => {\r\n  return {\r\n    margin: theme.spacing(2),\r\n  }\r\n})\r\n\r\nconst RowContainer = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  }\r\n})\r\n\r\nexport default function NewCurrencyForm() {\r\n  const { currencies, newCurrency, selectedCurrency, updateCurrency } =\r\n    useContext(CurrrenciesContext)!\r\n\r\n  const [code, setCode] = useState<string | null>(null)\r\n  const [codeErr, setCodeErr] = useState(false)\r\n  const [desc, setDesc] = useState<string | null>(null)\r\n  const [descErr, setDescErr] = useState(false)\r\n  const [symbol, setSymbol] = useState<string | null>(null)\r\n  const [symbolErr, setSymbolErr] = useState(false)\r\n\r\n  const [ratio, setRatio] = useState<number>(0)\r\n  const [ratioErr, setRatioErr] = useState(false)\r\n  const [mirroredRatio, setMirroredRatio] = useState<number>(0)\r\n\r\n  useEffect(() => {\r\n    if (selectedCurrency) {\r\n      setCode(selectedCurrency.currency_code)\r\n      setDesc(selectedCurrency.description)\r\n      setSymbol(selectedCurrency.symbol)\r\n      setRatioCb(selectedCurrency.ratio.toString())\r\n    } else {\r\n      setCode(null)\r\n      setDesc(null)\r\n      setSymbol(null)\r\n      setRatioCb(\"0\")\r\n    }\r\n  }, [selectedCurrency])\r\n\r\n  const setRatioCb = (e: string) => {\r\n    let value = Number(e)\r\n    if (!Number.isNaN(value)) {\r\n      if (value < 0) {\r\n        value = value * -1\r\n      }\r\n      setRatio(value)\r\n\r\n      const mirVal = 1 / value\r\n      setMirroredRatio(Number.isFinite(mirVal) ? mirVal : 0)\r\n    }\r\n  }\r\n\r\n  const setRatioMirroredCb = (e: string) => {\r\n    let value = Number(e)\r\n    if (!Number.isNaN(value)) {\r\n      if (value < 0) {\r\n        value = value * -1\r\n      }\r\n      setMirroredRatio(value)\r\n\r\n      const mirVal = 1 / value\r\n\r\n      setRatio(Number.isFinite(mirVal) ? mirVal : 0)\r\n    }\r\n  }\r\n\r\n  const setCurrencyCode = (e: string) => {\r\n    setCode(e.toLocaleUpperCase())\r\n    const uniqueCodes = currencies.map((i) =>\r\n      i.currency_code.toLocaleUpperCase()\r\n    )\r\n\r\n    if (uniqueCodes.includes(e.toLocaleUpperCase()) && !selectedCurrency) {\r\n      setCodeErr(true)\r\n    } else {\r\n      setCodeErr(false)\r\n    }\r\n  }\r\n\r\n  const getMainCurr = () => {\r\n    return currencies.find((c) => c.is_main)\r\n  }\r\n\r\n  const submit = async () => {\r\n    if (validate()) {\r\n      if (!selectedCurrency) {\r\n        const body: NewCurrencyReq = {\r\n          currency_code: code!,\r\n          ratio: ratio,\r\n          symbol: symbol!,\r\n          description: desc!,\r\n        }\r\n        await newCurrency(body)\r\n      } else {\r\n        await updateCurrency(selectedCurrency!.currency_code, ratio)\r\n      }\r\n    }\r\n  }\r\n\r\n  function validate(): boolean {\r\n    let valid = true\r\n    const uniqueCodes = currencies.map((i) =>\r\n      i.currency_code.toLocaleUpperCase()\r\n    )\r\n\r\n    if (!selectedCurrency) {\r\n      if (\r\n        !code ||\r\n        code.length < 1 ||\r\n        uniqueCodes.includes(code.toLocaleUpperCase())\r\n      ) {\r\n        setCodeErr(true)\r\n        valid = false\r\n      } else {\r\n        setCodeErr(false)\r\n      }\r\n\r\n      if (!desc || desc.length < 1) {\r\n        setDescErr(true)\r\n        valid = false\r\n      } else {\r\n        setDescErr(false)\r\n      }\r\n\r\n      if (!symbol || symbol.length < 1) {\r\n        setSymbolErr(true)\r\n        valid = false\r\n      } else {\r\n        setSymbolErr(false)\r\n      }\r\n    }\r\n\r\n    if (ratio <= 0) {\r\n      setRatioErr(true)\r\n      valid = false\r\n    } else {\r\n      setRatioErr(false)\r\n    }\r\n\r\n    return valid\r\n  }\r\n\r\n  const mainCurrStyle = { color: green[700], fontWeight: \"bold\" }\r\n  const toCurrStyle = { color: orange[700], fontWeight: \"bold\" }\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        {selectedCurrency ? \"Update Currency\" : \"New Currency\"}\r\n      </Typography>\r\n\r\n      <CustomTextField\r\n        type=\"text\"\r\n        disabled={selectedCurrency !== null}\r\n        label=\"Currency Code\"\r\n        required\r\n        value={code ?? \"\"}\r\n        error={codeErr}\r\n        onChange={(e) => setCurrencyCode(e.target.value)}\r\n      />\r\n\r\n      <CustomTextField\r\n        type=\"text\"\r\n        label=\"Description\"\r\n        disabled={selectedCurrency !== null}\r\n        required\r\n        value={desc ?? \"\"}\r\n        error={descErr}\r\n        onChange={(e) => setDesc(e.target.value)}\r\n      />\r\n\r\n      <CustomTextField\r\n        type=\"text\"\r\n        label=\"Symbol\"\r\n        disabled={selectedCurrency !== null}\r\n        required\r\n        value={symbol ?? \"\"}\r\n        error={symbolErr}\r\n        onChange={(e) => setSymbol(e.target.value)}\r\n      />\r\n\r\n      <StyledDivider orientation=\"horizontal\" />\r\n\r\n      <Typography style={{ marginTop: \"1rem\" }} gutterBottom variant=\"h5\">\r\n        Rate\r\n      </Typography>\r\n\r\n      <RowContainer>\r\n        <Typography style={mainCurrStyle} gutterBottom variant=\"h6\">\r\n          {getMainCurr()?.currency_code}\r\n        </Typography>\r\n        <Typography gutterBottom variant=\"h6\" style={toCurrStyle}>\r\n          {!code || code?.length === 0 ? \"———\" : code}\r\n        </Typography>\r\n        <Typography gutterBottom variant=\"h6\">\r\n          =\r\n        </Typography>\r\n        <CustomTextField\r\n          type=\"number\"\r\n          label=\"Ratio\"\r\n          required\r\n          value={ratio?.toString()}\r\n          error={ratioErr}\r\n          onChange={(e) => setRatioCb(e.target.value)}\r\n        />\r\n      </RowContainer>\r\n\r\n      <RowContainer>\r\n        <Typography gutterBottom variant=\"h6\" style={toCurrStyle}>\r\n          {!code || code?.length === 0 ? \"———\" : code}\r\n        </Typography>\r\n        <Typography gutterBottom variant=\"h6\" style={mainCurrStyle}>\r\n          {getMainCurr()?.currency_code}\r\n        </Typography>\r\n        <Typography gutterBottom variant=\"h6\">\r\n          =\r\n        </Typography>\r\n\r\n        <CustomTextField\r\n          type=\"number\"\r\n          label=\"Ratio\"\r\n          required\r\n          value={mirroredRatio?.toString()}\r\n          onChange={(e) => setRatioMirroredCb(e.target.value)}\r\n        />\r\n      </RowContainer>\r\n\r\n      <Button\r\n        style={{ height: \"60px\", margin: \"1rem\" }}\r\n        color=\"success\"\r\n        variant=\"contained\"\r\n        endIcon={<CheckCircleRoundedIcon />}\r\n        onClick={async () => await submit()}\r\n      >\r\n        {selectedCurrency ? \"Update\" : \"Submit\"}\r\n      </Button>\r\n    </Container>\r\n  )\r\n}\r\n","import { grey } from \"@mui/material/colors\"\r\nimport { useContext } from \"react\"\r\nimport ErrorComponent from \"../components/ErrorComponent\"\r\nimport Loading from \"../components/Loading\"\r\nimport NewCurrencyForm from \"../components/NewCurrencyForm\"\r\nimport NewProjectPaymentForm from \"../components/NewProjectPaymentForm\"\r\nimport CustomPaginationTable, {\r\n  CustomPaginationTableRow,\r\n  CustomPaginationTableState,\r\n} from \"../components/reusable/CustomPaginationTable\"\r\nimport { ScreenContainer } from \"../components/StyledComponents\"\r\nimport { CurrrenciesContext } from \"../contexts/CurrenciesContext\"\r\nimport { getDayFromDate } from \"../utils/formatters\"\r\n\r\nexport default function CurrenciesScreen() {\r\n  const {\r\n    currencies,\r\n    isLoading,\r\n    error,\r\n    setSelectedCurrencyCb,\r\n    selectedCurrency,\r\n  } = useContext(CurrrenciesContext)!\r\n\r\n  function getTableState(): CustomPaginationTableState {\r\n    const headers: string[] = [\r\n      \"Currency Code\",\r\n      \"Description\",\r\n      \"Symbol\",\r\n      \"Ratio\",\r\n      \"Main\",\r\n    ]\r\n    const rows: CustomPaginationTableRow[] = currencies.map((curr) => {\r\n      return {\r\n        id: curr.currency_code,\r\n        cells: [\r\n          curr.currency_code,\r\n          curr.description,\r\n          curr.symbol,\r\n          curr.ratio,\r\n          curr.is_main ? \"Main\" : \"\",\r\n        ],\r\n      }\r\n    })\r\n\r\n    return {\r\n      heads: headers,\r\n      rows,\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ScreenContainer isDataLoaded={!isLoading && !error}>\r\n      {isLoading && <Loading text=\"Loading Schema..\" />}\r\n      {error && <ErrorComponent text={error ?? \"Something went wrong\"} />}\r\n      {!isLoading && !error && currencies.length > 0 && (\r\n        <div\r\n          style={{\r\n            display: \"grid\",\r\n            gridTemplateColumns: \"3fr 1fr\",\r\n            height: \"100%\",\r\n            gap: \"1rem\",\r\n          }}\r\n        >\r\n          <CustomPaginationTable\r\n            table={getTableState()}\r\n            selectedRowId={selectedCurrency?.currency_code ?? undefined}\r\n            onRowClick={(id) => {\r\n              const newSelection = currencies.find(\r\n                (i) => i.currency_code === id\r\n              )\r\n              if (newSelection && !newSelection.is_main) {\r\n                setSelectedCurrencyCb(newSelection)\r\n              }\r\n            }}\r\n            cursor=\"pointer\"\r\n          />\r\n          <NewCurrencyForm />\r\n        </div>\r\n      )}\r\n    </ScreenContainer>\r\n  )\r\n}\r\n","import { domainName } from \"../constants/Config\"\r\n\r\nexport interface CriteriaValue {\r\n  criteria_value_id: number\r\n  criteria_id: number\r\n  description: string\r\n}\r\n\r\nexport interface DropdownInitResponse {\r\n  payment_modes: CriteriaValue[]\r\n  payment_terms: CriteriaValue[]\r\n  positions: CriteriaValue[]\r\n  positions_id: number\r\n  payment_modes_id: number\r\n  payment_terms_id: number\r\n}\r\n\r\nexport const initDropdownUrl = domainName + \"/api/settings/init\"\r\n\r\nexport interface NewCriteriaValueRequestBody {\r\n  criteria_id: number\r\n  description: string\r\n}\r\n\r\nexport enum CriteriaValueType {\r\n  Client,\r\n  User,\r\n}\r\n\r\nexport const newCriteriavalueUrl = (type: CriteriaValueType) => {\r\n  let variable = \"\"\r\n  if (type === CriteriaValueType.Client) {\r\n    variable = \"client\"\r\n  } else {\r\n    variable = \"user\"\r\n  }\r\n\r\n  return domainName + `/api/settings/${variable}/criteria/new`\r\n}\r\n\r\nexport const deleteCriteriavalueUrl = (\r\n  id: number | string,\r\n  type: CriteriaValueType\r\n) => {\r\n  let variable = \"\"\r\n  if (type === CriteriaValueType.Client) {\r\n    variable = \"client\"\r\n  } else {\r\n    variable = \"user\"\r\n  }\r\n\r\n  return domainName + `/api/settings/${variable}/criteria/${id}`\r\n}\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\nimport { api, HttpMethods } from \"../api/ApiControllers\"\r\nimport {\r\n  CriteriaValue,\r\n  CriteriaValueType,\r\n  deleteCriteriavalueUrl,\r\n  DropdownInitResponse,\r\n  initDropdownUrl,\r\n  NewCriteriaValueRequestBody,\r\n  newCriteriavalueUrl,\r\n} from \"../api/DropdownApi\"\r\nimport { AuthContext } from \"./AuthContext\"\r\n\r\nexport interface DropdownContextState {\r\n  paymentModes: CriteriaValue[] | null\r\n  paymentTerms: CriteriaValue[] | null\r\n  positions: CriteriaValue[] | null\r\n\r\n  // positions\r\n  positionsId: number | null\r\n  paymentModesId: number | null\r\n  paymentTermsId: number | null\r\n\r\n  isLoading: boolean\r\n  error: string | null\r\n\r\n  // callbacks\r\n  newCriteriaValue(\r\n    value: NewCriteriaValueRequestBody,\r\n    criteriaType: CriteriaValueType\r\n  ): Promise<void>\r\n\r\n  deleteCriteriaValue(\r\n    id: number,\r\n    criteriaType: CriteriaValueType\r\n  ): Promise<void>\r\n}\r\n\r\nexport const DropdownContext = createContext<DropdownContextState | null>(null)\r\n\r\nexport default function DropdownContextProvider(props: {\r\n  children: JSX.Element\r\n}) {\r\n  const { user } = useContext(AuthContext)!\r\n\r\n  const [paymentModes, setPaymentModes] = useState<CriteriaValue[] | null>(null)\r\n  const [paymentTerms, setPaymentTerms] = useState<CriteriaValue[] | null>(null)\r\n  const [positions, setPositions] = useState<CriteriaValue[] | null>(null)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const [positionsId, setpPositionsId] = useState<number | null>(null)\r\n  const [paymentModesId, setPaymentModesId] = useState<number | null>(null)\r\n  const [paymentTermsId, setPaymentTermsId] = useState<number | null>(null)\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    api<DropdownInitResponse>(\r\n      initDropdownUrl,\r\n      HttpMethods.Get,\r\n      null,\r\n      { Authorization: `Bearer ${user?.tokenStr}` },\r\n      \"Something went wrong\",\r\n      true\r\n    )\r\n      .then((data) => {\r\n        setPositions(data!.positions)\r\n        setPaymentModes(data!.payment_modes)\r\n        setPaymentTerms(data!.payment_terms)\r\n        setpPositionsId(data!.positions_id)\r\n        setPaymentModesId(data!.payment_modes_id)\r\n        setPaymentTermsId(data!.payment_terms_id)\r\n        setIsLoading(false)\r\n      })\r\n      .catch((e) => {\r\n        setError(e.message)\r\n        setIsLoading(false)\r\n      })\r\n  }, [])\r\n\r\n  const newCriteriaValue = async (\r\n    value: NewCriteriaValueRequestBody,\r\n    criteriaType: CriteriaValueType\r\n  ) => {\r\n    try {\r\n      setIsLoading(true)\r\n      const data = await api<DropdownInitResponse>(\r\n        newCriteriavalueUrl(criteriaType),\r\n        HttpMethods.Post,\r\n        value,\r\n        { Authorization: `Bearer ${user?.tokenStr}` },\r\n        \"Something went wrong\",\r\n        true\r\n      )\r\n      setPositions(data!.positions)\r\n      setPaymentModes(data!.payment_modes)\r\n      setPaymentTerms(data!.payment_terms)\r\n      setpPositionsId(data!.positions_id)\r\n      setPaymentModesId(data!.payment_modes_id)\r\n      setPaymentTermsId(data!.payment_terms_id)\r\n      setIsLoading(false)\r\n    } catch (e: any) {\r\n      setError(e.message)\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const deleteCriteriaValue = async (\r\n    id: number,\r\n    criteriaType: CriteriaValueType\r\n  ) => {\r\n    try {\r\n      setIsLoading(true)\r\n      const data = await api<DropdownInitResponse>(\r\n        deleteCriteriavalueUrl(id, criteriaType),\r\n        HttpMethods.Delete,\r\n        value,\r\n        { Authorization: `Bearer ${user?.tokenStr}` },\r\n        \"Something went wrong\",\r\n        true\r\n      )\r\n      setPositions(data!.positions)\r\n      setPaymentModes(data!.payment_modes)\r\n      setPaymentTerms(data!.payment_terms)\r\n      setpPositionsId(data!.positions_id)\r\n      setPaymentModesId(data!.payment_modes_id)\r\n      setPaymentTermsId(data!.payment_terms_id)\r\n      setIsLoading(false)\r\n    } catch (e: any) {\r\n      setError(e.message)\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const value: DropdownContextState = {\r\n    paymentModes,\r\n    paymentTerms,\r\n    positions,\r\n    isLoading,\r\n    error,\r\n    newCriteriaValue,\r\n    deleteCriteriaValue,\r\n    paymentModesId,\r\n    paymentTermsId,\r\n    positionsId,\r\n  }\r\n\r\n  return (\r\n    <DropdownContext.Provider value={value}>\r\n      {props.children}\r\n    </DropdownContext.Provider>\r\n  )\r\n}\r\n","import { IconButton, Paper, TextField, Typography } from \"@mui/material\"\r\nimport { blue, green, red } from \"@mui/material/colors\"\r\nimport { styled } from \"@mui/material/styles\"\r\nimport { CriteriaValue, CriteriaValueType } from \"../api/DropdownApi\"\r\nimport CustomPaginationTable, {\r\n  CustomPaginationTableRow,\r\n  CustomPaginationTableState,\r\n} from \"./reusable/CustomPaginationTable\"\r\nimport DeleteForeverRoundedIcon from \"@mui/icons-material/DeleteForeverRounded\"\r\nimport CheckCircleRoundedIcon from \"@mui/icons-material/CheckCircleRounded\"\r\nimport { useContext, useState } from \"react\"\r\nimport { DropdownContext } from \"../contexts/DropdownContext\"\r\nimport ConfirmationDialog from \"./dialogs/ConfirmationDialog\"\r\n\r\nexport interface DropdownFormTemplateProps {\r\n  type: CriteriaValueType\r\n  values: CriteriaValue[]\r\n  title: string\r\n  criteriaId: number\r\n}\r\n\r\nconst Container = styled(\"div\")(() => {\r\n  return {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    overflowY: \"hidden\",\r\n  }\r\n})\r\n\r\nconst FormRow = styled(Paper)(({ theme }) => {\r\n  return {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginRight: theme.spacing(1),\r\n    justifyContent: \"space-around\",\r\n    marginTop: theme.spacing(2),\r\n    padding: theme.spacing(2),\r\n    backgroundColor:\r\n      theme.palette.mode == \"light\"\r\n        ? blue[100]\r\n        : theme.palette.background.paper,\r\n    flex: 1,\r\n  }\r\n})\r\n\r\nexport default function DropdownFormTemplate(props: DropdownFormTemplateProps) {\r\n  const { newCriteriaValue, deleteCriteriaValue } = useContext(DropdownContext)!\r\n\r\n  const [newValue, setNewValue] = useState(\"\")\r\n  const [valueErr, setValueErr] = useState(false)\r\n  const [dialogOpen, setDialogOpen] = useState(false)\r\n  const [selectToDelete, setSelectedToDelete] = useState<CriteriaValue | null>(\r\n    null\r\n  )\r\n\r\n  const submitNewValue = async () => {\r\n    if (validate()) {\r\n      await newCriteriaValue(\r\n        { criteria_id: props.criteriaId, description: newValue },\r\n        props.type\r\n      )\r\n      setNewValue(\"\")\r\n      setValueErr(false)\r\n    }\r\n  }\r\n\r\n  function validate(): boolean {\r\n    let valid = true\r\n\r\n    if (newValue.length < 1) {\r\n      valid = false\r\n      setValueErr(true)\r\n    } else {\r\n      setValueErr(false)\r\n    }\r\n\r\n    return valid\r\n  }\r\n\r\n  const deleteCriteriaVal = async () => {\r\n    if (selectToDelete) {\r\n      await deleteCriteriaValue(selectToDelete.criteria_value_id, props.type)\r\n    }\r\n  }\r\n\r\n  function getTableState(): CustomPaginationTableState {\r\n    const headers: string[] = [\"Description\", \"Action\"]\r\n    const rows: CustomPaginationTableRow[] = props.values.map((value) => {\r\n      return {\r\n        id: value.criteria_value_id,\r\n        cells: [\r\n          value.description,\r\n\r\n          <IconButton\r\n            onClick={() => {\r\n              setSelectedToDelete(value)\r\n              setDialogOpen(true)\r\n            }}\r\n          >\r\n            <DeleteForeverRoundedIcon\r\n              style={{\r\n                color: red[800],\r\n              }}\r\n            />\r\n          </IconButton>,\r\n        ],\r\n      }\r\n    })\r\n\r\n    return {\r\n      heads: headers,\r\n      rows,\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Typography gutterBottom variant=\"h5\">\r\n        {props.title}\r\n      </Typography>\r\n      <div style={{ flex: \"8\", flexGrow: 8, overflowY: \"scroll\" }}>\r\n        <CustomPaginationTable\r\n          table={getTableState()}\r\n          onRowClick={() => {}}\r\n          cursor=\"default\"\r\n        />\r\n      </div>\r\n      <FormRow>\r\n        <Typography variant=\"h5\">New Value:</Typography>\r\n        <TextField\r\n          label=\"Description\"\r\n          value={newValue}\r\n          onChange={(e) => setNewValue(e.target.value)}\r\n          error={valueErr}\r\n        />\r\n        <IconButton onClick={async () => await submitNewValue()}>\r\n          <CheckCircleRoundedIcon\r\n            style={{\r\n              color: green[800],\r\n            }}\r\n          />\r\n        </IconButton>\r\n      </FormRow>\r\n      <ConfirmationDialog\r\n        negativeText=\"Cancel\"\r\n        positiveText=\"Delete\"\r\n        positive={async () => await deleteCriteriaVal()}\r\n        title={`Delete ${selectToDelete?.description}?`}\r\n        content={`Are you sure you want to delete ${selectToDelete?.description}?`}\r\n        dismiss={() => setDialogOpen(false)}\r\n        isOpen={dialogOpen}\r\n      />\r\n    </Container>\r\n  )\r\n}\r\n","import { grey } from \"@mui/material/colors\"\r\nimport { useContext } from \"react\"\r\nimport ErrorComponent from \"../components/ErrorComponent\"\r\nimport Loading from \"../components/Loading\"\r\nimport { ScreenContainer } from \"../components/StyledComponents\"\r\nimport { DropdownContext } from \"../contexts/DropdownContext\"\r\nimport { styled } from \"@mui/material/styles\"\r\nimport DropdownFormTemplate from \"../components/DropdownFormTemplate\"\r\nimport { CriteriaValueType } from \"../api/DropdownApi\"\r\n\r\nconst GridContainer = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"1fr 1fr 1fr\",\r\n    height: \"100%\",\r\n    gap: theme.spacing(1),\r\n    overflowY: \"hidden\",\r\n  }\r\n})\r\n\r\nexport default function DropdownValuesScreen() {\r\n  const {\r\n    isLoading,\r\n    error,\r\n    paymentModes,\r\n    paymentTerms,\r\n    positions,\r\n    positionsId,\r\n    paymentTermsId,\r\n    paymentModesId,\r\n  } = useContext(DropdownContext)!\r\n\r\n  return (\r\n    <ScreenContainer isDataLoaded={!isLoading && !error}>\r\n      {isLoading && <Loading text=\"Loading Schema..\" />}\r\n      {error && <ErrorComponent text={error ?? \"Something went wrong\"} />}\r\n      {!isLoading && paymentModes && paymentTerms && positions && (\r\n        <GridContainer>\r\n          <DropdownFormTemplate\r\n            title=\"Payment Modes\"\r\n            type={CriteriaValueType.Client}\r\n            values={paymentModes}\r\n            criteriaId={paymentModesId!}\r\n          />\r\n          <DropdownFormTemplate\r\n            title=\"Payment Terms\"\r\n            type={CriteriaValueType.Client}\r\n            values={paymentTerms}\r\n            criteriaId={paymentTermsId!}\r\n          />\r\n          <DropdownFormTemplate\r\n            title=\"Positions\"\r\n            type={CriteriaValueType.User}\r\n            values={positions}\r\n            criteriaId={positionsId!}\r\n          />\r\n        </GridContainer>\r\n      )}\r\n    </ScreenContainer>\r\n  )\r\n}\r\n","import { domainName } from \"../constants/Config\"\r\n\r\nexport interface RequestsScreenInit {\r\n  start_requests: RescheduleRequest[]\r\n  end_requests: RescheduleRequest[]\r\n}\r\n\r\nexport interface RescheduleRequest {\r\n  id: number\r\n  task_name: string\r\n  task_id: number\r\n  is_confirmed: boolean\r\n  requested_date: number\r\n  user_code: string\r\n  project_id: number\r\n  date_added: number\r\n  last_edited: number\r\n  type?: \"start\" | \"end\"\r\n}\r\n\r\nexport const getAllRequestsUrl = (id: number | string) =>\r\n  domainName + `/api/project/${id}/requests`\r\n","import { styled } from \"@mui/material/styles\"\r\nimport { blue, green, grey, orange, red } from \"@mui/material/colors\"\r\nimport { useContext } from \"react\"\r\nimport { HttpMethods } from \"../api/ApiControllers\"\r\nimport {\r\n  getAllRequestsUrl,\r\n  RequestsScreenInit,\r\n  RescheduleRequest,\r\n} from \"../api/RequestsScreenApi\"\r\nimport ErrorComponent from \"../components/ErrorComponent\"\r\nimport Loading from \"../components/Loading\"\r\nimport CustomPaginationTable, {\r\n  CustomPaginationTableRow,\r\n  CustomPaginationTableState,\r\n} from \"../components/reusable/CustomPaginationTable\"\r\nimport { ScreenContainer } from \"../components/StyledComponents\"\r\nimport { AuthContext } from \"../contexts/AuthContext\"\r\nimport useFetch from \"../hooks/useFetch\"\r\nimport WatchLaterRoundedIcon from \"@mui/icons-material/WatchLaterRounded\"\r\nimport CheckCircleRoundedIcon from \"@mui/icons-material/CheckCircleRounded\"\r\nimport CancelRoundedIcon from \"@mui/icons-material/CancelRounded\"\r\nimport { getDayFromDate } from \"../utils/formatters\"\r\nimport InsertLinkRoundedIcon from \"@mui/icons-material/InsertLinkRounded\"\r\nimport { IconButton } from \"@mui/material\"\r\nimport { useNavigate, useParams } from \"react-router-dom\"\r\n\r\nconst GridContainer = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    display: \"grid\",\r\n    gridTemplateRows: \"1fr 1fr\",\r\n    height: \"100%\",\r\n    gap: theme.spacing(1),\r\n  }\r\n})\r\n\r\nexport default function RescheduleRequestsScreen() {\r\n  const { id } = useParams()\r\n  const { user } = useContext(AuthContext)!\r\n  const navigate = useNavigate()\r\n  const { data, isLoading, error } = useFetch<RequestsScreenInit>(\r\n    getAllRequestsUrl(id!),\r\n    HttpMethods.Get,\r\n    null,\r\n    { Authorization: `Bearer ${user?.tokenStr}` }\r\n  )\r\n\r\n  type NewType = CustomPaginationTableState\r\n\r\n  function getTableState(state: RescheduleRequest[]): NewType {\r\n    const headers: string[] = [\r\n      \"Task Name\",\r\n      \"Requested By\",\r\n      \"Requested Date\",\r\n      \"Requested On\",\r\n      \"Date Added\",\r\n      \"Last Edited\",\r\n      \"Status\",\r\n      \"Actions\",\r\n    ]\r\n    const rows: CustomPaginationTableRow[] = state!.map((value) => {\r\n      return {\r\n        id: value.id,\r\n        cells: [\r\n          value.task_name,\r\n          value.user_code,\r\n          getDayFromDate(new Date(value.requested_date)),\r\n          value.type === \"start\" ? \"Start Date\" : \"End Date\",\r\n          getDayFromDate(new Date(value.date_added)),\r\n          getDayFromDate(new Date(value.last_edited)),\r\n          value.is_confirmed === undefined ? (\r\n            <WatchLaterRoundedIcon style={{ color: orange[700] }} />\r\n          ) : value.is_confirmed === true ? (\r\n            <CheckCircleRoundedIcon style={{ color: green[700] }} />\r\n          ) : (\r\n            <CancelRoundedIcon style={{ color: red[700] }} />\r\n          ),\r\n          <IconButton\r\n            disabled={value.is_confirmed || value.is_confirmed === false}\r\n            onClick={() =>\r\n              navigate(\r\n                `/projects/${value.project_id}/tasks/edit?req=${value.task_id}&${value.type}=${value.id}`\r\n              )\r\n            }\r\n          >\r\n            <InsertLinkRoundedIcon\r\n              style={{\r\n                color:\r\n                  value.is_confirmed || value.is_confirmed === false\r\n                    ? grey[500]\r\n                    : blue[700],\r\n              }}\r\n            />\r\n          </IconButton>,\r\n        ],\r\n      }\r\n    })\r\n\r\n    return {\r\n      heads: headers,\r\n      rows,\r\n    }\r\n  }\r\n\r\n  function getAllRequests(): RescheduleRequest[] {\r\n    const req: RescheduleRequest[] = []\r\n\r\n    if (data?.start_requests) {\r\n      const alt = data.start_requests\r\n        .map((t) => {\r\n          t.type = \"start\"\r\n          return t\r\n        })\r\n        .sort((a, b) => b.date_added - a.date_added)\r\n\r\n      req.push(...alt)\r\n    }\r\n\r\n    if (data?.end_requests) {\r\n      const alt = data.end_requests\r\n        .map((t) => {\r\n          t.type = \"end\"\r\n          return t\r\n        })\r\n        .sort((a, b) => b.date_added - a.date_added)\r\n\r\n      req.push(...alt)\r\n    }\r\n\r\n    return req\r\n  }\r\n\r\n  return (\r\n    <ScreenContainer isDataLoaded={!isLoading && !error}>\r\n      {isLoading && <Loading text=\"Loading Requests..\" />}\r\n      {error && <ErrorComponent text={error ?? \"Something went wrong\"} />}\r\n      {!isLoading && data && (\r\n        // <GridContainer>\r\n        <CustomPaginationTable\r\n          table={getTableState(getAllRequests())}\r\n          onRowClick={() => {}}\r\n          cursor=\"default\"\r\n        />\r\n      )}\r\n    </ScreenContainer>\r\n  )\r\n}\r\n","import { domainName } from \"../constants/Config\"\r\nimport { TaskStatusInterface } from \"./ProjectApi\"\r\nimport { TimeUnit } from \"./TaskTemplateApi\"\r\n\r\nexport const getProjectPreviewInitUrl = (id: number | string) =>\r\n  domainName + `/api/project/${id}/preview`\r\n\r\nexport interface ProjectPreviewInit {\r\n  time_units: TimeUnit[]\r\n  task_status: TaskStatusInterface[]\r\n  tasks: AssignedTaskPreviewInterface\r\n  client_description?: string\r\n  project_title: string\r\n}\r\n\r\n// callbacks\r\nexport const getStartTaskUrl = (\r\n  projectId: number | string,\r\n  id: number | string\r\n) => domainName + `/api/project/${projectId}/preview/${id}/start`\r\nexport const getEndTaskUrl = (\r\n  projectId: number | string,\r\n  id: number | string\r\n) => domainName + `/api/project/${projectId}/preview/${id}/end`\r\nexport const updateCommentUrl = (\r\n  projectId: number | string,\r\n  id: number | string\r\n) => domainName + `/api/project/${projectId}/preview/${id}/comment`\r\nexport const updateProgressUrl = (\r\n  projectId: number | string,\r\n  id: number | string\r\n) => domainName + `/api/project/${projectId}/preview/${id}/progress`\r\n\r\nexport const rescheduleUrl = (\r\n  projectId: number | string,\r\n  id: number | string\r\n) => domainName + `/api/project/${projectId}/preview/${id}/reschedule`\r\n\r\nexport interface AssignedTaskPreviewInterface {\r\n  id: number\r\n  task_name: string\r\n  task_code?: string\r\n  estimated_time: number\r\n  time_unit_id: number\r\n  parent?: number\r\n  planned_start_date?: number\r\n  planned_end_date?: number\r\n  actual_start_date?: number\r\n  actual_end_date?: number\r\n  task_status_id: number\r\n  sort_order: number\r\n  task_progress: number\r\n  description?: string\r\n  comment?: string\r\n\r\n  // actions\r\n  can_start: boolean\r\n  can_reschedule: boolean\r\n  can_update_progress: boolean\r\n  is_owner: boolean\r\n\r\n  // new\r\n  assigned_to: string\r\n\r\n  predecessor_id?: number\r\n\r\n  children: AssignedTaskPreviewInterface[]\r\n}\r\n\r\nexport interface AssignedTaskPreviewPredInterface {\r\n  id: number\r\n  task_name: string\r\n  task_code?: string\r\n  estimated_time: number\r\n  time_unit_id: number\r\n  parent?: number\r\n  planned_start_date?: number\r\n  planned_end_date?: number\r\n  actual_start_date?: number\r\n  actual_end_date?: number\r\n  task_status_id: number\r\n  sort_order: number\r\n  task_progress: number\r\n  description?: string\r\n  comment?: string\r\n\r\n  // actions\r\n  can_start: boolean\r\n  can_reschedule: boolean\r\n  can_update_progress: boolean\r\n  is_owner: boolean\r\n\r\n  // new\r\n  assigned_to: string\r\n}\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport { api, HttpMethods } from \"../api/ApiControllers\"\r\nimport { checkIfFinishedProjectUrl } from \"../api/AssignedTasksApi\"\r\nimport { TaskStatusInterface } from \"../api/ProjectApi\"\r\nimport {\r\n  AssignedTaskPreviewInterface,\r\n  AssignedTaskPreviewPredInterface,\r\n  getEndTaskUrl,\r\n  getProjectPreviewInitUrl,\r\n  getStartTaskUrl,\r\n  ProjectPreviewInit,\r\n  rescheduleUrl,\r\n  updateCommentUrl,\r\n  updateProgressUrl,\r\n} from \"../api/ProjectPreviewApi\"\r\nimport { TimeUnit } from \"../api/TaskTemplateApi\"\r\nimport { AuthContext } from \"./AuthContext\"\r\n\r\nexport interface ProjectPreviewState {\r\n  isLoading: boolean\r\n  error: string | null\r\n  timeUnits: TimeUnit[] | null\r\n  taskStatus: TaskStatusInterface[] | null\r\n  taskTree: AssignedTaskPreviewInterface | null\r\n  clientDescription: string | undefined\r\n  projectTitle: string | null\r\n  getPredecessor(id: number | string): AssignedTaskPreviewPredInterface | null\r\n  startTask: (id: number | string) => Promise<void>\r\n  endTask: (id: number | string) => Promise<void>\r\n  updateComment: (id: number | string, comment: string) => Promise<void>\r\n  updateProgress: (id: number | string, progress: number) => Promise<void>\r\n  rescheduleTask: (\r\n    id: number | string,\r\n    start: number | null,\r\n    end: number | null\r\n  ) => Promise<void>\r\n}\r\n\r\nexport const ProjectPreviewContext = createContext<ProjectPreviewState | null>(\r\n  null\r\n)\r\n\r\nexport default function ProjectPreviewContextProvider(props: {\r\n  children: JSX.Element\r\n}) {\r\n  const { id: projectId } = useParams()\r\n  const { user } = useContext(AuthContext)!\r\n\r\n  // state\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const [timeUnits, setTimeUnits] = useState<TimeUnit[] | null>(null)\r\n  const [taskStatus, setTaskStatus] = useState<TaskStatusInterface[] | null>(\r\n    null\r\n  )\r\n  const [clientDescription, setClientDescription] = useState<\r\n    string | undefined\r\n  >()\r\n  const [projectTitle, setProjectTitle] = useState<string | null>(null)\r\n  const [taskTree, setTaskTree] = useState<AssignedTaskPreviewInterface | null>(\r\n    null\r\n  )\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    api<ProjectPreviewInit>(\r\n      getProjectPreviewInitUrl(projectId!),\r\n      HttpMethods.Get,\r\n      null,\r\n      { Authorization: `Bearer ${user?.tokenStr}` },\r\n      \"Something went wrong\",\r\n      true\r\n    )\r\n      .then((data) => {\r\n        setError(null)\r\n        setTimeUnits(data!.time_units)\r\n        setTaskStatus(data!.task_status)\r\n        setClientDescription(data!.client_description)\r\n        setProjectTitle(data!.project_title)\r\n        setTaskTree(data!.tasks)\r\n        setIsLoading(false)\r\n      })\r\n      .catch((error: any) => {\r\n        setError(error.message)\r\n        setIsLoading(false)\r\n      })\r\n  }, [])\r\n\r\n  function getPredecessor(id: number | string) {\r\n    const buildRecursively = (\r\n      task: AssignedTaskPreviewInterface,\r\n      tasks: AssignedTaskPreviewPredInterface[]\r\n    ) => {\r\n      tasks.push(task)\r\n      task.children.forEach((t) => buildRecursively(t, tasks))\r\n    }\r\n\r\n    const list: AssignedTaskPreviewPredInterface[] = []\r\n    taskTree?.children.forEach((element) => {\r\n      buildRecursively(element, list)\r\n    })\r\n\r\n    return list.find((i) => i.id === id) ?? null\r\n  }\r\n\r\n  // callback\r\n  async function apiCallback(url: string, method: HttpMethods, body: any) {\r\n    try {\r\n      setIsLoading(true)\r\n      const data = await api<ProjectPreviewInit>(\r\n        url,\r\n        method,\r\n        body,\r\n        { Authorization: `Bearer ${user?.tokenStr}` },\r\n        \"Something went wrong\",\r\n        true\r\n      )\r\n\r\n      setError(null)\r\n      setTimeUnits(data!.time_units)\r\n      setTaskStatus(data!.task_status)\r\n      setClientDescription(data!.client_description)\r\n      setProjectTitle(data!.project_title)\r\n      setTaskTree(data!.tasks)\r\n      setIsLoading(false)\r\n    } catch (e: any) {\r\n      setIsLoading(false)\r\n      setError(e.message)\r\n    }\r\n  }\r\n\r\n  // update callbacks\r\n  const startTask = async (id: number | string) => {\r\n    await apiCallback(getStartTaskUrl(projectId!, id), HttpMethods.Get, null)\r\n  }\r\n  const endTask = async (id: number | string) => {\r\n    await apiCallback(getEndTaskUrl(projectId!, id), HttpMethods.Get, null)\r\n  }\r\n  const updateComment = async (id: number | string, comment: string) => {\r\n    await apiCallback(updateCommentUrl(projectId!, id), HttpMethods.Post, {\r\n      comment,\r\n    })\r\n  }\r\n  const updateProgress = async (id: number | string, progress: number) => {\r\n    await apiCallback(updateProgressUrl(projectId!, id), HttpMethods.Post, {\r\n      progress,\r\n    })\r\n  \r\n  }\r\n  const rescheduleTask = async (\r\n    id: number | string,\r\n    start: number | null,\r\n    end: number | null\r\n  ) => {\r\n    await apiCallback(rescheduleUrl(projectId!, id), HttpMethods.Post, {\r\n      request_start: start,\r\n      request_end: end,\r\n    })\r\n  }\r\n\r\n  const value: ProjectPreviewState = {\r\n    isLoading,\r\n    error,\r\n    timeUnits,\r\n    taskStatus,\r\n    taskTree,\r\n    clientDescription,\r\n    projectTitle,\r\n    getPredecessor,\r\n    startTask,\r\n    endTask,\r\n    updateComment,\r\n    updateProgress,\r\n    rescheduleTask,\r\n  }\r\n\r\n  return (\r\n    <ProjectPreviewContext.Provider value={value}>\r\n      {props.children}\r\n    </ProjectPreviewContext.Provider>\r\n  )\r\n}\r\n","import { styled } from \"@mui/material/styles\"\r\nimport Typography from \"@mui/material/Typography/Typography\"\r\n\r\nexport interface InlinePillProps {\r\n  title: string\r\n  value: string\r\n}\r\n\r\nconst MainContainer = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-start\",\r\n    margin: theme.spacing(1),\r\n    justifyContent: \"flexs-start\",\r\n    flex: \"1\",\r\n  }\r\n})\r\n\r\nexport default function InlinePill(props: InlinePillProps) {\r\n  return (\r\n    <MainContainer style={{ cursor: \"pointer\", userSelect: \"none\" }}>\r\n      <Typography\r\n        variant=\"caption\"\r\n        style={{ cursor: \"pointer\", userSelect: \"none\" }}\r\n      >\r\n        {props.title}\r\n      </Typography>\r\n      <Typography\r\n        variant=\"body1\"\r\n        style={{ cursor: \"pointer\", userSelect: \"none\" }}\r\n      >\r\n        {props.value}\r\n      </Typography>\r\n    </MainContainer>\r\n  )\r\n}\r\n","import { styled } from \"@mui/material/styles\"\r\nimport { useContext, useState } from \"react\"\r\nimport { Divider, IconButton, useTheme } from \"@mui/material\"\r\nimport { AssignedTaskPreviewInterface } from \"../api/ProjectPreviewApi\"\r\nimport { ProjectPreviewContext } from \"../contexts/ProjectPreviewContext\"\r\nimport { getDayFromDate } from \"../utils/formatters\"\r\nimport InlinePill from \"./InlinePill\"\r\nimport CommentRoundedIcon from \"@mui/icons-material/CommentRounded\"\r\nimport PlayArrowRoundedIcon from \"@mui/icons-material/PlayArrowRounded\"\r\nimport StopRoundedIcon from \"@mui/icons-material/StopRounded\"\r\nimport InsertInvitationRoundedIcon from \"@mui/icons-material/InsertInvitationRounded\"\r\nimport {\r\n  grey,\r\n  green,\r\n  red,\r\n  purple,\r\n  orange,\r\n  cyan,\r\n  deepOrange,\r\n} from \"@mui/material/colors\"\r\nimport { isTaskInPending, isTaskCompleteOrPending } from \"../utils/projectUtils\"\r\nimport AddCommentDialog from \"./dialogs/AddCommentDialog\"\r\nimport AddPRogressDialog from \"./dialogs/AddProgressDialog\"\r\nimport ScheduleTaskDialog from \"./dialogs/ScheduleTaskDialog\"\r\nimport PercentRoundedIcon from \"@mui/icons-material/PercentRounded\"\r\nimport { StyledVerticalDivider } from \"./StyledComponents\"\r\nimport { getDisabledIconButton } from \"../contexts/ThemeContext\"\r\n\r\nconst StyledRow = styled(\"div\")<{ indent: number }>(({ theme, indent }) => {\r\n  return {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    width: \"100%\",\r\n    paddingLeft: theme.spacing(3 * indent),\r\n  }\r\n})\r\n\r\nconst MainContainer = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    width: \"100%\",\r\n  }\r\n})\r\n\r\nconst ButtonRow = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    paddingRight: theme.spacing(4),\r\n    flex: 1,\r\n  }\r\n})\r\n\r\nconst ColumnContainer = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-end\",\r\n  }\r\n})\r\n\r\nexport interface ProjectPreviewTaskComponentProps {\r\n  task: AssignedTaskPreviewInterface\r\n  parent: AssignedTaskPreviewInterface\r\n  indent: number\r\n  isRoot: boolean\r\n}\r\n\r\nexport default function ProjectPreviewTaskComponent(\r\n  props: ProjectPreviewTaskComponentProps\r\n) {\r\n  const theme = useTheme()\r\n  const {\r\n    timeUnits,\r\n    getPredecessor,\r\n    taskStatus,\r\n    startTask,\r\n    endTask,\r\n    //hon\r\n    updateProgress,\r\n    updateComment,\r\n    rescheduleTask,\r\n  } = useContext(ProjectPreviewContext)!\r\n\r\n  // dialog\r\n  // comments func\r\n  const [commentOpen, setCommentOpen] = useState(false)\r\n\r\n  // progress\r\n  const [progressOpen, setProgressOpen] = useState(false)\r\n\r\n  // schedule\r\n  const [scheduleOpen, setScheduleOpen] = useState(false)\r\n  if (props.task.estimated_time === 23) {\r\n    console.log(props.task)\r\n  }\r\n\r\n  return (\r\n    <MainContainer>\r\n      <ColumnContainer>\r\n        <StyledRow indent={props.indent}>\r\n          <InlinePill value={props.task.task_code ?? \"N/A\"} title=\"Task Code\" />\r\n          <InlinePill value={props.task.task_name} title=\"Task Name\" />\r\n          <InlinePill\r\n            value={props.task.assigned_to ?? \"N/A\"}\r\n            title=\"Assigned To\"\r\n          />\r\n          <InlinePill\r\n            value={props.task.estimated_time.toString()}\r\n            title=\"Estimated Time\"\r\n          />\r\n          <InlinePill\r\n            value={\r\n              timeUnits?.find((i) => i.id === props.task.time_unit_id)\r\n                ?.description ?? \"\"\r\n            }\r\n            title=\"Time Unit\"\r\n          />\r\n          <InlinePill\r\n            value={\r\n              props.task.predecessor_id\r\n                ? getPredecessor(props.task.predecessor_id)?.task_name ?? \"N/A\"\r\n                : \"N/A\"\r\n            }\r\n            title=\"Predecessor\"\r\n          />\r\n          <InlinePill\r\n            value={getDayFromDate(new Date(props.task.planned_start_date!))}\r\n            title=\"Planned Start\"\r\n          />\r\n          <InlinePill\r\n            value={getDayFromDate(new Date(props.task.planned_end_date!))}\r\n            title=\"Planned End\"\r\n          />\r\n          <InlinePill\r\n            value={props.task.task_progress.toString() + \"%\"}\r\n            title=\"Progress\"\r\n          />\r\n\r\n          <ButtonRow>\r\n            {props.task.is_owner && props.task.children.length === 0 && (\r\n              <>\r\n                <StyledVerticalDivider flexItem orientation=\"vertical\" />\r\n                <IconButton\r\n                  onClick={async () => await startTask(props.task.id)}\r\n                  disabled={\r\n                    !isTaskInPending(props.task, taskStatus!) ||\r\n                    !props.task.can_start ||\r\n                    props.task.children.length > 0\r\n                  }\r\n                >\r\n                  <PlayArrowRoundedIcon\r\n                    style={{\r\n                      color:\r\n                        !isTaskInPending(props.task, taskStatus!) ||\r\n                        !props.task.can_start ||\r\n                        props.task.children.length > 0\r\n                          ? getDisabledIconButton(theme.palette.mode)\r\n                          : green[700],\r\n                    }}\r\n                  />\r\n                </IconButton>\r\n                <IconButton\r\n                  onClick={async () => await endTask(props.task.id)}\r\n                  disabled={\r\n                    isTaskCompleteOrPending(props.task, taskStatus!) ||\r\n                    props.task.children.length > 0\r\n                  }\r\n                >\r\n                  <StopRoundedIcon\r\n                    style={{\r\n                      color:\r\n                        isTaskCompleteOrPending(props.task, taskStatus!) ||\r\n                        props.task.children.length > 0\r\n                          ? getDisabledIconButton(theme.palette.mode)\r\n                          : red[700],\r\n                    }}\r\n                  />\r\n                </IconButton>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    setScheduleOpen(true)\r\n                  }}\r\n                  disabled={!props.task.can_reschedule}\r\n                >\r\n                  <InsertInvitationRoundedIcon\r\n                    style={{\r\n                      color: props.task.can_reschedule\r\n                        ? cyan[800]\r\n                        : getDisabledIconButton(theme.palette.mode),\r\n                    }}\r\n                  />\r\n                </IconButton>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    setCommentOpen(true)\r\n                  }}\r\n                >\r\n                  <CommentRoundedIcon style={{ color: orange[700] }} />\r\n                </IconButton>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    setProgressOpen(true)\r\n                  }}\r\n                  disabled={!props.task.can_update_progress || getPredecessor(props.task.predecessor_id!)?.task_progress != 100}\r\n                >\r\n                  <PercentRoundedIcon\r\n                    style={{\r\n                      color: props.task.can_update_progress\r\n                        ? deepOrange[800]\r\n                        : getDisabledIconButton(theme.palette.mode),\r\n                    }}\r\n                  />\r\n                </IconButton>\r\n              </>\r\n            )}\r\n          </ButtonRow>\r\n        </StyledRow>\r\n      </ColumnContainer>\r\n      <Divider orientation=\"horizontal\" />\r\n      {props.task.children.map((item) => {\r\n        return (\r\n          <ProjectPreviewTaskComponent\r\n            isRoot={false}\r\n            indent={props.indent + 1}\r\n            key={item.id}\r\n            task={item}\r\n            parent={props.task}\r\n          />\r\n        )\r\n      })}\r\n\r\n      <AddCommentDialog\r\n        isOpen={commentOpen}\r\n        onClose={() => setCommentOpen(false)}\r\n        title=\"Comment\"\r\n        comment={props.task.comment ?? \"\"}\r\n        submit={async (value) => {\r\n          setCommentOpen(false)\r\n          await updateComment(props.task.id, value)\r\n        }}\r\n      />\r\n      <AddPRogressDialog\r\n        isOpen={progressOpen}\r\n        onClose={() => setProgressOpen(false)}\r\n        title=\"Progress\"\r\n        progress={props.task.task_progress ?? 0}\r\n        submit={async (value) => {\r\n          setProgressOpen(false)\r\n          await updateProgress(props.task.id, value)\r\n        }}\r\n      />\r\n      <ScheduleTaskDialog\r\n        isOpen={scheduleOpen}\r\n        onClose={() => setScheduleOpen(false)}\r\n        title=\"Reschedule Task\"\r\n        start={props.task.planned_start_date ?? new Date().getTime()}\r\n        end={props.task.planned_end_date ?? new Date().getTime()}\r\n        submit={async (start, end) => {\r\n          setScheduleOpen(false)\r\n          await rescheduleTask(props.task.id, start, end)\r\n        }}\r\n        isStartEditable={props.task.actual_start_date === undefined}\r\n        isEndEditable={props.task.actual_end_date === undefined}\r\n      />\r\n    </MainContainer>\r\n  )\r\n}\r\n","import { green, grey, purple } from \"@mui/material/colors\"\r\nimport { useContext } from \"react\"\r\nimport ErrorComponent from \"../components/ErrorComponent\"\r\nimport Loading from \"../components/Loading\"\r\nimport {\r\n  ScreenContainer,\r\n  StyledVerticalDivider,\r\n} from \"../components/StyledComponents\"\r\nimport { ProjectPreviewContext } from \"../contexts/ProjectPreviewContext\"\r\nimport { styled } from \"@mui/material/styles\"\r\nimport TextPillComponent from \"../components/reusable/PillComponent\"\r\nimport ProjectPreviewTaskComponent from \"../components/ProjectPreviewTaskComponent\"\r\nimport { Paper, Typography, useTheme } from \"@mui/material\"\r\n\r\nconst HeaderContainer = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  }\r\n})\r\n\r\nconst MainContainer = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n    flexDirection: \"column\",\r\n    overflowY: \"hidden\",\r\n  }\r\n})\r\n\r\nconst MainGridContainer = styled(Paper)(({ theme }) => {\r\n  return {\r\n    backgroundColor:\r\n      theme.palette.mode === \"dark\"\r\n        ? theme.palette.background.default\r\n        : grey[300],\r\n    overflowY: \"hidden\",\r\n    height: \"100%\",\r\n    paddingBottom: theme.spacing(12),\r\n  }\r\n})\r\nconst GridContainer = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    backgroundColor:\r\n      theme.palette.mode === \"dark\"\r\n        ? theme.palette.background.paper\r\n        : grey[200],\r\n    overflowY: \"scroll\",\r\n    height: \"100%\",\r\n  }\r\n})\r\n\r\nexport default function ProjectPreviewWithAssignedTasks() {\r\n  const {\r\n    taskTree,\r\n    isLoading,\r\n    error,\r\n    timeUnits,\r\n    clientDescription,\r\n    taskStatus,\r\n    projectTitle,\r\n  } = useContext(ProjectPreviewContext)!\r\n\r\n  const theme = useTheme()\r\n\r\n  return (\r\n    <ScreenContainer isDataLoaded={!isLoading && !error}>\r\n      {isLoading && <Loading text=\"Loading Schema..\" />}\r\n      {error && <ErrorComponent text={error ?? \"Something went wrong\"} />}\r\n      {!isLoading && taskTree && (\r\n        <MainContainer>\r\n          <HeaderContainer>\r\n            <TextPillComponent\r\n              title=\"Project Title\"\r\n              value={projectTitle ?? \"\"}\r\n              lightColor={green[100]}\r\n              darkColor={green[800]}\r\n            />\r\n\r\n            <StyledVerticalDivider flexItem orientation=\"vertical\" />\r\n            <TextPillComponent\r\n              title=\"Client\"\r\n              value={clientDescription ?? \"\"}\r\n              lightColor={purple[100]}\r\n              darkColor={purple[800]}\r\n            />\r\n          </HeaderContainer>\r\n          <MainGridContainer>\r\n            <Typography style={{ padding: theme.spacing(2) }} variant=\"h5\">\r\n              Project Overview\r\n            </Typography>\r\n            <GridContainer>\r\n              {taskTree.children.map((e) => (\r\n                <ProjectPreviewTaskComponent\r\n                  indent={0}\r\n                  isRoot={true}\r\n                  key={e.id}\r\n                  task={e}\r\n                  parent={taskTree}\r\n                />\r\n              ))}\r\n            </GridContainer>\r\n          </MainGridContainer>\r\n        </MainContainer>\r\n      )}\r\n    </ScreenContainer>\r\n  )\r\n}\r\n","import { domainName } from \"../constants/Config\"\r\n\r\nexport const getOrderStatusUrl = domainName + \"/api/report/order-status\"\r\n\r\nexport interface IOrderStatus {\r\n  customer_account: string\r\n  customer_name: string\r\n  order_number: number\r\n  order_title: string\r\n  expected_ship_date: number\r\n  expected_payment: string\r\n  current_tasks: ICurrentTask[]\r\n}\r\n\r\nexport interface ICurrentTask {\r\n  task_name: string\r\n  task_owner?: string\r\n  due_date: number\r\n}\r\n","import { IOrderStatus } from \"../api/OrdersApi\"\r\nimport { styled } from \"@mui/material/styles\"\r\nimport {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Paper,\r\n  Typography,\r\n  useTheme,\r\n} from \"@mui/material\"\r\nimport { getDayFromDate } from \"../utils/formatters\"\r\nimport { useState } from \"react\"\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\"\r\n\r\nconst MainContainer = styled(Paper)<{ header?: boolean }>(\r\n  ({ theme, header }) => {\r\n    const styles: any = {\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      margin: theme.spacing(1),\r\n      padding: header ? theme.spacing(3) : theme.spacing(2),\r\n    }\r\n\r\n    if (theme.palette.mode === \"light\") {\r\n      styles.backgroundColor = header\r\n        ? theme.palette.grey[400]\r\n        : theme.palette.grey[300]\r\n    }\r\n\r\n    return styles\r\n  }\r\n)\r\n\r\nconst StyledTypography = styled(Typography)<{\r\n  flexcount?: string\r\n  insertpadding?: boolean\r\n  header?: boolean\r\n}>(({ theme, flexcount, insertpadding, header }) => {\r\n  const styles: any = {\r\n    flex: flexcount ?? \"1\",\r\n  }\r\n\r\n  if (insertpadding) {\r\n    styles.padding = theme.spacing(1)\r\n  }\r\n\r\n  if (header) {\r\n    styles.fontWeight = \"bold\"\r\n  }\r\n\r\n  return styles\r\n})\r\n\r\nconst StyledCurrentTask = styled(\"div\")<{ index: number }>(\r\n  ({ theme, index }) => {\r\n    return {\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      backgroundColor:\r\n        index === -1\r\n          ? theme.palette.mode === \"light\"\r\n            ? theme.palette.grey[300]\r\n            : theme.palette.grey[800]\r\n          : index % 2 === 0\r\n          ? undefined\r\n          : theme.palette.action.hover,\r\n    }\r\n  }\r\n)\r\n\r\nexport interface OrderStatusComponentProps {\r\n  orderStatus?: IOrderStatus\r\n  isHeader: boolean\r\n}\r\n\r\nexport default function OrderStatusComponent(props: OrderStatusComponentProps) {\r\n  const theme = useTheme()\r\n  // Accordion\r\n  const [isExpanded, setIsExpanded] = useState(false)\r\n\r\n  return (\r\n    <MainContainer header={props.isHeader}>\r\n      {props.isHeader && !props.orderStatus && (\r\n        <>\r\n          <StyledTypography header>Customer Account</StyledTypography>\r\n          <StyledTypography header>Customer Name</StyledTypography>\r\n          <StyledTypography header>Order Number</StyledTypography>\r\n          <StyledTypography header>Expected Ship Date</StyledTypography>\r\n          <StyledTypography header>Expected Payment</StyledTypography>\r\n          <StyledTypography header flexcount=\"3\">\r\n            Current Tasks\r\n          </StyledTypography>\r\n        </>\r\n      )}\r\n      {props.orderStatus && (\r\n        <>\r\n          <StyledTypography>\r\n            {props.orderStatus.customer_account}\r\n          </StyledTypography>\r\n          <StyledTypography>{props.orderStatus.customer_name}</StyledTypography>\r\n          <StyledTypography>{props.orderStatus.order_number}</StyledTypography>\r\n          <StyledTypography\r\n            style={{\r\n              color:\r\n                new Date().getTime() > props.orderStatus.expected_ship_date\r\n                  ? theme.palette.error.main\r\n                  : theme.palette.text.primary,\r\n            }}\r\n          >\r\n            {getDayFromDate(new Date(props.orderStatus.expected_ship_date))}\r\n          </StyledTypography>\r\n          <StyledTypography>\r\n            {props.orderStatus.expected_payment ?? \"N/A\"}\r\n          </StyledTypography>\r\n\r\n          <StyledTypography flexcount=\"3\">\r\n            {props.orderStatus.current_tasks.length === 0 && (\r\n              <Typography style={{ paddingLeft: theme.spacing(2) }}>\r\n                No Tasks In Progress\r\n              </Typography>\r\n            )}\r\n            {props.orderStatus.current_tasks.length > 0 && (\r\n              <Accordion\r\n                expanded={isExpanded}\r\n                onChange={() => setIsExpanded(!isExpanded)}\r\n                elevation={0}\r\n              >\r\n                <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                  <Typography>\r\n                    <span\r\n                      style={{\r\n                        color: theme.palette.success.light,\r\n                        fontWeight: \"bold\",\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      {props.orderStatus.current_tasks.length}\r\n                    </span>\r\n                    {props.orderStatus.current_tasks.length === 1\r\n                      ? \" Task \"\r\n                      : \" Tasks \"}\r\n                    In Progress\r\n                  </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                  <>\r\n                    <StyledCurrentTask index={-1}>\r\n                      <StyledTypography insertpadding>\r\n                        Task Name\r\n                      </StyledTypography>\r\n                      <StyledTypography insertpadding>\r\n                        Task Owner\r\n                      </StyledTypography>\r\n                      <StyledTypography insertpadding>\r\n                        Due Date\r\n                      </StyledTypography>\r\n                    </StyledCurrentTask>\r\n                    {props.orderStatus.current_tasks.map((t, index) => {\r\n                      return (\r\n                        <StyledCurrentTask index={index} key={index}>\r\n                          <StyledTypography insertpadding>\r\n                            {t.task_name}\r\n                          </StyledTypography>\r\n                          <StyledTypography insertpadding>\r\n                            {t.task_owner ?? \"N/A\"}\r\n                          </StyledTypography>\r\n                          <StyledTypography\r\n                            insertpadding\r\n                            style={{\r\n                              color:\r\n                                new Date().getTime() > t.due_date\r\n                                  ? theme.palette.error.main\r\n                                  : theme.palette.text.primary,\r\n                            }}\r\n                          >\r\n                            {getDayFromDate(new Date(t.due_date))}\r\n                          </StyledTypography>\r\n                        </StyledCurrentTask>\r\n                      )\r\n                    })}\r\n                  </>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n            )}\r\n          </StyledTypography>\r\n        </>\r\n      )}\r\n    </MainContainer>\r\n  )\r\n}\r\n","import { useContext, useEffect, useState } from \"react\"\r\nimport { api, HttpMethods } from \"../api/ApiControllers\"\r\nimport { getOrderStatusUrl, IOrderStatus } from \"../api/OrdersApi\"\r\nimport ErrorComponent from \"../components/ErrorComponent\"\r\nimport Loading from \"../components/Loading\"\r\nimport OrderStatusComponent from \"../components/OrderStatusComponent\"\r\nimport { ScreenContainer } from \"../components/StyledComponents\"\r\nimport { AuthContext } from \"../contexts/AuthContext\"\r\n\r\nexport default function OrderStatusScreen() {\r\n  // Context\r\n  const { user } = useContext(AuthContext)!\r\n\r\n  // State\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const [orderStatus, setOrderStatus] = useState<IOrderStatus[] | null>(null)\r\n\r\n  // Use Effect\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    api<IOrderStatus[]>(\r\n      getOrderStatusUrl,\r\n      HttpMethods.Get,\r\n      null,\r\n      { Authorization: `Bearer ${user?.tokenStr}` },\r\n      \"Something went wrong.\",\r\n      true\r\n    )\r\n      .then((data) => {\r\n        setOrderStatus(data!)\r\n        setError(null)\r\n        setIsLoading(false)\r\n      })\r\n      .catch((e: any) => {\r\n        setIsLoading(false)\r\n        setError(e.message)\r\n      })\r\n  }, [])\r\n\r\n  return (\r\n    <ScreenContainer isDataLoaded={!isLoading && !error}>\r\n      {isLoading && <Loading text=\"Loading Schema..\" />}\r\n      {error && <ErrorComponent text={error ?? \"Something went wrong\"} />}\r\n      {!isLoading && !error && orderStatus && (\r\n        <div>\r\n          <OrderStatusComponent isHeader />\r\n          {orderStatus.map((order) => {\r\n            return (\r\n              <OrderStatusComponent\r\n                isHeader={false}\r\n                key={order.order_number}\r\n                orderStatus={order}\r\n              />\r\n            )\r\n          })}\r\n        </div>\r\n      )}\r\n    </ScreenContainer>\r\n  )\r\n}\r\n","import { domainName } from \"../constants/Config\"\r\n\r\nexport interface ITaskByEmployee {\r\n  task_code?: string\r\n  task_name: string\r\n  start_date?: number\r\n  due_date?: number\r\n  order_number: number\r\n  assigned_to: string\r\n  project_title: string\r\n}\r\n\r\nexport const getTaskByEmployeeInitUrl =\r\n  domainName + \"/api/report/tasks-by-employee/init\"\r\n\r\nexport const getTaskByEmployeeUrl = (id: string) =>\r\n  domainName + `/api/report/tasks-by-employee/${id}`\r\n","export default __webpack_public_path__ + \"static/media/no_task_selected.5a7afd64.png\";","import { useContext, useEffect, useState } from \"react\"\r\nimport {\r\n  getTaskByEmployeeInitUrl,\r\n  getTaskByEmployeeUrl,\r\n  ITaskByEmployee,\r\n} from \"../api/TasksByEmployeeApi\"\r\nimport { MinifiedUser } from \"../api/UsersApi\"\r\nimport ErrorComponent from \"../components/ErrorComponent\"\r\nimport Loading from \"../components/Loading\"\r\nimport { ScreenContainer } from \"../components/StyledComponents\"\r\nimport { api, HttpMethods } from \"../api/ApiControllers\"\r\nimport { AuthContext } from \"../contexts/AuthContext\"\r\nimport { styled } from \"@mui/material/styles\"\r\nimport {\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  Paper,\r\n  Typography,\r\n  useTheme,\r\n} from \"@mui/material\"\r\nimport noselected from \"../images/no_task_selected.png\"\r\nimport { getDayFromDate } from \"../utils/formatters\"\r\n\r\nexport const ReportsMainContainer = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    height: \"100%\",\r\n  }\r\n})\r\n\r\nexport const ReportsLeftPanel = styled(Paper)<{ delmarginright?: boolean }>(\r\n  ({ theme, delmarginright }) => {\r\n    return {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      flex: \"1\",\r\n      overflowY: \"scroll\",\r\n      marginRight: !delmarginright ? theme.spacing(1) : undefined,\r\n    }\r\n  }\r\n)\r\n\r\nexport const ReportsRightPanel = styled(Paper)<{\r\n  center: boolean\r\n  delmarginleft?: boolean\r\n}>(({ theme, center, delmarginleft }) => {\r\n  return {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    flex: \"4\",\r\n    marginLeft: !delmarginleft ? theme.spacing(1) : undefined,\r\n    overflowY: \"scroll\",\r\n    alignItems: center ? \"center\" : \"stretch\",\r\n    justifyContent: center ? \"center\" : \"flex-start\",\r\n  }\r\n})\r\n\r\nexport const ReportsStyledTypography = styled(Typography)<{\r\n  flexcount?: string\r\n  insertpadding?: boolean\r\n  header?: boolean\r\n  color?: string\r\n}>(({ theme, flexcount, insertpadding, header, color }) => {\r\n  const styles: any = {\r\n    flex: flexcount ?? \"1\",\r\n    color: color,\r\n  }\r\n\r\n  if (insertpadding) {\r\n    styles.padding = theme.spacing(1)\r\n  }\r\n\r\n  if (header) {\r\n    styles.fontWeight = \"bold\"\r\n  }\r\n\r\n  return styles\r\n})\r\n\r\nexport const ReportsStyledPaper = styled(Paper)<{\r\n  header?: boolean\r\n  warning?: boolean\r\n  margin?: number\r\n}>(({ theme, header, warning, margin }) => {\r\n  const styles: any = {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    margin: theme.spacing(margin ?? 1),\r\n    padding: header ? theme.spacing(3) : theme.spacing(2),\r\n  }\r\n\r\n  if (warning) {\r\n    styles.backgroundColor =\r\n      theme.palette.mode === \"light\"\r\n        ? theme.palette.error.light\r\n        : theme.palette.error.dark\r\n  } else {\r\n    if (theme.palette.mode === \"light\") {\r\n      styles.backgroundColor = header\r\n        ? theme.palette.grey[400]\r\n        : theme.palette.grey[300]\r\n    }\r\n  }\r\n\r\n  return styles\r\n})\r\n\r\nexport default function TasksByEmployeeScreen() {\r\n  const { user } = useContext(AuthContext)!\r\n  const theme = useTheme()\r\n  // users list state\r\n  const [users, setUsers] = useState<MinifiedUser[] | null>(null)\r\n  const [isPageLoading, setIsPageLoading] = useState(false)\r\n  const [error, setError] = useState<string | null>(null)\r\n\r\n  // tasks list state\r\n  const [tasks, setTasks] = useState<ITaskByEmployee[] | null>(null)\r\n  const [isTasksLoading, setIsTasksLoading] = useState(false)\r\n  const [selectedUserCode, setSelectedUserCode] = useState<string | null>(null)\r\n  const [taskError, setTaskError] = useState<string | null>(null)\r\n\r\n  useEffect(() => {\r\n    setError(null)\r\n    setIsPageLoading(true)\r\n    api<MinifiedUser[]>(\r\n      getTaskByEmployeeInitUrl,\r\n      HttpMethods.Get,\r\n      null,\r\n      { Authorization: `Bearer ${user?.tokenStr}` },\r\n      \"Something went wrong\",\r\n      true\r\n    )\r\n      .then((data) => {\r\n        setUsers(data!)\r\n        setError(null)\r\n        setIsPageLoading(false)\r\n      })\r\n      .catch((e: any) => {\r\n        setIsPageLoading(false)\r\n        setError(e.message)\r\n      })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (selectedUserCode) {\r\n      setTaskError(null)\r\n      setIsTasksLoading(true)\r\n      api<ITaskByEmployee[]>(\r\n        getTaskByEmployeeUrl(selectedUserCode),\r\n        HttpMethods.Get,\r\n        null,\r\n        { Authorization: `Bearer ${user?.tokenStr}` },\r\n        \"Something went wrong\",\r\n        true\r\n      )\r\n        .then((data) => {\r\n          setTasks(data!)\r\n          setIsTasksLoading(false)\r\n        })\r\n        .catch((e: any) => {\r\n          setIsTasksLoading(false)\r\n          setTaskError(e.message)\r\n        })\r\n    }\r\n  }, [selectedUserCode])\r\n\r\n  return (\r\n    <ScreenContainer\r\n      style={{ overflowY: \"hidden\" }}\r\n      isDataLoaded={!isPageLoading && !error}\r\n    >\r\n      {isPageLoading && <Loading text=\"Loading Schema..\" />}\r\n      {error && <ErrorComponent text={error ?? \"Something went wrong\"} />}\r\n      {!isPageLoading && !error && users && (\r\n        <ReportsMainContainer>\r\n          <ReportsLeftPanel>\r\n            <Typography\r\n              style={{ margin: theme.spacing(1) }}\r\n              variant=\"h5\"\r\n              gutterBottom\r\n            >\r\n              Employees\r\n            </Typography>\r\n            <Divider style={{ margin: theme.spacing(1) }} />\r\n            <List>\r\n              {users.map((item) => (\r\n                <ListItem\r\n                  button\r\n                  onClick={() => setSelectedUserCode(item.user_code)}\r\n                  key={item.user_code}\r\n                >\r\n                  <Typography variant=\"h6\">{item.description}</Typography>\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </ReportsLeftPanel>\r\n          <ReportsRightPanel center={selectedUserCode === null}>\r\n            {!selectedUserCode && (\r\n              <>\r\n                <img src={noselected} width={260} />\r\n                <Typography\r\n                  style={{ marginTop: theme.spacing(2) }}\r\n                  variant=\"h5\"\r\n                >\r\n                  No Selected Employee\r\n                </Typography>\r\n              </>\r\n            )}\r\n            {isTasksLoading && <Loading text=\"Getting Tasks\" />}\r\n            {taskError && <ErrorComponent text={taskError} />}\r\n            {!isTasksLoading && !taskError && tasks && (\r\n              <>\r\n                <Typography style={{ margin: theme.spacing(1) }} variant=\"h5\">\r\n                  Assigned Tasks For{\" \"}\r\n                  <span style={{ color: theme.palette.success.main }}>\r\n                    {\r\n                      users.find((i) => i.user_code === selectedUserCode)\r\n                        ?.description\r\n                    }\r\n                  </span>\r\n                </Typography>\r\n                <ReportsStyledPaper header elevation={0}>\r\n                  <ReportsStyledTypography header>\r\n                    Task Name\r\n                  </ReportsStyledTypography>\r\n                  <ReportsStyledTypography header>\r\n                    Task Code\r\n                  </ReportsStyledTypography>\r\n                  <ReportsStyledTypography header>\r\n                    Start Date\r\n                  </ReportsStyledTypography>\r\n                  <ReportsStyledTypography header>\r\n                    Due Date\r\n                  </ReportsStyledTypography>\r\n                  <ReportsStyledTypography header>\r\n                    Order Number\r\n                  </ReportsStyledTypography>\r\n                  <ReportsStyledTypography header>\r\n                    Project Title\r\n                  </ReportsStyledTypography>\r\n                  <ReportsStyledTypography header>\r\n                    Assigned To\r\n                  </ReportsStyledTypography>\r\n                </ReportsStyledPaper>\r\n                {tasks.map((task, index) => (\r\n                  <ReportsStyledPaper key={index} elevation={0}>\r\n                    <ReportsStyledTypography>\r\n                      {task.task_name}\r\n                    </ReportsStyledTypography>\r\n                    <ReportsStyledTypography>\r\n                      {task.task_code ?? \"N/A\"}\r\n                    </ReportsStyledTypography>\r\n                    <ReportsStyledTypography>\r\n                      {task.start_date\r\n                        ? getDayFromDate(new Date(task.start_date))\r\n                        : \"N/A\"}\r\n                    </ReportsStyledTypography>\r\n                    <ReportsStyledTypography\r\n                      style={{\r\n                        color: task.due_date\r\n                          ? new Date().getTime() > task.due_date\r\n                            ? theme.palette.error.main\r\n                            : theme.palette.text.primary\r\n                          : theme.palette.text.primary,\r\n                      }}\r\n                    >\r\n                      {task.due_date\r\n                        ? getDayFromDate(new Date(task.due_date))\r\n                        : \"N/A\"}\r\n                    </ReportsStyledTypography>\r\n                    <ReportsStyledTypography>\r\n                      {task.order_number}\r\n                    </ReportsStyledTypography>\r\n                    <ReportsStyledTypography>\r\n                      {task.project_title}\r\n                    </ReportsStyledTypography>\r\n                    <ReportsStyledTypography>\r\n                      {task.assigned_to}\r\n                    </ReportsStyledTypography>\r\n                  </ReportsStyledPaper>\r\n                ))}\r\n              </>\r\n            )}\r\n          </ReportsRightPanel>\r\n        </ReportsMainContainer>\r\n      )}\r\n    </ScreenContainer>\r\n  )\r\n}\r\n","import { domainName } from \"../constants/Config\"\r\n\r\nexport interface IPipelineOrder {\r\n  order_number: number\r\n  customer_account: string\r\n  customer_name: string\r\n  planned_date: number\r\n  expected_date: number\r\n  project_title: string\r\n}\r\n\r\nexport const getPipelineOrdersUrl = domainName + \"/api/report/pipeline-orders\"\r\n","import { Typography, Divider, List, ListItem, useTheme } from \"@mui/material\"\r\nimport { error } from \"console\"\r\nimport React, { useContext, useEffect, useState } from \"react\"\r\nimport ErrorComponent from \"../components/ErrorComponent\"\r\nimport Loading from \"../components/Loading\"\r\nimport { ScreenContainer } from \"../components/StyledComponents\"\r\nimport { getDayFromDate } from \"../utils/formatters\"\r\nimport { styled } from \"@mui/material/styles\"\r\nimport { AuthContext } from \"../contexts/AuthContext\"\r\nimport { getPipelineOrdersUrl, IPipelineOrder } from \"../api/PipelineOrdersApi\"\r\nimport {\r\n  ReportsStyledPaper,\r\n  ReportsStyledTypography,\r\n} from \"./TasksByEmployeeScreen\"\r\nimport { api, HttpMethods } from \"../api/ApiControllers\"\r\n\r\nconst MainContainer = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  }\r\n})\r\n\r\nexport default function PipelineOrdersScreen() {\r\n  const { user } = useContext(AuthContext)!\r\n  const theme = useTheme()\r\n\r\n  // state\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const [orders, setOrders] = useState<IPipelineOrder[] | null>(null)\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    setError(null)\r\n    api<IPipelineOrder[]>(\r\n      getPipelineOrdersUrl,\r\n      HttpMethods.Get,\r\n      null,\r\n      { Authorization: `Bearer ${user?.tokenStr}` },\r\n      \"Something went wrong\",\r\n      true\r\n    )\r\n      .then((data) => {\r\n        setOrders(data!)\r\n        setIsLoading(false)\r\n      })\r\n      .catch((e: any) => {\r\n        setError(e.message)\r\n        setIsLoading(false)\r\n      })\r\n  }, [])\r\n\r\n  return (\r\n    <ScreenContainer\r\n      style={{ overflowY: \"hidden\" }}\r\n      isDataLoaded={!isLoading && !error}\r\n    >\r\n      {isLoading && <Loading text=\"Loading Schema..\" />}\r\n      {error && <ErrorComponent text={error ?? \"Something went wrong\"} />}\r\n      {!isLoading && !error && orders && (\r\n        <MainContainer>\r\n          <ReportsStyledPaper header>\r\n            <ReportsStyledTypography header>\r\n              Order Number\r\n            </ReportsStyledTypography>\r\n            <ReportsStyledTypography header>\r\n              Project Title\r\n            </ReportsStyledTypography>\r\n            <ReportsStyledTypography header>\r\n              Customer Account\r\n            </ReportsStyledTypography>\r\n            <ReportsStyledTypography header>\r\n              Customer Name\r\n            </ReportsStyledTypography>\r\n            <ReportsStyledTypography header>\r\n              Planned Date\r\n            </ReportsStyledTypography>\r\n            <ReportsStyledTypography header>\r\n              Expected Date\r\n            </ReportsStyledTypography>\r\n          </ReportsStyledPaper>\r\n          {orders.map((task, index) => (\r\n            <ReportsStyledPaper\r\n              warning={task.planned_date < task.expected_date}\r\n              key={index}\r\n            >\r\n              <ReportsStyledTypography>\r\n                {task.order_number}\r\n              </ReportsStyledTypography>\r\n              <ReportsStyledTypography>\r\n                {task.project_title}\r\n              </ReportsStyledTypography>\r\n              <ReportsStyledTypography>\r\n                {task.customer_account}\r\n              </ReportsStyledTypography>\r\n              <ReportsStyledTypography>\r\n                {task.customer_name}\r\n              </ReportsStyledTypography>\r\n              <ReportsStyledTypography>\r\n                {task.planned_date\r\n                  ? getDayFromDate(new Date(task.planned_date))\r\n                  : \"N/A\"}\r\n              </ReportsStyledTypography>\r\n              <ReportsStyledTypography>\r\n                {task.expected_date\r\n                  ? getDayFromDate(new Date(task.expected_date))\r\n                  : \"N/A\"}\r\n              </ReportsStyledTypography>\r\n            </ReportsStyledPaper>\r\n          ))}\r\n        </MainContainer>\r\n      )}\r\n    </ScreenContainer>\r\n  )\r\n}\r\n","import { domainName } from \"../constants/Config\";\r\n\r\nexport const getGanttInitUrl = domainName + \"/api/report/gantt/init\"","export enum ViewMode {\n  QuarterDay = \"Quarter Day\",\n  HalfDay = \"Half Day\",\n  Day = \"Day\",\n  /** ISO-8601 week */\n  Week = \"Week\",\n  Month = \"Month\",\n}\nexport type TaskType = \"task\" | \"milestone\" | \"project\";\nexport interface Task {\n  id: string;\n  type: TaskType;\n  name: string;\n  start: Date;\n  end: Date;\n  /**\n   * From 0 to 100\n   */\n  progress: number;\n  styles?: {\n    backgroundColor?: string;\n    backgroundSelectedColor?: string;\n    progressColor?: string;\n    progressSelectedColor?: string;\n  };\n  isDisabled?: boolean;\n  project?: string;\n  dependencies?: string[];\n  hideChildren?: boolean;\n}\n\nexport interface EventOption {\n  /**\n   * Time step value for date changes.\n   */\n  timeStep?: number;\n  /**\n   * Invokes on bar select on unselect.\n   */\n  onSelect?: (task: Task, isSelected: boolean) => void;\n  /**\n   * Invokes on bar double click.\n   */\n  onDoubleClick?: (task: Task) => void;\n  /**\n   * Invokes on end and start time change. Chart undoes operation if method return false or error.\n   */\n  onDateChange?: (\n    task: Task,\n    children: Task[]\n  ) => void | boolean | Promise<void> | Promise<boolean>;\n  /**\n   * Invokes on progress change. Chart undoes operation if method return false or error.\n   */\n  onProgressChange?: (\n    task: Task,\n    children: Task[]\n  ) => void | boolean | Promise<void> | Promise<boolean>;\n  /**\n   * Invokes on delete selected task. Chart undoes operation if method return false or error.\n   */\n  onDelete?: (task: Task) => void | boolean | Promise<void> | Promise<boolean>;\n  /**\n   * Invokes on expander on task list\n   */\n  onExpanderClick?: (task: Task) => void;\n}\n\nexport interface DisplayOption {\n  viewMode?: ViewMode;\n  /**\n   * Specifies the month name language. Able formats: ISO 639-2, Java Locale\n   */\n  locale?: string;\n  rtl?: boolean;\n}\n\nexport interface StylingOption {\n  headerHeight?: number;\n  columnWidth?: number;\n  listCellWidth?: string;\n  rowHeight?: number;\n  ganttHeight?: number;\n  barCornerRadius?: number;\n  handleWidth?: number;\n  fontFamily?: string;\n  fontSize?: string;\n  /**\n   * How many of row width can be taken by task.\n   * From 0 to 100\n   */\n  barFill?: number;\n  barProgressColor?: string;\n  barProgressSelectedColor?: string;\n  barBackgroundColor?: string;\n  barBackgroundSelectedColor?: string;\n  projectProgressColor?: string;\n  projectProgressSelectedColor?: string;\n  projectBackgroundColor?: string;\n  projectBackgroundSelectedColor?: string;\n  milestoneBackgroundColor?: string;\n  milestoneBackgroundSelectedColor?: string;\n  arrowColor?: string;\n  arrowIndent?: number;\n  todayColor?: string;\n  TooltipContent?: React.FC<{\n    task: Task;\n    fontSize: string;\n    fontFamily: string;\n  }>;\n  TaskListHeader?: React.FC<{\n    headerHeight: number;\n    rowWidth: string;\n    fontFamily: string;\n    fontSize: string;\n  }>;\n  TaskListTable?: React.FC<{\n    rowHeight: number;\n    rowWidth: string;\n    fontFamily: string;\n    fontSize: string;\n    locale: string;\n    tasks: Task[];\n    selectedTaskId: string;\n    /**\n     * Sets selected task by id\n     */\n    setSelectedTask: (taskId: string) => void;\n    onExpanderClick: (task: Task) => void;\n  }>;\n}\n\nexport interface GanttProps extends EventOption, DisplayOption, StylingOption {\n  tasks: Task[];\n}\n","import { Task, ViewMode } from \"../types/public-types\";\nimport DateTimeFormatOptions = Intl.DateTimeFormatOptions;\nimport DateTimeFormat = Intl.DateTimeFormat;\n\ntype DateHelperScales =\n  | \"year\"\n  | \"month\"\n  | \"day\"\n  | \"hour\"\n  | \"minute\"\n  | \"second\"\n  | \"millisecond\";\n\nconst intlDTCache: any = {};\nexport const getCachedDateTimeFormat = (\n  locString: string | string[],\n  opts: DateTimeFormatOptions = {}\n): DateTimeFormat => {\n  const key = JSON.stringify([locString, opts]);\n  let dtf = intlDTCache[key];\n  if (!dtf) {\n    dtf = new Intl.DateTimeFormat(locString, opts);\n    intlDTCache[key] = dtf;\n  }\n  return dtf;\n};\n\n\nexport const addToDate = (\n  date: Date,\n  quantity: number,\n  scale: DateHelperScales\n) => {\n  const newDate = new Date(\n    date.getFullYear() + (scale === \"year\" ? quantity : 0),\n    date.getMonth() + (scale === \"month\" ? quantity : 0),\n    date.getDate() + (scale === \"day\" ? quantity : 0),\n    date.getHours() + (scale === \"hour\" ? quantity : 0),\n    date.getMinutes() + (scale === \"minute\" ? quantity : 0),\n    date.getSeconds() + (scale === \"second\" ? quantity : 0),\n    date.getMilliseconds() + (scale === \"millisecond\" ? quantity : 0)\n  );\n  return newDate;\n};\n\nexport const startOfDate = (date: Date, scale: DateHelperScales) => {\n  const scores = [\n    \"millisecond\",\n    \"second\",\n    \"minute\",\n    \"hour\",\n    \"day\",\n    \"month\",\n    \"year\",\n  ];\n\n  const shouldReset = (_scale: DateHelperScales) => {\n    const maxScore = scores.indexOf(scale);\n    return scores.indexOf(_scale) <= maxScore;\n  };\n  const newDate = new Date(\n    date.getFullYear(),\n    shouldReset(\"year\") ? 0 : date.getMonth(),\n    shouldReset(\"month\") ? 1 : date.getDate(),\n    shouldReset(\"day\") ? 0 : date.getHours(),\n    shouldReset(\"hour\") ? 0 : date.getMinutes(),\n    shouldReset(\"minute\") ? 0 : date.getSeconds(),\n    shouldReset(\"second\") ? 0 : date.getMilliseconds()\n  );\n  return newDate;\n};\n\nexport const ganttDateRange = (tasks: Task[], viewMode: ViewMode) => {\n  let newStartDate: Date = tasks[0].start;\n  let newEndDate: Date = tasks[0].start;\n  for (const task of tasks) {\n    if (task.start < newStartDate) {\n      newStartDate = task.start;\n    }\n    if (task.end > newEndDate) {\n      newEndDate = task.end;\n    }\n  }\n  switch (viewMode) {\n    case ViewMode.Month:\n      newStartDate = addToDate(newStartDate, -1, \"month\");\n      newStartDate = startOfDate(newStartDate, \"month\");\n      newEndDate = addToDate(newEndDate, 1, \"year\");\n      newEndDate = startOfDate(newEndDate, \"year\");\n      break;\n    case ViewMode.Week:\n      newStartDate = startOfDate(newStartDate, \"day\");\n      newEndDate = startOfDate(newEndDate, \"day\");\n      newStartDate = addToDate(getMonday(newStartDate), -7, \"day\");\n      newEndDate = addToDate(newEndDate, 1.5, \"month\");\n      break;\n    case ViewMode.Day:\n      newStartDate = startOfDate(newStartDate, \"day\");\n      newEndDate = startOfDate(newEndDate, \"day\");\n      newStartDate = addToDate(newStartDate, -1, \"day\");\n      newEndDate = addToDate(newEndDate, 19, \"day\");\n      break;\n    case ViewMode.QuarterDay:\n      newStartDate = startOfDate(newStartDate, \"day\");\n      newEndDate = startOfDate(newEndDate, \"day\");\n      newStartDate = addToDate(newStartDate, -1, \"day\");\n      newEndDate = addToDate(newEndDate, 66, \"hour\"); // 24(1 day)*3 - 6\n      break;\n    case ViewMode.HalfDay:\n      newStartDate = startOfDate(newStartDate, \"day\");\n      newEndDate = startOfDate(newEndDate, \"day\");\n      newStartDate = addToDate(newStartDate, -1, \"day\");\n      newEndDate = addToDate(newEndDate, 108, \"hour\"); // 24(1 day)*5 - 12\n      break;\n  }\n  return [newStartDate, newEndDate];\n};\n\nexport const seedDates = (\n  startDate: Date,\n  endDate: Date,\n  viewMode: ViewMode\n) => {\n  let currentDate: Date = new Date(startDate);\n  const dates: Date[] = [currentDate];\n  while (currentDate < endDate) {\n    switch (viewMode) {\n      case ViewMode.Month:\n        currentDate = addToDate(currentDate, 1, \"month\");\n        break;\n      case ViewMode.Week:\n        currentDate = addToDate(currentDate, 7, \"day\");\n        break;\n      case ViewMode.Day:\n        currentDate = addToDate(currentDate, 1, \"day\");\n        break;\n      case ViewMode.HalfDay:\n        currentDate = addToDate(currentDate, 12, \"hour\");\n        break;\n      case ViewMode.QuarterDay:\n        currentDate = addToDate(currentDate, 6, \"hour\");\n        break;\n    }\n    dates.push(currentDate);\n  }\n  return dates;\n};\n\nexport const getLocaleMonth = (date: Date, locale: string) => {\n  let bottomValue = getCachedDateTimeFormat(locale, {\n    month: \"long\",\n  }).format(date);\n  bottomValue = bottomValue.replace(\n    bottomValue[0],\n    bottomValue[0].toLocaleUpperCase()\n  );\n  return bottomValue;\n};\n\n/**\n * Returns monday of current week\n * @param date date for modify\n */\nconst getMonday = (date: Date) => {\n  const day = date.getDay();\n  const diff = date.getDate() - day + (day === 0 ? -6 : 1); // adjust when day is sunday\n  return new Date(date.setDate(diff));\n};\n\nexport const getWeekNumberISO8601 = (date: Date) => {\n  const tmpDate = new Date(date.valueOf());\n  const dayNumber = (tmpDate.getDay() + 6) % 7;\n  tmpDate.setDate(tmpDate.getDate() - dayNumber + 3);\n  const firstThursday = tmpDate.valueOf();\n  tmpDate.setMonth(0, 1);\n  if (tmpDate.getDay() !== 4) {\n    tmpDate.setMonth(0, 1 + ((4 - tmpDate.getDay() + 7) % 7));\n  }\n  const weekNumber = (\n    1 + Math.ceil((firstThursday - tmpDate.valueOf()) / 604800000)\n  ).toString();\n\n  if (weekNumber.length === 1) {\n    return `0${weekNumber}`;\n  } else {\n    return weekNumber;\n  }\n};\n\nexport const getDaysInMonth = (month: number, year: number) => {\n  return new Date(year, month + 1, 0).getDate();\n};\n\n","import { Paper, Typography, useTheme } from \"@mui/material\"\nimport React from \"react\"\nimport styles from \"./task-list-header.module.css\"\n\nexport const TaskListHeaderDefault: React.FC<{\n  headerHeight: number\n  rowWidth: string\n  fontFamily: string\n  fontSize: string\n}> = ({ headerHeight, fontFamily, fontSize, rowWidth }) => {\n  const theme = useTheme()\n\n  return (\n    <Paper\n      elevation={0}\n      // className={styles.ganttTable}\n      style={{\n        fontFamily: fontFamily,\n        fontSize: fontSize,\n        backgroundColor:\n          theme.palette.mode === \"light\"\n            ? theme.palette.grey[400]\n            : theme.palette.grey[800],\n      }}\n    >\n      <div\n        className={styles.ganttTable_Header}\n        style={{\n          height: headerHeight - 2,\n          textAlign: \"center\",\n        }}\n      >\n        <Typography\n          className={styles.ganttTable_HeaderItem}\n          style={{\n            minWidth: rowWidth,\n          }}\n        >\n          &nbsp;Name\n        </Typography>\n        <div\n          className={styles.ganttTable_HeaderSeparator}\n          style={{\n            height: headerHeight * 0.5,\n            marginTop: headerHeight * 0.2,\n            textAlign: \"center\",\n          }}\n        />\n        <Typography\n          className={styles.ganttTable_HeaderItem}\n          style={{\n            minWidth: rowWidth,\n          }}\n        >\n          &nbsp;From\n        </Typography>\n        <div\n          className={styles.ganttTable_HeaderSeparator}\n          style={{\n            height: headerHeight * 0.5,\n            marginTop: headerHeight * 0.25,\n            textAlign: \"center\",\n          }}\n        />\n        <Typography\n          className={styles.ganttTable_HeaderItem}\n          style={{\n            minWidth: rowWidth,\n          }}\n        >\n          &nbsp;To\n        </Typography>\n      </div>\n    </Paper>\n  )\n}\n","import React, { useMemo } from \"react\"\nimport styles from \"./task-list-table.module.css\"\nimport { Task } from \"../../types/public-types\"\nimport { useTheme } from \"@mui/material\"\n\nconst localeDateStringCache: any = {}\nconst toLocaleDateStringFactory =\n  (locale: string) =>\n  (date: Date, dateTimeOptions: Intl.DateTimeFormatOptions) => {\n    const key = date.toString()\n    let lds = localeDateStringCache[key]\n    if (!lds) {\n      lds = date.toLocaleDateString(locale, dateTimeOptions)\n      localeDateStringCache[key] = lds\n    }\n    return lds\n  }\nconst dateTimeOptions: Intl.DateTimeFormatOptions = {\n  weekday: \"short\",\n  year: \"numeric\",\n  month: \"long\",\n  day: \"numeric\",\n}\n\nexport const TaskListTableDefault: React.FC<{\n  rowHeight: number\n  rowWidth: string\n  fontFamily: string\n  fontSize: string\n  locale: string\n  tasks: Task[]\n  selectedTaskId: string\n  setSelectedTask: (taskId: string) => void\n  onExpanderClick: (task: Task) => void\n}> = ({\n  rowHeight,\n  rowWidth,\n  tasks,\n  fontFamily,\n  fontSize,\n  locale,\n  onExpanderClick,\n}) => {\n  const toLocaleDateString = useMemo(\n    () => toLocaleDateStringFactory(locale),\n    [locale]\n  )\n\n  const theme = useTheme()\n  return (\n    <div\n      // className={styles.taskListWrapper}\n      style={{\n        fontFamily: fontFamily,\n        fontSize: fontSize,\n      }}\n    >\n      {tasks.map((t, index) => {\n        let expanderSymbol = \"\"\n        if (t.hideChildren === false) {\n          expanderSymbol = \"▼\"\n        } else if (t.hideChildren === true) {\n          expanderSymbol = \"▶\"\n        }\n\n        return (\n          <div\n            className={styles.taskListTableRow}\n            style={{\n              height: rowHeight,\n              backgroundColor:\n                index % 2 === 0\n                  ? theme.palette.background.paper\n                  : theme.palette.action.hover,\n            }}\n            key={`${t.id}row`}\n          >\n            <div\n              className={styles.taskListCell}\n              style={{\n                minWidth: rowWidth,\n                maxWidth: rowWidth,\n              }}\n              title={t.name}\n            >\n              <div className={styles.taskListNameWrapper}>\n                <div\n                  className={\n                    expanderSymbol\n                      ? styles.taskListExpander\n                      : styles.taskListEmptyExpander\n                  }\n                  onClick={() => onExpanderClick(t)}\n                >\n                  {expanderSymbol}\n                </div>\n                <div>{t.name}</div>\n              </div>\n            </div>\n            <div\n              className={styles.taskListCell}\n              style={{\n                minWidth: rowWidth,\n                maxWidth: rowWidth,\n              }}\n            >\n              &nbsp;{toLocaleDateString(t.start, dateTimeOptions)}\n            </div>\n            <div\n              className={styles.taskListCell}\n              style={{\n                minWidth: rowWidth,\n                maxWidth: rowWidth,\n              }}\n            >\n              &nbsp;{toLocaleDateString(t.end, dateTimeOptions)}\n            </div>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n","import React, { useRef, useEffect, useState } from \"react\"\nimport { Task } from \"../../types/public-types\"\nimport { BarTask } from \"../../types/bar-task\"\nimport styles from \"./tooltip.module.css\"\nimport Typography from \"@mui/material/Typography\"\nimport { Paper, useTheme } from \"@mui/material\"\n\nexport type TooltipProps = {\n  task: BarTask\n  arrowIndent: number\n  rtl: boolean\n  svgContainerHeight: number\n  svgContainerWidth: number\n  svgWidth: number\n  headerHeight: number\n  taskListWidth: number\n  scrollX: number\n  scrollY: number\n  rowHeight: number\n  fontSize: string\n  fontFamily: string\n  TooltipContent: React.FC<{\n    task: Task\n    fontSize: string\n    fontFamily: string\n  }>\n}\nexport const Tooltip: React.FC<TooltipProps> = ({\n  task,\n  rowHeight,\n  rtl,\n  svgContainerHeight,\n  svgContainerWidth,\n  scrollX,\n  scrollY,\n  arrowIndent,\n  fontSize,\n  fontFamily,\n  headerHeight,\n  taskListWidth,\n  TooltipContent,\n}) => {\n  const tooltipRef = useRef<HTMLDivElement | null>(null)\n  const [relatedY, setRelatedY] = useState(0)\n  const [relatedX, setRelatedX] = useState(0)\n  useEffect(() => {\n    if (tooltipRef.current) {\n      const tooltipHeight = tooltipRef.current.offsetHeight * 1.1\n      const tooltipWidth = tooltipRef.current.offsetWidth * 1.1\n\n      let newRelatedY = task.index * rowHeight - scrollY + headerHeight\n      let newRelatedX: number\n      if (rtl) {\n        newRelatedX = task.x1 - arrowIndent * 1.5 - tooltipWidth - scrollX\n        if (newRelatedX < 0) {\n          newRelatedX = task.x2 + arrowIndent * 1.5 - scrollX\n        }\n        const tooltipLeftmostPoint = tooltipWidth + newRelatedX\n        if (tooltipLeftmostPoint > svgContainerWidth) {\n          newRelatedX = svgContainerWidth - tooltipWidth\n          newRelatedY += rowHeight\n        }\n      } else {\n        newRelatedX = task.x2 + arrowIndent * 1.5 + taskListWidth - scrollX\n        const tooltipLeftmostPoint = tooltipWidth + newRelatedX\n        const fullChartWidth = taskListWidth + svgContainerWidth\n        if (tooltipLeftmostPoint > fullChartWidth) {\n          newRelatedX =\n            task.x1 + taskListWidth - arrowIndent * 1.5 - scrollX - tooltipWidth\n        }\n        if (newRelatedX < taskListWidth) {\n          newRelatedX = svgContainerWidth + taskListWidth - tooltipWidth\n          newRelatedY += rowHeight\n        }\n      }\n\n      const tooltipLowerPoint = tooltipHeight + newRelatedY - scrollY\n      if (tooltipLowerPoint > svgContainerHeight - scrollY) {\n        newRelatedY = svgContainerHeight - tooltipHeight\n      }\n      setRelatedY(newRelatedY)\n      setRelatedX(newRelatedX)\n    }\n  }, [\n    tooltipRef.current,\n    task,\n    arrowIndent,\n    scrollX,\n    scrollY,\n    headerHeight,\n    taskListWidth,\n    rowHeight,\n    svgContainerHeight,\n    svgContainerWidth,\n  ])\n\n  return (\n    <div\n      ref={tooltipRef}\n      className={\n        relatedX\n          ? styles.tooltipDetailsContainer\n          : styles.tooltipDetailsContainerHidden\n      }\n      style={{ left: relatedX, top: relatedY }}\n    >\n      <TooltipContent task={task} fontSize={fontSize} fontFamily={fontFamily} />\n    </div>\n  )\n}\n\nexport const StandardTooltipContent: React.FC<{\n  task: Task\n  fontSize: string\n  fontFamily: string\n}> = ({ task, fontSize, fontFamily }) => {\n  // const style = {\n  //   fontSize,\n  //   fontFamily,\n  // }\n\n  const theme = useTheme()\n  return (\n    <Paper style={{ padding: theme.spacing(2) }}>\n      {/* <Paper style={{backgroundColor: theme.palette.background.paper}} className={styles.tooltipDefaultContainer}> */}\n      <Typography\n        component=\"b\"\n        variant=\"body1\"\n        style={{ fontSize: fontSize + 6 }}\n      >{`${task.name}: ${task.start.getDate()}-${\n        task.start.getMonth() + 1\n      }-${task.start.getFullYear()} - ${task.end.getDate()}-${\n        task.end.getMonth() + 1\n      }-${task.end.getFullYear()}`}</Typography>\n      {task.end.getTime() - task.start.getTime() !== 0 && (\n        <Typography\n          variant=\"body2\"\n          component=\"p\"\n          //className={styles.tooltipDefaultContainerParagraph}\n        >{`Duration: ${~~(\n          (task.end.getTime() - task.start.getTime()) /\n          (1000 * 60 * 60 * 24)\n        )} day(s)`}</Typography>\n      )}\n\n      <Typography\n        variant=\"body2\"\n        component=\"p\"\n        //className={styles.tooltipDefaultContainerParagraph}\n      >\n        {!!task.progress && `Progress: ${task.progress} %`}\n      </Typography>\n    </Paper>\n  )\n}\n","import React, { SyntheticEvent, useRef, useEffect } from \"react\";\nimport styles from \"./vertical-scroll.module.css\";\n\nexport const VerticalScroll: React.FC<{\n  scroll: number;\n  ganttHeight: number;\n  ganttFullHeight: number;\n  headerHeight: number;\n  rtl: boolean;\n  onScroll: (event: SyntheticEvent<HTMLDivElement>) => void;\n}> = ({\n  scroll,\n  ganttHeight,\n  ganttFullHeight,\n  headerHeight,\n  rtl,\n  onScroll,\n}) => {\n  const scrollRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (scrollRef.current) {\n      scrollRef.current.scrollTop = scroll;\n    }\n  }, [scroll]);\n\n  return (\n    <div\n      style={{\n        height: ganttHeight,\n        marginTop: headerHeight,\n        marginLeft: rtl ? \"\" : \"-17px\",\n      }}\n      className={styles.scroll}\n      onScroll={onScroll}\n      ref={scrollRef}\n    >\n      <div style={{ height: ganttFullHeight, width: 1 }} />\n    </div>\n  );\n};\n","import React, { useEffect, useRef } from \"react\";\nimport { BarTask } from \"../../types/bar-task\";\nimport { Task } from \"../../types/public-types\";\n\nexport type TaskListProps = {\n  headerHeight: number;\n  rowWidth: string;\n  fontFamily: string;\n  fontSize: string;\n  rowHeight: number;\n  ganttHeight: number;\n  scrollY: number;\n  locale: string;\n  tasks: Task[];\n  taskListRef: React.RefObject<HTMLDivElement>;\n  horizontalContainerClass?: string;\n  selectedTask: BarTask | undefined;\n  setSelectedTask: (task: string) => void;\n  onExpanderClick: (task: Task) => void;\n  TaskListHeader: React.FC<{\n    headerHeight: number;\n    rowWidth: string;\n    fontFamily: string;\n    fontSize: string;\n  }>;\n  TaskListTable: React.FC<{\n    rowHeight: number;\n    rowWidth: string;\n    fontFamily: string;\n    fontSize: string;\n    locale: string;\n    tasks: Task[];\n    selectedTaskId: string;\n    setSelectedTask: (taskId: string) => void;\n    onExpanderClick: (task: Task) => void;\n  }>;\n};\n\nexport const TaskList: React.FC<TaskListProps> = ({\n  headerHeight,\n  fontFamily,\n  fontSize,\n  rowWidth,\n  rowHeight,\n  scrollY,\n  tasks,\n  selectedTask,\n  setSelectedTask,\n  onExpanderClick,\n  locale,\n  ganttHeight,\n  taskListRef,\n  horizontalContainerClass,\n  TaskListHeader,\n  TaskListTable,\n}) => {\n  const horizontalContainerRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    if (horizontalContainerRef.current) {\n      horizontalContainerRef.current.scrollTop = scrollY;\n    }\n  }, [scrollY]);\n\n  const headerProps = {\n    headerHeight,\n    fontFamily,\n    fontSize,\n    rowWidth,\n  };\n  const selectedTaskId = selectedTask ? selectedTask.id : \"\";\n  const tableProps = {\n    rowHeight,\n    rowWidth,\n    fontFamily,\n    fontSize,\n    tasks,\n    locale,\n    selectedTaskId: selectedTaskId,\n    setSelectedTask,\n    onExpanderClick,\n  };\n\n  return (\n    <div ref={taskListRef}>\n      <TaskListHeader {...headerProps} />\n      <div\n        ref={horizontalContainerRef}\n        className={horizontalContainerClass}\n        style={ganttHeight ? { height: ganttHeight } : {}}\n      >\n        <TaskListTable {...tableProps} />\n      </div>\n    </div>\n  );\n};\n","import React, { ReactChild } from \"react\";\nimport { Task } from \"../../types/public-types\";\nimport { addToDate } from \"../../helpers/date-helper\";\nimport styles from \"./grid.module.css\";\nimport { useTheme } from \"@mui/material\";\n\nexport type GridBodyProps = {\n  tasks: Task[];\n  dates: Date[];\n  svgWidth: number;\n  rowHeight: number;\n  columnWidth: number;\n  todayColor: string;\n  rtl: boolean;\n};\nexport const GridBody: React.FC<GridBodyProps> = ({\n  tasks,\n  dates,\n  rowHeight,\n  svgWidth,\n  columnWidth,\n  todayColor,\n  rtl,\n}) => {\n\nconst theme = useTheme()\n\n  let y = 0;\n  const gridRows: ReactChild[] = [];\n  const rowLines: ReactChild[] = [\n    <line\n      key=\"RowLineFirst\"\n      x=\"0\"\n      y1={0}\n      x2={svgWidth}\n      y2={0}\n      className={styles.gridRowLine}\n    />,\n  ];\n  for (const task of tasks) {\n    gridRows.push(\n      <rect\n        key={\"Row\" + task.id}\n        x=\"0\"\n        y={y}\n        width={svgWidth}\n        height={rowHeight}\n        //className={styles.gridRow}\n        fill={theme.palette.background.default}\n      />\n    );\n    rowLines.push(\n      <line\n        key={\"RowLine\" + task.id}\n        x=\"0\"\n        y1={y + rowHeight}\n        x2={svgWidth}\n        y2={y + rowHeight}\n        className={styles.gridRowLine}\n      />\n    );\n    y += rowHeight;\n  }\n\n  const now = new Date();\n  let tickX = 0;\n  const ticks: ReactChild[] = [];\n  let today: ReactChild = <rect />;\n  for (let i = 0; i < dates.length; i++) {\n    const date = dates[i];\n    ticks.push(\n      <line\n        key={date.getTime()}\n        x1={tickX}\n        y1={0}\n        x2={tickX}\n        y2={y}\n        className={styles.gridTick}\n      />\n    );\n    if (\n      (i + 1 !== dates.length &&\n        date.getTime() < now.getTime() &&\n        dates[i + 1].getTime() >= now.getTime()) ||\n      // if current date is last\n      (i !== 0 &&\n        i + 1 === dates.length &&\n        date.getTime() < now.getTime() &&\n        addToDate(\n          date,\n          date.getTime() - dates[i - 1].getTime(),\n          \"millisecond\"\n        ).getTime() >= now.getTime())\n    ) {\n      today = (\n        <rect\n          x={tickX}\n          y={0}\n          width={columnWidth}\n          height={y}\n          fill={todayColor}\n        />\n      );\n    }\n    // rtl for today\n    if (\n      rtl &&\n      i + 1 !== dates.length &&\n      date.getTime() >= now.getTime() &&\n      dates[i + 1].getTime() < now.getTime()\n    ) {\n      today = (\n        <rect\n          x={tickX + columnWidth}\n          y={0}\n          width={columnWidth}\n          height={y}\n          fill={todayColor}\n        />\n      );\n    }\n    tickX += columnWidth;\n  }\n  return (\n    <g className=\"gridBody\">\n      <g className=\"rows\">{gridRows}</g>\n      <g className=\"rowLines\">{rowLines}</g>\n      <g className=\"ticks\">{ticks}</g>\n      <g className=\"today\">{today}</g>\n    </g>\n  );\n};\n","import React from \"react\";\nimport { GridBody, GridBodyProps } from \"./grid-body\";\n\nexport type GridProps = GridBodyProps;\nexport const Grid: React.FC<GridProps> = props => {\n  return (\n    <g className=\"grid\">\n      <GridBody {...props} />\n    </g>\n  );\n};\n","import { Typography } from \"@mui/material\"\nimport React from \"react\"\nimport styles from \"./calendar.module.css\"\n\ntype TopPartOfCalendarProps = {\n  value: string\n  x1Line: number\n  y1Line: number\n  y2Line: number\n  xText: number\n  yText: number\n}\n\nexport const TopPartOfCalendar: React.FC<TopPartOfCalendarProps> = ({\n  value,\n  x1Line,\n  y1Line,\n  y2Line,\n  xText,\n  yText,\n}) => {\n  return (\n    <g className=\"calendarTop\">\n      <line\n        x1={x1Line}\n        y1={y1Line}\n        x2={x1Line}\n        y2={y2Line}\n        className={styles.calendarTopTick}\n        key={value + \"line\"}\n      />\n      <Typography\n        component=\"text\"\n        variant=\"body2\"\n        key={value + \"text\"}\n        y={yText}\n        x={xText}\n        // className={styles.calendarTopText}\n      >\n        {value}\n      </Typography>\n    </g>\n  )\n}\n","import React, { ReactChild } from \"react\"\nimport { ViewMode } from \"../../types/public-types\"\nimport { TopPartOfCalendar } from \"./top-part-of-calendar\"\nimport {\n  getCachedDateTimeFormat,\n  getDaysInMonth,\n  getLocaleMonth,\n  getWeekNumberISO8601,\n} from \"../../helpers/date-helper\"\nimport { DateSetup } from \"../../types/date-setup\"\nimport styles from \"./calendar.module.css\"\nimport { Paper, Typography, useTheme } from \"@mui/material\"\n\nexport type CalendarProps = {\n  dateSetup: DateSetup\n  locale: string\n  viewMode: ViewMode\n  rtl: boolean\n  headerHeight: number\n  columnWidth: number\n  fontFamily: string\n  fontSize: string\n}\n\nexport const Calendar: React.FC<CalendarProps> = ({\n  dateSetup,\n  locale,\n  viewMode,\n  rtl,\n  headerHeight,\n  columnWidth,\n  fontFamily,\n  fontSize,\n}) => {\n  const getCalendarValuesForMonth = () => {\n    const topValues: ReactChild[] = []\n    const bottomValues: ReactChild[] = []\n    const topDefaultHeight = headerHeight * 0.5\n    for (let i = 0; i < dateSetup.dates.length; i++) {\n      const date = dateSetup.dates[i]\n      const bottomValue = getLocaleMonth(date, locale)\n      bottomValues.push(\n        <Typography\n          component=\"text\"\n          key={bottomValue + date.getFullYear()}\n          y={headerHeight * 0.8}\n          x={columnWidth * i + columnWidth * 0.5}\n          // className={styles.calendarBottomText}\n        >\n          {bottomValue}\n        </Typography>\n      )\n      if (\n        i === 0 ||\n        date.getFullYear() !== dateSetup.dates[i - 1].getFullYear()\n      ) {\n        const topValue = date.getFullYear().toString()\n        let xText: number\n        if (rtl) {\n          xText = (6 + i + date.getMonth() + 1) * columnWidth\n        } else {\n          xText = (6 + i - date.getMonth()) * columnWidth\n        }\n        topValues.push(\n          <TopPartOfCalendar\n            key={topValue}\n            value={topValue}\n            x1Line={columnWidth * i}\n            y1Line={0}\n            y2Line={topDefaultHeight}\n            xText={xText}\n            yText={topDefaultHeight * 0.9}\n          />\n        )\n      }\n    }\n    return [topValues, bottomValues]\n  }\n\n  const getCalendarValuesForWeek = () => {\n    const topValues: ReactChild[] = []\n    const bottomValues: ReactChild[] = []\n    let weeksCount: number = 1\n    const topDefaultHeight = headerHeight * 0.5\n    const dates = dateSetup.dates\n    for (let i = dates.length - 1; i >= 0; i--) {\n      const date = dates[i]\n      let topValue = \"\"\n      if (i === 0 || date.getMonth() !== dates[i - 1].getMonth()) {\n        // top\n        topValue = `${getLocaleMonth(date, locale)}, ${date.getFullYear()}`\n      }\n      // bottom\n      const bottomValue = `W${getWeekNumberISO8601(date)}`\n\n      bottomValues.push(\n        <Typography\n          component=\"text\"\n          key={date.getTime()}\n          y={headerHeight * 0.8}\n          x={columnWidth * (i + +rtl)}\n          // className={styles.calendarBottomText}\n        >\n          {bottomValue}\n        </Typography>\n      )\n\n      if (topValue) {\n        // if last day is new month\n        if (i !== dates.length - 1) {\n          topValues.push(\n            <TopPartOfCalendar\n              key={topValue}\n              value={topValue}\n              x1Line={columnWidth * i + weeksCount * columnWidth}\n              y1Line={0}\n              y2Line={topDefaultHeight}\n              xText={columnWidth * i + columnWidth * weeksCount * 0.5}\n              yText={topDefaultHeight * 0.9}\n            />\n          )\n        }\n        weeksCount = 0\n      }\n      weeksCount++\n    }\n    return [topValues, bottomValues]\n  }\n\n  const getCalendarValuesForDay = () => {\n    const topValues: ReactChild[] = []\n    const bottomValues: ReactChild[] = []\n    const topDefaultHeight = headerHeight * 0.5\n    const dates = dateSetup.dates\n    for (let i = 0; i < dates.length; i++) {\n      const date = dates[i]\n      const bottomValue = date.getDate().toString()\n\n      bottomValues.push(\n        <Typography\n          component=\"text\"\n          variant=\"body2\"\n          //style={{ color: \"white\" }}\n          y={headerHeight * 0.8}\n          x={columnWidth * i + columnWidth * 0.5}\n          //className={styles.calendarBottomText}\n        >\n          {bottomValue}\n        </Typography>\n      )\n      if (\n        i + 1 !== dates.length &&\n        date.getMonth() !== dates[i + 1].getMonth()\n      ) {\n        const topValue = getLocaleMonth(date, locale)\n\n        topValues.push(\n          <TopPartOfCalendar\n            key={topValue + date.getFullYear()}\n            value={topValue}\n            x1Line={columnWidth * (i + 1)}\n            y1Line={0}\n            y2Line={topDefaultHeight}\n            xText={\n              columnWidth * (i + 1) -\n              getDaysInMonth(date.getMonth(), date.getFullYear()) *\n                columnWidth *\n                0.5\n            }\n            yText={topDefaultHeight * 0.9}\n          />\n        )\n      }\n    }\n    return [topValues, bottomValues]\n  }\n\n  const getCalendarValuesForOther = () => {\n    const topValues: ReactChild[] = []\n    const bottomValues: ReactChild[] = []\n    const ticks = viewMode === ViewMode.HalfDay ? 2 : 4\n    const topDefaultHeight = headerHeight * 0.5\n    const dates = dateSetup.dates\n    for (let i = 0; i < dates.length; i++) {\n      const date = dates[i]\n      const bottomValue = getCachedDateTimeFormat(locale, {\n        hour: \"numeric\",\n      }).format(date)\n\n      bottomValues.push(\n        <Typography\n          component=\"text\"\n          key={date.getTime()}\n          y={headerHeight * 0.8}\n          x={columnWidth * (i + +rtl)}\n          // className={styles.calendarBottomText}\n          fontFamily={fontFamily}\n        >\n          {bottomValue}\n        </Typography>\n      )\n      if (i === 0 || date.getDate() !== dates[i - 1].getDate()) {\n        const topValue = `${date.getDate()} ${getLocaleMonth(date, locale)}`\n        topValues.push(\n          <TopPartOfCalendar\n            key={topValue + date.getFullYear()}\n            value={topValue}\n            x1Line={columnWidth * i + ticks * columnWidth}\n            y1Line={0}\n            y2Line={topDefaultHeight}\n            xText={columnWidth * i + ticks * columnWidth * 0.5}\n            yText={topDefaultHeight * 0.9}\n          />\n        )\n      }\n    }\n\n    return [topValues, bottomValues]\n  }\n\n  let topValues: ReactChild[] = []\n  let bottomValues: ReactChild[] = []\n  switch (dateSetup.viewMode) {\n    case ViewMode.Month:\n      ;[topValues, bottomValues] = getCalendarValuesForMonth()\n      break\n    case ViewMode.Week:\n      ;[topValues, bottomValues] = getCalendarValuesForWeek()\n      break\n    case ViewMode.Day:\n      ;[topValues, bottomValues] = getCalendarValuesForDay()\n      break\n    default:\n      ;[topValues, bottomValues] = getCalendarValuesForOther()\n      break\n  }\n\n  const theme = useTheme()\n\n  return (\n    <g fill={theme.palette.text.primary}>\n      <rect\n        fill={theme.palette.background.default}\n        x={0}\n        y={0}\n        width={columnWidth * dateSetup.dates.length}\n        height={headerHeight}\n\n        // className={styles.calendarHeader}\n      />\n      {bottomValues} {topValues}\n    </g>\n  )\n}\n","import React from \"react\";\nimport { BarTask } from \"../../types/bar-task\";\n\ntype ArrowProps = {\n  taskFrom: BarTask;\n  taskTo: BarTask;\n  rowHeight: number;\n  taskHeight: number;\n  arrowIndent: number;\n  rtl: boolean;\n};\nexport const Arrow: React.FC<ArrowProps> = ({\n  taskFrom,\n  taskTo,\n  rowHeight,\n  taskHeight,\n  arrowIndent,\n  rtl,\n}) => {\n  let path: string;\n  let trianglePoints: string;\n  if (rtl) {\n    [path, trianglePoints] = drownPathAndTriangleRTL(\n      taskFrom,\n      taskTo,\n      rowHeight,\n      taskHeight,\n      arrowIndent\n    );\n  } else {\n    [path, trianglePoints] = drownPathAndTriangle(\n      taskFrom,\n      taskTo,\n      rowHeight,\n      taskHeight,\n      arrowIndent\n    );\n  }\n\n  return (\n    <g className=\"arrow\">\n      <path strokeWidth=\"1.5\" d={path} fill=\"none\" />\n      <polygon points={trianglePoints} />\n    </g>\n  );\n};\n\nconst drownPathAndTriangle = (\n  taskFrom: BarTask,\n  taskTo: BarTask,\n  rowHeight: number,\n  taskHeight: number,\n  arrowIndent: number\n) => {\n  const indexCompare = taskFrom.index > taskTo.index ? -1 : 1;\n  const taskToEndPosition = taskTo.y + taskHeight / 2;\n  const taskFromEndPosition = taskFrom.x2 + arrowIndent * 2;\n  const taskFromHorizontalOffsetValue =\n    taskFromEndPosition < taskTo.x1 ? \"\" : `H ${taskTo.x1 - arrowIndent}`;\n  const taskToHorizontalOffsetValue =\n    taskFromEndPosition > taskTo.x1\n      ? arrowIndent\n      : taskTo.x1 - taskFrom.x2 - arrowIndent;\n\n  const path = `M ${taskFrom.x2} ${taskFrom.y + taskHeight / 2} \n  h ${arrowIndent} \n  v ${(indexCompare * rowHeight) / 2} \n  ${taskFromHorizontalOffsetValue}\n  V ${taskToEndPosition} \n  h ${taskToHorizontalOffsetValue}`;\n\n  const trianglePoints = `${taskTo.x1},${taskToEndPosition} \n  ${taskTo.x1 - 5},${taskToEndPosition - 5} \n  ${taskTo.x1 - 5},${taskToEndPosition + 5}`;\n  return [path, trianglePoints];\n};\n\nconst drownPathAndTriangleRTL = (\n  taskFrom: BarTask,\n  taskTo: BarTask,\n  rowHeight: number,\n  taskHeight: number,\n  arrowIndent: number\n) => {\n  const indexCompare = taskFrom.index > taskTo.index ? -1 : 1;\n  const taskToEndPosition = taskTo.y + taskHeight / 2;\n  const taskFromEndPosition = taskFrom.x1 - arrowIndent * 2;\n  const taskFromHorizontalOffsetValue =\n    taskFromEndPosition > taskTo.x2 ? \"\" : `H ${taskTo.x2 + arrowIndent}`;\n  const taskToHorizontalOffsetValue =\n    taskFromEndPosition < taskTo.x2\n      ? -arrowIndent\n      : taskTo.x2 - taskFrom.x1 + arrowIndent;\n\n  const path = `M ${taskFrom.x1} ${taskFrom.y + taskHeight / 2} \n  h ${-arrowIndent} \n  v ${(indexCompare * rowHeight) / 2} \n  ${taskFromHorizontalOffsetValue}\n  V ${taskToEndPosition} \n  h ${taskToHorizontalOffsetValue}`;\n\n  const trianglePoints = `${taskTo.x2},${taskToEndPosition} \n  ${taskTo.x2 + 5},${taskToEndPosition + 5} \n  ${taskTo.x2 + 5},${taskToEndPosition - 5}`;\n  return [path, trianglePoints];\n};\n","import { Task } from \"../types/public-types\";\nimport { BarTask, TaskTypeInternal } from \"../types/bar-task\";\nimport { BarMoveAction } from \"../types/gantt-task-actions\";\n\nexport const convertToBarTasks = (\n  tasks: Task[],\n  dates: Date[],\n  columnWidth: number,\n  rowHeight: number,\n  taskHeight: number,\n  barCornerRadius: number,\n  handleWidth: number,\n  rtl: boolean,\n  barProgressColor: string,\n  barProgressSelectedColor: string,\n  barBackgroundColor: string,\n  barBackgroundSelectedColor: string,\n  projectProgressColor: string,\n  projectProgressSelectedColor: string,\n  projectBackgroundColor: string,\n  projectBackgroundSelectedColor: string,\n  milestoneBackgroundColor: string,\n  milestoneBackgroundSelectedColor: string\n) => {\n  const dateDelta =\n    dates[1].getTime() -\n    dates[0].getTime() -\n    dates[1].getTimezoneOffset() * 60 * 1000 +\n    dates[0].getTimezoneOffset() * 60 * 1000;\n  let barTasks = tasks.map((t, i) => {\n    return convertToBarTask(\n      t,\n      i,\n      dates,\n      dateDelta,\n      columnWidth,\n      rowHeight,\n      taskHeight,\n      barCornerRadius,\n      handleWidth,\n      rtl,\n      barProgressColor,\n      barProgressSelectedColor,\n      barBackgroundColor,\n      barBackgroundSelectedColor,\n      projectProgressColor,\n      projectProgressSelectedColor,\n      projectBackgroundColor,\n      projectBackgroundSelectedColor,\n      milestoneBackgroundColor,\n      milestoneBackgroundSelectedColor\n    );\n  });\n\n  // set dependencies\n  barTasks = barTasks.map(task => {\n    const dependencies = task.dependencies || [];\n    for (let j = 0; j < dependencies.length; j++) {\n      const dependence = barTasks.findIndex(\n        value => value.id === dependencies[j]\n      );\n      if (dependence !== -1) barTasks[dependence].barChildren.push(task);\n    }\n    return task;\n  });\n\n  return barTasks;\n};\n\nconst convertToBarTask = (\n  task: Task,\n  index: number,\n  dates: Date[],\n  dateDelta: number,\n  columnWidth: number,\n  rowHeight: number,\n  taskHeight: number,\n  barCornerRadius: number,\n  handleWidth: number,\n  rtl: boolean,\n  barProgressColor: string,\n  barProgressSelectedColor: string,\n  barBackgroundColor: string,\n  barBackgroundSelectedColor: string,\n  projectProgressColor: string,\n  projectProgressSelectedColor: string,\n  projectBackgroundColor: string,\n  projectBackgroundSelectedColor: string,\n  milestoneBackgroundColor: string,\n  milestoneBackgroundSelectedColor: string\n): BarTask => {\n  let barTask: BarTask;\n  switch (task.type) {\n    case \"milestone\":\n      barTask = convertToMilestone(\n        task,\n        index,\n        dates,\n        dateDelta,\n        columnWidth,\n        rowHeight,\n        taskHeight,\n        barCornerRadius,\n        handleWidth,\n        milestoneBackgroundColor,\n        milestoneBackgroundSelectedColor\n      );\n      break;\n    case \"project\":\n      barTask = convertToBar(\n        task,\n        index,\n        dates,\n        dateDelta,\n        columnWidth,\n        rowHeight,\n        taskHeight,\n        barCornerRadius,\n        handleWidth,\n        rtl,\n        projectProgressColor,\n        projectProgressSelectedColor,\n        projectBackgroundColor,\n        projectBackgroundSelectedColor\n      );\n      break;\n    default:\n      barTask = convertToBar(\n        task,\n        index,\n        dates,\n        dateDelta,\n        columnWidth,\n        rowHeight,\n        taskHeight,\n        barCornerRadius,\n        handleWidth,\n        rtl,\n        barProgressColor,\n        barProgressSelectedColor,\n        barBackgroundColor,\n        barBackgroundSelectedColor\n      );\n      break;\n  }\n  return barTask;\n};\n\nconst convertToBar = (\n  task: Task,\n  index: number,\n  dates: Date[],\n  dateDelta: number,\n  columnWidth: number,\n  rowHeight: number,\n  taskHeight: number,\n  barCornerRadius: number,\n  handleWidth: number,\n  rtl: boolean,\n  barProgressColor: string,\n  barProgressSelectedColor: string,\n  barBackgroundColor: string,\n  barBackgroundSelectedColor: string\n): BarTask => {\n  let x1: number;\n  let x2: number;\n  if (rtl) {\n    x2 = taskXCoordinateRTL(task.start, dates, dateDelta, columnWidth);\n    x1 = taskXCoordinateRTL(task.end, dates, dateDelta, columnWidth);\n  } else {\n    x1 = taskXCoordinate(task.start, dates, dateDelta, columnWidth);\n    x2 = taskXCoordinate(task.end, dates, dateDelta, columnWidth);\n  }\n  let typeInternal: TaskTypeInternal = task.type;\n  if (typeInternal === \"task\" && x2 - x1 < handleWidth * 2) {\n    typeInternal = \"smalltask\";\n    x2 = x1 + handleWidth * 2;\n  }\n\n  const [progressWidth, progressX] = progressWithByParams(\n    x1,\n    x2,\n    task.progress,\n    rtl\n  );\n  const y = taskYCoordinate(index, rowHeight, taskHeight);\n  const hideChildren = task.type === \"project\" ? task.hideChildren : undefined;\n\n  const styles = {\n    backgroundColor: barBackgroundColor,\n    backgroundSelectedColor: barBackgroundSelectedColor,\n    progressColor: barProgressColor,\n    progressSelectedColor: barProgressSelectedColor,\n    ...task.styles,\n  };\n  return {\n    ...task,\n    typeInternal,\n    x1,\n    x2,\n    y,\n    index,\n    progressX,\n    progressWidth,\n    barCornerRadius,\n    handleWidth,\n    hideChildren,\n    height: taskHeight,\n    barChildren: [],\n    styles,\n  };\n};\n\nconst convertToMilestone = (\n  task: Task,\n  index: number,\n  dates: Date[],\n  dateDelta: number,\n  columnWidth: number,\n  rowHeight: number,\n  taskHeight: number,\n  barCornerRadius: number,\n  handleWidth: number,\n  milestoneBackgroundColor: string,\n  milestoneBackgroundSelectedColor: string\n): BarTask => {\n  const x = taskXCoordinate(task.start, dates, dateDelta, columnWidth);\n  const y = taskYCoordinate(index, rowHeight, taskHeight);\n\n  const x1 = x - taskHeight * 0.5;\n  const x2 = x + taskHeight * 0.5;\n\n  const rotatedHeight = taskHeight / 1.414;\n  const styles = {\n    backgroundColor: milestoneBackgroundColor,\n    backgroundSelectedColor: milestoneBackgroundSelectedColor,\n    progressColor: \"\",\n    progressSelectedColor: \"\",\n    ...task.styles,\n  };\n  return {\n    ...task,\n    end: task.start,\n    x1,\n    x2,\n    y,\n    index,\n    progressX: 0,\n    progressWidth: 0,\n    barCornerRadius,\n    handleWidth,\n    typeInternal: task.type,\n    progress: 0,\n    height: rotatedHeight,\n    hideChildren: undefined,\n    barChildren: [],\n    styles,\n  };\n};\n\nconst taskXCoordinate = (\n  xDate: Date,\n  dates: Date[],\n  dateDelta: number,\n  columnWidth: number\n) => {\n  const index = ~~(\n    (xDate.getTime() -\n      dates[0].getTime() +\n      xDate.getTimezoneOffset() -\n      dates[0].getTimezoneOffset()) /\n    dateDelta\n  );\n  const x = Math.round(\n    (index +\n      (xDate.getTime() -\n        dates[index].getTime() -\n        xDate.getTimezoneOffset() * 60 * 1000 +\n        dates[index].getTimezoneOffset() * 60 * 1000) /\n        dateDelta) *\n      columnWidth\n  );\n  return x;\n};\nconst taskXCoordinateRTL = (\n  xDate: Date,\n  dates: Date[],\n  dateDelta: number,\n  columnWidth: number\n) => {\n  let x = taskXCoordinate(xDate, dates, dateDelta, columnWidth);\n  x += columnWidth;\n  return x;\n};\nconst taskYCoordinate = (\n  index: number,\n  rowHeight: number,\n  taskHeight: number\n) => {\n  const y = index * rowHeight + (rowHeight - taskHeight) / 2;\n  return y;\n};\n\nexport const progressWithByParams = (\n  taskX1: number,\n  taskX2: number,\n  progress: number,\n  rtl: boolean\n) => {\n  const progressWidth = (taskX2 - taskX1) * progress * 0.01;\n  let progressX: number;\n  if (rtl) {\n    progressX = taskX2 - progressWidth;\n  } else {\n    progressX = taskX1;\n  }\n  return [progressWidth, progressX];\n};\n\nexport const progressByProgressWidth = (\n  progressWidth: number,\n  barTask: BarTask\n) => {\n  const barWidth = barTask.x2 - barTask.x1;\n  const progressPercent = Math.round((progressWidth * 100) / barWidth);\n  if (progressPercent >= 100) return 100;\n  else if (progressPercent <= 0) return 0;\n  else return progressPercent;\n};\n\nconst progressByX = (x: number, task: BarTask) => {\n  if (x >= task.x2) return 100;\n  else if (x <= task.x1) return 0;\n  else {\n    const barWidth = task.x2 - task.x1;\n    const progressPercent = Math.round(((x - task.x1) * 100) / barWidth);\n    return progressPercent;\n  }\n};\nconst progressByXRTL = (x: number, task: BarTask) => {\n  if (x >= task.x2) return 0;\n  else if (x <= task.x1) return 100;\n  else {\n    const barWidth = task.x2 - task.x1;\n    const progressPercent = Math.round(((task.x2 - x) * 100) / barWidth);\n    return progressPercent;\n  }\n};\n\nexport const getProgressPoint = (\n  progressX: number,\n  taskY: number,\n  taskHeight: number\n) => {\n  const point = [\n    progressX - 5,\n    taskY + taskHeight,\n    progressX + 5,\n    taskY + taskHeight,\n    progressX,\n    taskY + taskHeight - 8.66,\n  ];\n  return point.join(\",\");\n};\n\nconst startByX = (x: number, xStep: number, task: BarTask) => {\n  if (x >= task.x2 - task.handleWidth * 2) {\n    x = task.x2 - task.handleWidth * 2;\n  }\n  const steps = Math.round((x - task.x1) / xStep);\n  const additionalXValue = steps * xStep;\n  const newX = task.x1 + additionalXValue;\n  return newX;\n};\n\nconst endByX = (x: number, xStep: number, task: BarTask) => {\n  if (x <= task.x1 + task.handleWidth * 2) {\n    x = task.x1 + task.handleWidth * 2;\n  }\n  const steps = Math.round((x - task.x2) / xStep);\n  const additionalXValue = steps * xStep;\n  const newX = task.x2 + additionalXValue;\n  return newX;\n};\n\nconst moveByX = (x: number, xStep: number, task: BarTask) => {\n  const steps = Math.round((x - task.x1) / xStep);\n  const additionalXValue = steps * xStep;\n  const newX1 = task.x1 + additionalXValue;\n  const newX2 = newX1 + task.x2 - task.x1;\n  return [newX1, newX2];\n};\n\nconst dateByX = (\n  x: number,\n  taskX: number,\n  taskDate: Date,\n  xStep: number,\n  timeStep: number\n) => {\n  let newDate = new Date(((x - taskX) / xStep) * timeStep + taskDate.getTime());\n  newDate = new Date(\n    newDate.getTime() +\n      (newDate.getTimezoneOffset() - taskDate.getTimezoneOffset()) * 60000\n  );\n  return newDate;\n};\n\n/**\n * Method handles event in real time(mousemove) and on finish(mouseup)\n */\nexport const handleTaskBySVGMouseEvent = (\n  svgX: number,\n  action: BarMoveAction,\n  selectedTask: BarTask,\n  xStep: number,\n  timeStep: number,\n  initEventX1Delta: number,\n  rtl: boolean\n): { isChanged: boolean; changedTask: BarTask } => {\n  let result: { isChanged: boolean; changedTask: BarTask };\n  switch (selectedTask.type) {\n    case \"milestone\":\n      result = handleTaskBySVGMouseEventForMilestone(\n        svgX,\n        action,\n        selectedTask,\n        xStep,\n        timeStep,\n        initEventX1Delta\n      );\n      break;\n    default:\n      result = handleTaskBySVGMouseEventForBar(\n        svgX,\n        action,\n        selectedTask,\n        xStep,\n        timeStep,\n        initEventX1Delta,\n        rtl\n      );\n      break;\n  }\n  return result;\n};\n\nconst handleTaskBySVGMouseEventForBar = (\n  svgX: number,\n  action: BarMoveAction,\n  selectedTask: BarTask,\n  xStep: number,\n  timeStep: number,\n  initEventX1Delta: number,\n  rtl: boolean\n): { isChanged: boolean; changedTask: BarTask } => {\n  const changedTask: BarTask = { ...selectedTask };\n  let isChanged = false;\n  switch (action) {\n    case \"progress\":\n      if (rtl) {\n        changedTask.progress = progressByXRTL(svgX, selectedTask);\n      } else {\n        changedTask.progress = progressByX(svgX, selectedTask);\n      }\n      isChanged = changedTask.progress !== selectedTask.progress;\n      if (isChanged) {\n        const [progressWidth, progressX] = progressWithByParams(\n          changedTask.x1,\n          changedTask.x2,\n          changedTask.progress,\n          rtl\n        );\n        changedTask.progressWidth = progressWidth;\n        changedTask.progressX = progressX;\n      }\n      break;\n    case \"start\": {\n      const newX1 = startByX(svgX, xStep, selectedTask);\n      changedTask.x1 = newX1;\n      isChanged = changedTask.x1 !== selectedTask.x1;\n      if (isChanged) {\n        if (rtl) {\n          changedTask.end = dateByX(\n            newX1,\n            selectedTask.x1,\n            selectedTask.end,\n            xStep,\n            timeStep\n          );\n        } else {\n          changedTask.start = dateByX(\n            newX1,\n            selectedTask.x1,\n            selectedTask.start,\n            xStep,\n            timeStep\n          );\n        }\n        const [progressWidth, progressX] = progressWithByParams(\n          changedTask.x1,\n          changedTask.x2,\n          changedTask.progress,\n          rtl\n        );\n        changedTask.progressWidth = progressWidth;\n        changedTask.progressX = progressX;\n      }\n      break;\n    }\n    case \"end\": {\n      const newX2 = endByX(svgX, xStep, selectedTask);\n      changedTask.x2 = newX2;\n      isChanged = changedTask.x2 !== selectedTask.x2;\n      if (isChanged) {\n        if (rtl) {\n          changedTask.start = dateByX(\n            newX2,\n            selectedTask.x2,\n            selectedTask.start,\n            xStep,\n            timeStep\n          );\n        } else {\n          changedTask.end = dateByX(\n            newX2,\n            selectedTask.x2,\n            selectedTask.end,\n            xStep,\n            timeStep\n          );\n        }\n        const [progressWidth, progressX] = progressWithByParams(\n          changedTask.x1,\n          changedTask.x2,\n          changedTask.progress,\n          rtl\n        );\n        changedTask.progressWidth = progressWidth;\n        changedTask.progressX = progressX;\n      }\n      break;\n    }\n    case \"move\": {\n      const [newMoveX1, newMoveX2] = moveByX(\n        svgX - initEventX1Delta,\n        xStep,\n        selectedTask\n      );\n      isChanged = newMoveX1 !== selectedTask.x1;\n      if (isChanged) {\n        changedTask.start = dateByX(\n          newMoveX1,\n          selectedTask.x1,\n          selectedTask.start,\n          xStep,\n          timeStep\n        );\n        changedTask.end = dateByX(\n          newMoveX2,\n          selectedTask.x2,\n          selectedTask.end,\n          xStep,\n          timeStep\n        );\n        changedTask.x1 = newMoveX1;\n        changedTask.x2 = newMoveX2;\n        const [progressWidth, progressX] = progressWithByParams(\n          changedTask.x1,\n          changedTask.x2,\n          changedTask.progress,\n          rtl\n        );\n        changedTask.progressWidth = progressWidth;\n        changedTask.progressX = progressX;\n      }\n      break;\n    }\n  }\n  return { isChanged, changedTask };\n};\n\nconst handleTaskBySVGMouseEventForMilestone = (\n  svgX: number,\n  action: BarMoveAction,\n  selectedTask: BarTask,\n  xStep: number,\n  timeStep: number,\n  initEventX1Delta: number\n): { isChanged: boolean; changedTask: BarTask } => {\n  const changedTask: BarTask = { ...selectedTask };\n  let isChanged = false;\n  switch (action) {\n    case \"move\": {\n      const [newMoveX1, newMoveX2] = moveByX(\n        svgX - initEventX1Delta,\n        xStep,\n        selectedTask\n      );\n      isChanged = newMoveX1 !== selectedTask.x1;\n      if (isChanged) {\n        changedTask.start = dateByX(\n          newMoveX1,\n          selectedTask.x1,\n          selectedTask.start,\n          xStep,\n          timeStep\n        );\n        changedTask.end = changedTask.start;\n        changedTask.x1 = newMoveX1;\n        changedTask.x2 = newMoveX2;\n      }\n      break;\n    }\n  }\n  return { isChanged, changedTask };\n};\n","import { BarTask } from \"../types/bar-task\";\nimport { Task } from \"../types/public-types\";\n\nexport function isKeyboardEvent(\n  event: React.MouseEvent | React.KeyboardEvent | React.FocusEvent\n): event is React.KeyboardEvent {\n  return (event as React.KeyboardEvent).key !== undefined;\n}\n\nexport function isMouseEvent(\n  event: React.MouseEvent | React.KeyboardEvent | React.FocusEvent\n): event is React.MouseEvent {\n  return (event as React.MouseEvent).clientX !== undefined;\n}\n\nexport function isBarTask(task: Task | BarTask): task is BarTask {\n  return (task as BarTask).x1 !== undefined;\n}\n\nexport function removeHiddenTasks(tasks: Task[]) {\n  const groupedTasks = tasks.filter(\n    t => t.hideChildren && t.type === \"project\"\n  );\n  if (groupedTasks.length > 0) {\n    for (let i = 0; groupedTasks.length > i; i++) {\n      const groupedTask = groupedTasks[i];\n      const children = getChildren(tasks, groupedTask);\n      tasks = tasks.filter(t => children.indexOf(t) === -1);\n    }\n  }\n  return tasks;\n}\n\nfunction getChildren(taskList: Task[], task: Task) {\n  let tasks: Task[] = [];\n  if (task.type !== \"project\") {\n    tasks = taskList.filter(\n      t => t.dependencies && t.dependencies.indexOf(task.id) !== -1\n    );\n  } else {\n    tasks = taskList.filter(t => t.project && t.project === task.id);\n  }\n  const taskChildren = tasks.reduce(\n    (children: Task[], t) =>\n      children.concat(children, getChildren(taskList, t)),\n    []\n  );\n  tasks = tasks.concat(tasks, taskChildren);\n  return tasks;\n}\n","import React from \"react\";\nimport style from \"./bar.module.css\";\n\ntype BarDisplayProps = {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  isSelected: boolean;\n  /* progress start point */\n  progressX: number;\n  progressWidth: number;\n  barCornerRadius: number;\n  styles: {\n    backgroundColor: string;\n    backgroundSelectedColor: string;\n    progressColor: string;\n    progressSelectedColor: string;\n  };\n  onMouseDown: (event: React.MouseEvent<SVGPolygonElement, MouseEvent>) => void;\n};\nexport const BarDisplay: React.FC<BarDisplayProps> = ({\n  x,\n  y,\n  width,\n  height,\n  isSelected,\n  progressX,\n  progressWidth,\n  barCornerRadius,\n  styles,\n  onMouseDown,\n}) => {\n  const getProcessColor = () => {\n    return isSelected ? styles.progressSelectedColor : styles.progressColor;\n  };\n\n  const getBarColor = () => {\n    return isSelected ? styles.backgroundSelectedColor : styles.backgroundColor;\n  };\n\n  return (\n    <g onMouseDown={onMouseDown}>\n      <rect\n        x={x}\n        width={width}\n        y={y}\n        height={height}\n        ry={barCornerRadius}\n        rx={barCornerRadius}\n        fill={getBarColor()}\n        className={style.barBackground}\n      />\n      <rect\n        x={progressX}\n        width={progressWidth}\n        y={y}\n        height={height}\n        ry={barCornerRadius}\n        rx={barCornerRadius}\n        fill={getProcessColor()}\n      />\n    </g>\n  );\n};\n","import React from \"react\";\nimport styles from \"./bar.module.css\";\n\ntype BarDateHandleProps = {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  barCornerRadius: number;\n  onMouseDown: (event: React.MouseEvent<SVGRectElement, MouseEvent>) => void;\n};\nexport const BarDateHandle: React.FC<BarDateHandleProps> = ({\n  x,\n  y,\n  width,\n  height,\n  barCornerRadius,\n  onMouseDown,\n}) => {\n  return (\n    <rect\n      x={x}\n      y={y}\n      width={width}\n      height={height}\n      className={styles.barHandle}\n      ry={barCornerRadius}\n      rx={barCornerRadius}\n      onMouseDown={onMouseDown}\n    />\n  );\n};\n","import React from \"react\";\nimport styles from \"./bar.module.css\";\n\ntype BarProgressHandleProps = {\n  progressPoint: string;\n  onMouseDown: (event: React.MouseEvent<SVGPolygonElement, MouseEvent>) => void;\n};\nexport const BarProgressHandle: React.FC<BarProgressHandleProps> = ({\n  progressPoint,\n  onMouseDown,\n}) => {\n  return (\n    <polygon\n      className={styles.barHandle}\n      points={progressPoint}\n      onMouseDown={onMouseDown}\n    />\n  );\n};\n","import React from \"react\";\nimport { getProgressPoint } from \"../../../helpers/bar-helper\";\nimport { BarDisplay } from \"./bar-display\";\nimport { BarDateHandle } from \"./bar-date-handle\";\nimport { BarProgressHandle } from \"./bar-progress-handle\";\nimport { TaskItemProps } from \"../task-item\";\nimport styles from \"./bar.module.css\";\n\nexport const Bar: React.FC<TaskItemProps> = ({\n  task,\n  isProgressChangeable,\n  isDateChangeable,\n  rtl,\n  onEventStart,\n  isSelected,\n}) => {\n  const progressPoint = getProgressPoint(\n    +!rtl * task.progressWidth + task.progressX,\n    task.y,\n    task.height\n  );\n  const handleHeight = task.height - 2;\n  return (\n    <g className={styles.barWrapper} tabIndex={0}>\n      <BarDisplay\n        x={task.x1}\n        y={task.y}\n        width={task.x2 - task.x1}\n        height={task.height}\n        progressX={task.progressX}\n        progressWidth={task.progressWidth}\n        barCornerRadius={task.barCornerRadius}\n        styles={task.styles}\n        isSelected={isSelected}\n        onMouseDown={e => {\n          isDateChangeable && onEventStart(\"move\", task, e);\n        }}\n      />\n      <g className=\"handleGroup\">\n        {isDateChangeable && (\n          <g>\n            {/* left */}\n            <BarDateHandle\n              x={task.x1 + 1}\n              y={task.y + 1}\n              width={task.handleWidth}\n              height={handleHeight}\n              barCornerRadius={task.barCornerRadius}\n              onMouseDown={e => {\n                onEventStart(\"start\", task, e);\n              }}\n            />\n            {/* right */}\n            <BarDateHandle\n              x={task.x2 - task.handleWidth - 1}\n              y={task.y + 1}\n              width={task.handleWidth}\n              height={handleHeight}\n              barCornerRadius={task.barCornerRadius}\n              onMouseDown={e => {\n                onEventStart(\"end\", task, e);\n              }}\n            />\n          </g>\n        )}\n        {isProgressChangeable && (\n          <BarProgressHandle\n            progressPoint={progressPoint}\n            onMouseDown={e => {\n              onEventStart(\"progress\", task, e);\n            }}\n          />\n        )}\n      </g>\n    </g>\n  );\n};\n","import React from \"react\";\nimport { getProgressPoint } from \"../../../helpers/bar-helper\";\nimport { BarDisplay } from \"./bar-display\";\nimport { BarProgressHandle } from \"./bar-progress-handle\";\nimport { TaskItemProps } from \"../task-item\";\nimport styles from \"./bar.module.css\";\n\nexport const BarSmall: React.FC<TaskItemProps> = ({\n  task,\n  isProgressChangeable,\n  isDateChangeable,\n  onEventStart,\n  isSelected,\n}) => {\n  const progressPoint = getProgressPoint(\n    task.progressWidth + task.x1,\n    task.y,\n    task.height\n  );\n  return (\n    <g className={styles.barWrapper} tabIndex={0}>\n      <BarDisplay\n        x={task.x1}\n        y={task.y}\n        width={task.x2 - task.x1}\n        height={task.height}\n        progressX={task.progressX}\n        progressWidth={task.progressWidth}\n        barCornerRadius={task.barCornerRadius}\n        styles={task.styles}\n        isSelected={isSelected}\n        onMouseDown={e => {\n          isDateChangeable && onEventStart(\"move\", task, e);\n        }}\n      />\n      <g className=\"handleGroup\">\n        {isProgressChangeable && (\n          <BarProgressHandle\n            progressPoint={progressPoint}\n            onMouseDown={e => {\n              onEventStart(\"progress\", task, e);\n            }}\n          />\n        )}\n      </g>\n    </g>\n  );\n};\n","import React from \"react\";\nimport { TaskItemProps } from \"../task-item\";\nimport styles from \"./milestone.module.css\";\n\nexport const Milestone: React.FC<TaskItemProps> = ({\n  task,\n  isDateChangeable,\n  onEventStart,\n  isSelected,\n}) => {\n  const transform = `rotate(45 ${task.x1 + task.height * 0.356} \n    ${task.y + task.height * 0.85})`;\n  const getBarColor = () => {\n    return isSelected\n      ? task.styles.backgroundSelectedColor\n      : task.styles.backgroundColor;\n  };\n\n  return (\n    <g tabIndex={0} className={styles.milestoneWrapper}>\n      <rect\n        fill={getBarColor()}\n        x={task.x1}\n        width={task.height}\n        y={task.y}\n        height={task.height}\n        rx={task.barCornerRadius}\n        ry={task.barCornerRadius}\n        transform={transform}\n        className={styles.milestoneBackground}\n        onMouseDown={e => {\n          isDateChangeable && onEventStart(\"move\", task, e);\n        }}\n      />\n    </g>\n  );\n};\n","import React from \"react\";\nimport { TaskItemProps } from \"../task-item\";\nimport styles from \"./project.module.css\";\n\nexport const Project: React.FC<TaskItemProps> = ({ task, isSelected }) => {\n  const barColor = isSelected\n    ? task.styles.backgroundSelectedColor\n    : task.styles.backgroundColor;\n  const processColor = isSelected\n    ? task.styles.progressSelectedColor\n    : task.styles.progressColor;\n  const projectWith = task.x2 - task.x1;\n\n  const projectLeftTriangle = [\n    task.x1,\n    task.y + task.height / 2 - 1,\n    task.x1,\n    task.y + task.height,\n    task.x1 + 15,\n    task.y + task.height / 2 - 1,\n  ].join(\",\");\n  const projectRightTriangle = [\n    task.x2,\n    task.y + task.height / 2 - 1,\n    task.x2,\n    task.y + task.height,\n    task.x2 - 15,\n    task.y + task.height / 2 - 1,\n  ].join(\",\");\n\n  return (\n    <g tabIndex={0} className={styles.projectWrapper}>\n      <rect\n        fill={barColor}\n        x={task.x1}\n        width={projectWith}\n        y={task.y}\n        height={task.height}\n        rx={task.barCornerRadius}\n        ry={task.barCornerRadius}\n        className={styles.projectBackground}\n      />\n      <rect\n        x={task.progressX}\n        width={task.progressWidth}\n        y={task.y}\n        height={task.height}\n        ry={task.barCornerRadius}\n        rx={task.barCornerRadius}\n        fill={processColor}\n      />\n      <rect\n        fill={barColor}\n        x={task.x1}\n        width={projectWith}\n        y={task.y}\n        height={task.height / 2}\n        rx={task.barCornerRadius}\n        ry={task.barCornerRadius}\n        className={styles.projectTop}\n      />\n      <polygon\n        className={styles.projectTop}\n        points={projectLeftTriangle}\n        fill={barColor}\n      />\n      <polygon\n        className={styles.projectTop}\n        points={projectRightTriangle}\n        fill={barColor}\n      />\n    </g>\n  );\n};\n","import Typography from \"@mui/material/Typography\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { BarTask } from \"../../types/bar-task\";\nimport { GanttContentMoveAction } from \"../../types/gantt-task-actions\";\nimport { Bar } from \"./bar/bar\";\nimport { BarSmall } from \"./bar/bar-small\";\nimport { Milestone } from \"./milestone/milestone\";\nimport { Project } from \"./project/project\";\nimport style from \"./task-list.module.css\";\n\nexport type TaskItemProps = {\n  task: BarTask;\n  arrowIndent: number;\n  taskHeight: number;\n  isProgressChangeable: boolean;\n  isDateChangeable: boolean;\n  isDelete: boolean;\n  isSelected: boolean;\n  rtl: boolean;\n  onEventStart: (\n    action: GanttContentMoveAction,\n    selectedTask: BarTask,\n    event?: React.MouseEvent | React.KeyboardEvent\n  ) => any;\n};\n\nexport const TaskItem: React.FC<TaskItemProps> = props => {\n  const {\n    task,\n    arrowIndent,\n    isDelete,\n    taskHeight,\n    isSelected,\n    rtl,\n    onEventStart,\n  } = {\n    ...props,\n  };\n  const textRef = useRef<SVGTextElement>(null);\n  const [taskItem, setTaskItem] = useState<JSX.Element>(<div />);\n  const [isTextInside, setIsTextInside] = useState(true);\n\n  useEffect(() => {\n    switch (task.typeInternal) {\n      case \"milestone\":\n        setTaskItem(<Milestone {...props} />);\n        break;\n      case \"project\":\n        setTaskItem(<Project {...props} />);\n        break;\n      case \"smalltask\":\n        setTaskItem(<BarSmall {...props} />);\n        break;\n      default:\n        setTaskItem(<Bar {...props} />);\n        break;\n    }\n  }, [task, isSelected]);\n\n  useEffect(() => {\n    if (textRef.current) {\n      setIsTextInside(textRef.current.getBBox().width < task.x2 - task.x1);\n    }\n  }, [textRef, task]);\n\n  const getX = () => {\n    const width = task.x2 - task.x1;\n    const hasChild = task.barChildren.length > 0;\n    if (isTextInside) {\n      return task.x1 + width * 0.5;\n    }\n    if (rtl && textRef.current) {\n      return (\n        task.x1 -\n        textRef.current.getBBox().width -\n        arrowIndent * +hasChild -\n        arrowIndent * 0.2\n      );\n    } else {\n      return task.x1 + width + arrowIndent * +hasChild + arrowIndent * 0.2;\n    }\n  };\n\n  return (\n    <g\n      onKeyDown={e => {\n        switch (e.key) {\n          case \"Delete\": {\n            if (isDelete) onEventStart(\"delete\", task, e);\n            break;\n          }\n        }\n        e.stopPropagation();\n      }}\n      onMouseEnter={e => {\n        onEventStart(\"mouseenter\", task, e);\n      }}\n      onMouseLeave={e => {\n        onEventStart(\"mouseleave\", task, e);\n      }}\n      onDoubleClick={e => {\n        onEventStart(\"dblclick\", task, e);\n      }}\n      onFocus={() => {\n        onEventStart(\"select\", task);\n      }}\n    >\n      {taskItem}\n      <Typography\n       component=\"text\"\n      variant=\"caption\"\n       style={{padding:0, margin: 0 }}\n        x={getX()}\n        y={task.y + taskHeight * 0.5}\n        className={\n          isTextInside\n            ? style.barLabel\n            : style.barLabel && style.barLabelOutside\n        }\n        ref={textRef}\n      >\n        {task.name}\n      </Typography>\n    </g>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { EventOption } from \"../../types/public-types\";\nimport { BarTask } from \"../../types/bar-task\";\nimport { Arrow } from \"../other/arrow\";\nimport { handleTaskBySVGMouseEvent } from \"../../helpers/bar-helper\";\nimport { isKeyboardEvent } from \"../../helpers/other-helper\";\nimport { TaskItem } from \"../task-item/task-item\";\nimport {\n  BarMoveAction,\n  GanttContentMoveAction,\n  GanttEvent,\n} from \"../../types/gantt-task-actions\";\n\nexport type TaskGanttContentProps = {\n  tasks: BarTask[];\n  dates: Date[];\n  ganttEvent: GanttEvent;\n  selectedTask: BarTask | undefined;\n  rowHeight: number;\n  columnWidth: number;\n  timeStep: number;\n  svg?: React.RefObject<SVGSVGElement>;\n  svgWidth: number;\n  taskHeight: number;\n  arrowColor: string;\n  arrowIndent: number;\n  fontSize: string;\n  fontFamily: string;\n  rtl: boolean;\n  setGanttEvent: (value: GanttEvent) => void;\n  setFailedTask: (value: BarTask | null) => void;\n  setSelectedTask: (taskId: string) => void;\n} & EventOption;\n\nexport const TaskGanttContent: React.FC<TaskGanttContentProps> = ({\n  tasks,\n  dates,\n  ganttEvent,\n  selectedTask,\n  rowHeight,\n  columnWidth,\n  timeStep,\n  svg,\n  taskHeight,\n  arrowColor,\n  arrowIndent,\n  fontFamily,\n  fontSize,\n  rtl,\n  setGanttEvent,\n  setFailedTask,\n  setSelectedTask,\n  onDateChange,\n  onProgressChange,\n  onDoubleClick,\n  onDelete,\n}) => {\n  const point = svg?.current?.createSVGPoint();\n  const [xStep, setXStep] = useState(0);\n  const [initEventX1Delta, setInitEventX1Delta] = useState(0);\n  const [isMoving, setIsMoving] = useState(false);\n\n  // create xStep\n  useEffect(() => {\n    const dateDelta =\n      dates[1].getTime() -\n      dates[0].getTime() -\n      dates[1].getTimezoneOffset() * 60 * 1000 +\n      dates[0].getTimezoneOffset() * 60 * 1000;\n    const newXStep = (timeStep * columnWidth) / dateDelta;\n    setXStep(newXStep);\n  }, [columnWidth, dates, timeStep]);\n\n  useEffect(() => {\n    const handleMouseMove = async (event: MouseEvent) => {\n      if (!ganttEvent.changedTask || !point || !svg?.current) return;\n      event.preventDefault();\n\n      point.x = event.clientX;\n      const cursor = point.matrixTransform(\n        svg?.current.getScreenCTM()?.inverse()\n      );\n\n      const { isChanged, changedTask } = handleTaskBySVGMouseEvent(\n        cursor.x,\n        ganttEvent.action as BarMoveAction,\n        ganttEvent.changedTask,\n        xStep,\n        timeStep,\n        initEventX1Delta,\n        rtl\n      );\n      if (isChanged) {\n        setGanttEvent({ action: ganttEvent.action, changedTask });\n      }\n    };\n\n    const handleMouseUp = async (event: MouseEvent) => {\n      const { action, originalSelectedTask, changedTask } = ganttEvent;\n      if (!changedTask || !point || !svg?.current || !originalSelectedTask)\n        return;\n      event.preventDefault();\n\n      point.x = event.clientX;\n      const cursor = point.matrixTransform(\n        svg?.current.getScreenCTM()?.inverse()\n      );\n      const { changedTask: newChangedTask } = handleTaskBySVGMouseEvent(\n        cursor.x,\n        action as BarMoveAction,\n        changedTask,\n        xStep,\n        timeStep,\n        initEventX1Delta,\n        rtl\n      );\n\n      const isNotLikeOriginal =\n        originalSelectedTask.start !== newChangedTask.start ||\n        originalSelectedTask.end !== newChangedTask.end ||\n        originalSelectedTask.progress !== newChangedTask.progress;\n\n      // remove listeners\n      svg.current.removeEventListener(\"mousemove\", handleMouseMove);\n      svg.current.removeEventListener(\"mouseup\", handleMouseUp);\n      setGanttEvent({ action: \"\" });\n      setIsMoving(false);\n\n      // custom operation start\n      let operationSuccess = true;\n      if (\n        (action === \"move\" || action === \"end\" || action === \"start\") &&\n        onDateChange &&\n        isNotLikeOriginal\n      ) {\n        try {\n          const result = await onDateChange(\n            newChangedTask,\n            newChangedTask.barChildren\n          );\n          if (result !== undefined) {\n            operationSuccess = result;\n          }\n        } catch (error) {\n          operationSuccess = false;\n        }\n      } else if (onProgressChange && isNotLikeOriginal) {\n        try {\n          const result = await onProgressChange(\n            newChangedTask,\n            newChangedTask.barChildren\n          );\n          if (result !== undefined) {\n            operationSuccess = result;\n          }\n        } catch (error) {\n          operationSuccess = false;\n        }\n      }\n\n      // If operation is failed - return old state\n      if (!operationSuccess) {\n        setFailedTask(originalSelectedTask);\n      }\n    };\n\n    if (\n      !isMoving &&\n      (ganttEvent.action === \"move\" ||\n        ganttEvent.action === \"end\" ||\n        ganttEvent.action === \"start\" ||\n        ganttEvent.action === \"progress\") &&\n      svg?.current\n    ) {\n      svg.current.addEventListener(\"mousemove\", handleMouseMove);\n      svg.current.addEventListener(\"mouseup\", handleMouseUp);\n      setIsMoving(true);\n    }\n  }, [\n    ganttEvent,\n    xStep,\n    initEventX1Delta,\n    onProgressChange,\n    timeStep,\n    onDateChange,\n    svg,\n    isMoving,\n  ]);\n\n  /**\n   * Method is Start point of task change\n   */\n  const handleBarEventStart = async (\n    action: GanttContentMoveAction,\n    task: BarTask,\n    event?: React.MouseEvent | React.KeyboardEvent\n  ) => {\n    if (!event) {\n      if (action === \"select\") {\n        setSelectedTask(task.id);\n      }\n    }\n    // Keyboard events\n    else if (isKeyboardEvent(event)) {\n      if (action === \"delete\") {\n        if (onDelete) {\n          try {\n            const result = await onDelete(task);\n            if (result !== undefined && result) {\n              setGanttEvent({ action, changedTask: task });\n            }\n          } catch (error) {\n            console.error(\"Error on Delete. \" + error);\n          }\n        }\n      }\n    }\n    // Mouse Events\n    else if (action === \"mouseenter\") {\n      if (!ganttEvent.action) {\n        setGanttEvent({\n          action,\n          changedTask: task,\n          originalSelectedTask: task,\n        });\n      }\n    } else if (action === \"mouseleave\") {\n      if (ganttEvent.action === \"mouseenter\") {\n        setGanttEvent({ action: \"\" });\n      }\n    } else if (action === \"dblclick\") {\n      !!onDoubleClick && onDoubleClick(task);\n    }\n    // Change task event start\n    else if (action === \"move\") {\n      if (!svg?.current || !point) return;\n      point.x = event.clientX;\n      const cursor = point.matrixTransform(\n        svg.current.getScreenCTM()?.inverse()\n      );\n      setInitEventX1Delta(cursor.x - task.x1);\n      setGanttEvent({\n        action,\n        changedTask: task,\n        originalSelectedTask: task,\n      });\n    } else {\n      setGanttEvent({\n        action,\n        changedTask: task,\n        originalSelectedTask: task,\n      });\n    }\n  };\n\n  return (\n    <g className=\"content\">\n      <g className=\"arrows\" fill={arrowColor} stroke={arrowColor}>\n        {tasks.map(task => {\n          return task.barChildren.map(child => {\n            return (\n              <Arrow\n                key={`Arrow from ${task.id} to ${tasks[child.index].id}`}\n                taskFrom={task}\n                taskTo={tasks[child.index]}\n                rowHeight={rowHeight}\n                taskHeight={taskHeight}\n                arrowIndent={arrowIndent}\n                rtl={rtl}\n              />\n            );\n          });\n        })}\n      </g>\n      <g className=\"bar\" fontFamily={fontFamily} fontSize={fontSize}>\n        {tasks.map(task => {\n          return (\n            <TaskItem\n              task={task}\n              arrowIndent={arrowIndent}\n              taskHeight={taskHeight}\n              isProgressChangeable={!!onProgressChange && !task.isDisabled}\n              isDateChangeable={!!onDateChange && !task.isDisabled}\n              isDelete={!task.isDisabled}\n              onEventStart={handleBarEventStart}\n              key={task.id}\n              isSelected={!!selectedTask && task.id === selectedTask.id}\n              rtl={rtl}\n            />\n          );\n        })}\n      </g>\n    </g>\n  );\n};\n","import React, { useRef, useEffect } from \"react\";\nimport { GridProps, Grid } from \"../grid/grid\";\nimport { CalendarProps, Calendar } from \"../calendar/calendar\";\nimport { TaskGanttContentProps, TaskGanttContent } from \"./task-gantt-content\";\nimport styles from \"./gantt.module.css\";\n\nexport type TaskGanttProps = {\n  gridProps: GridProps;\n  calendarProps: CalendarProps;\n  barProps: TaskGanttContentProps;\n  ganttHeight: number;\n  scrollY: number;\n  scrollX: number;\n};\nexport const TaskGantt: React.FC<TaskGanttProps> = ({\n  gridProps,\n  calendarProps,\n  barProps,\n  ganttHeight,\n  scrollY,\n  scrollX,\n}) => {\n  const ganttSVGRef = useRef<SVGSVGElement>(null);\n  const horizontalContainerRef = useRef<HTMLDivElement>(null);\n  const verticalGanttContainerRef = useRef<HTMLDivElement>(null);\n  const newBarProps = { ...barProps, svg: ganttSVGRef };\n\n  useEffect(() => {\n    if (horizontalContainerRef.current) {\n      horizontalContainerRef.current.scrollTop = scrollY;\n    }\n  }, [scrollY]);\n\n  useEffect(() => {\n    if (verticalGanttContainerRef.current) {\n      verticalGanttContainerRef.current.scrollLeft = scrollX;\n    }\n  }, [scrollX]);\n\n  return (\n    <div\n      className={styles.ganttVerticalContainer}\n      ref={verticalGanttContainerRef}\n      dir=\"ltr\"\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width={gridProps.svgWidth}\n        height={calendarProps.headerHeight}\n        fontFamily={barProps.fontFamily}\n      >\n        <Calendar {...calendarProps} />\n      </svg>\n      <div\n        ref={horizontalContainerRef}\n        className={styles.horizontalContainer}\n        style={\n          ganttHeight\n            ? { height: ganttHeight, width: gridProps.svgWidth }\n            : { width: gridProps.svgWidth }\n        }\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width={gridProps.svgWidth}\n          height={barProps.rowHeight * barProps.tasks.length}\n          fontFamily={barProps.fontFamily}\n          ref={ganttSVGRef}\n        >\n          <Grid {...gridProps} />\n          <TaskGanttContent {...newBarProps} />\n        </svg>\n      </div>\n    </div>\n  );\n};\n","import React, { SyntheticEvent, useRef, useEffect } from \"react\";\nimport styles from \"./horizontal-scroll.module.css\";\n\nexport const HorizontalScroll: React.FC<{\n  scroll: number;\n  svgWidth: number;\n  taskListWidth: number;\n  rtl: boolean;\n  onScroll: (event: SyntheticEvent<HTMLDivElement>) => void;\n}> = ({ scroll, svgWidth, taskListWidth, rtl, onScroll }) => {\n  const scrollRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (scrollRef.current) {\n      scrollRef.current.scrollLeft = scroll;\n    }\n  }, [scroll]);\n\n  return (\n    <div\n      dir=\"ltr\"\n      style={{\n        margin: rtl\n          ? `0px ${taskListWidth}px 0px 0px`\n          : `0px 0px 0px ${taskListWidth}px`,\n      }}\n      className={styles.scroll}\n      onScroll={onScroll}\n      ref={scrollRef}\n    >\n      <div style={{ width: svgWidth, height: 1 }} />\n    </div>\n  );\n};\n","import React, { useState, SyntheticEvent, useRef, useEffect } from \"react\";\nimport { ViewMode, GanttProps, Task } from \"../../types/public-types\";\nimport { GridProps } from \"../grid/grid\";\nimport { ganttDateRange, seedDates } from \"../../helpers/date-helper\";\nimport { CalendarProps } from \"../calendar/calendar\";\nimport { TaskGanttContentProps } from \"./task-gantt-content\";\nimport { TaskListHeaderDefault } from \"../task-list/task-list-header\";\nimport { TaskListTableDefault } from \"../task-list/task-list-table\";\nimport { StandardTooltipContent, Tooltip } from \"../other/tooltip\";\nimport { VerticalScroll } from \"../other/vertical-scroll\";\nimport { TaskListProps, TaskList } from \"../task-list/task-list\";\nimport { TaskGantt } from \"./task-gantt\";\nimport { BarTask } from \"../../types/bar-task\";\nimport { convertToBarTasks } from \"../../helpers/bar-helper\";\nimport { GanttEvent } from \"../../types/gantt-task-actions\";\nimport { DateSetup } from \"../../types/date-setup\";\nimport styles from \"./gantt.module.css\";\nimport { HorizontalScroll } from \"../other/horizontal-scroll\";\nimport { removeHiddenTasks } from \"../../helpers/other-helper\";\nimport { useTheme } from \"@mui/material\";\n\nexport const Gantt: React.FunctionComponent<GanttProps> = ({\n  tasks,\n  headerHeight = 50,\n  columnWidth = 60,\n  listCellWidth = \"155px\",\n  rowHeight = 50,\n  ganttHeight = 0,\n  viewMode = ViewMode.Day,\n  locale = \"en-GB\",\n  barFill = 60,\n  barCornerRadius = 3,\n  barProgressColor = \"#a3a3ff\",\n  barProgressSelectedColor = \"#8282f5\",\n  barBackgroundColor = \"#b8c2cc\",\n  barBackgroundSelectedColor = \"#aeb8c2\",\n  projectProgressColor = \"#7db59a\",\n  projectProgressSelectedColor = \"#59a985\",\n  projectBackgroundColor = \"#fac465\",\n  projectBackgroundSelectedColor = \"#f7bb53\",\n  milestoneBackgroundColor = \"#f1c453\",\n  milestoneBackgroundSelectedColor = \"#f29e4c\",\n  rtl = false,\n  handleWidth = 8,\n  timeStep = 300000,\n  arrowColor = \"grey\",\n  fontFamily = \"Arial, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue\",\n  fontSize = \"14px\",\n  arrowIndent = 20,\n  todayColor = \"rgba(252, 248, 227, 0.5)\",\n  TooltipContent = StandardTooltipContent,\n  TaskListHeader = TaskListHeaderDefault,\n  TaskListTable = TaskListTableDefault,\n  onDateChange,\n  onProgressChange,\n  onDoubleClick,\n  onDelete,\n  onSelect,\n  onExpanderClick,\n}) => {\n  const wrapperRef = useRef<HTMLDivElement>(null);\n  const taskListRef = useRef<HTMLDivElement>(null);\n  const [dateSetup, setDateSetup] = useState<DateSetup>(() => {\n    const [startDate, endDate] = ganttDateRange(tasks, viewMode);\n    return { viewMode, dates: seedDates(startDate, endDate, viewMode) };\n  });\n\n  const [taskHeight, setTaskHeight] = useState((rowHeight * barFill) / 100);\n  const [taskListWidth, setTaskListWidth] = useState(0);\n  const [svgContainerWidth, setSvgContainerWidth] = useState(0);\n  const [svgContainerHeight, setSvgContainerHeight] = useState(ganttHeight);\n  const [barTasks, setBarTasks] = useState<BarTask[]>([]);\n  const [ganttEvent, setGanttEvent] = useState<GanttEvent>({\n    action: \"\",\n  });\n\n  const [selectedTask, setSelectedTask] = useState<BarTask>();\n  const [failedTask, setFailedTask] = useState<BarTask | null>(null);\n\n  const svgWidth = dateSetup.dates.length * columnWidth;\n  const ganttFullHeight = barTasks.length * rowHeight;\n\n  const [scrollY, setScrollY] = useState(0);\n  const [scrollX, setScrollX] = useState(-1);\n  const [ignoreScrollEvent, setIgnoreScrollEvent] = useState(false);\n\n  // task change events\n  useEffect(() => {\n    let filteredTasks: Task[];\n    if (onExpanderClick) {\n      filteredTasks = removeHiddenTasks(tasks);\n    } else {\n      filteredTasks = tasks;\n    }\n    const [startDate, endDate] = ganttDateRange(filteredTasks, viewMode);\n    let newDates = seedDates(startDate, endDate, viewMode);\n    if (rtl) {\n      newDates = newDates.reverse();\n      if (scrollX === -1) {\n        setScrollX(newDates.length * columnWidth);\n      }\n    }\n    setDateSetup({ dates: newDates, viewMode });\n    setBarTasks(\n      convertToBarTasks(\n        filteredTasks,\n        newDates,\n        columnWidth,\n        rowHeight,\n        taskHeight,\n        barCornerRadius,\n        handleWidth,\n        rtl,\n        barProgressColor,\n        barProgressSelectedColor,\n        barBackgroundColor,\n        barBackgroundSelectedColor,\n        projectProgressColor,\n        projectProgressSelectedColor,\n        projectBackgroundColor,\n        projectBackgroundSelectedColor,\n        milestoneBackgroundColor,\n        milestoneBackgroundSelectedColor\n      )\n    );\n  }, [\n    tasks,\n    viewMode,\n    rowHeight,\n    barCornerRadius,\n    columnWidth,\n    taskHeight,\n    handleWidth,\n    barProgressColor,\n    barProgressSelectedColor,\n    barBackgroundColor,\n    barBackgroundSelectedColor,\n    projectProgressColor,\n    projectProgressSelectedColor,\n    projectBackgroundColor,\n    projectBackgroundSelectedColor,\n    milestoneBackgroundColor,\n    milestoneBackgroundSelectedColor,\n    rtl,\n    scrollX,\n    onExpanderClick,\n  ]);\n\n  useEffect(() => {\n    const { changedTask, action } = ganttEvent;\n    if (changedTask) {\n      if (action === \"delete\") {\n        setGanttEvent({ action: \"\" });\n        setBarTasks(barTasks.filter(t => t.id !== changedTask.id));\n      } else if (\n        action === \"move\" ||\n        action === \"end\" ||\n        action === \"start\" ||\n        action === \"progress\"\n      ) {\n        const prevStateTask = barTasks.find(t => t.id === changedTask.id);\n        if (\n          prevStateTask &&\n          (prevStateTask.start.getTime() !== changedTask.start.getTime() ||\n            prevStateTask.end.getTime() !== changedTask.end.getTime() ||\n            prevStateTask.progress !== changedTask.progress)\n        ) {\n          // actions for change\n          const newTaskList = barTasks.map(t =>\n            t.id === changedTask.id ? changedTask : t\n          );\n          setBarTasks(newTaskList);\n        }\n      }\n    }\n  }, [ganttEvent, barTasks]);\n\n  useEffect(() => {\n    if (failedTask) {\n      setBarTasks(barTasks.map(t => (t.id !== failedTask.id ? t : failedTask)));\n      setFailedTask(null);\n    }\n  }, [failedTask, barTasks]);\n\n  useEffect(() => {\n    const newTaskHeight = (rowHeight * barFill) / 100;\n    if (newTaskHeight !== taskHeight) {\n      setTaskHeight(newTaskHeight);\n    }\n  }, [rowHeight, barFill, taskHeight]);\n\n  useEffect(() => {\n    if (!listCellWidth) {\n      setTaskListWidth(0);\n    }\n    if (taskListRef.current) {\n      setTaskListWidth(taskListRef.current.offsetWidth);\n    }\n  }, [taskListRef, listCellWidth]);\n\n  useEffect(() => {\n    if (wrapperRef.current) {\n      setSvgContainerWidth(wrapperRef.current.offsetWidth - taskListWidth);\n    }\n  }, [wrapperRef, taskListWidth]);\n\n  useEffect(() => {\n    if (ganttHeight) {\n      setSvgContainerHeight(ganttHeight + headerHeight);\n    } else {\n      setSvgContainerHeight(tasks.length * rowHeight + headerHeight);\n    }\n  }, [ganttHeight, tasks]);\n\n  // scroll events\n  useEffect(() => {\n    const handleWheel = (event: WheelEvent) => {\n      if (event.shiftKey || event.deltaX) {\n        const scrollMove = event.deltaX ? event.deltaX : event.deltaY;\n        let newScrollX = scrollX + scrollMove;\n        if (newScrollX < 0) {\n          newScrollX = 0;\n        } else if (newScrollX > svgWidth) {\n          newScrollX = svgWidth;\n        }\n        setScrollX(newScrollX);\n        event.preventDefault();\n      } else if (ganttHeight) {\n        let newScrollY = scrollY + event.deltaY;\n        if (newScrollY < 0) {\n          newScrollY = 0;\n        } else if (newScrollY > ganttFullHeight - ganttHeight) {\n          newScrollY = ganttFullHeight - ganttHeight;\n        }\n        if (newScrollY !== scrollY) {\n          setScrollY(newScrollY);\n          event.preventDefault();\n        }\n      }\n\n      setIgnoreScrollEvent(true);\n    };\n\n    // subscribe if scroll is necessary\n    if (wrapperRef.current) {\n      wrapperRef.current.addEventListener(\"wheel\", handleWheel, {\n        passive: false,\n      });\n    }\n    return () => {\n      if (wrapperRef.current) {\n        wrapperRef.current.removeEventListener(\"wheel\", handleWheel);\n      }\n    };\n  }, [wrapperRef.current, scrollY, scrollX, ganttHeight, svgWidth, rtl]);\n\n  const handleScrollY = (event: SyntheticEvent<HTMLDivElement>) => {\n    if (scrollY !== event.currentTarget.scrollTop && !ignoreScrollEvent) {\n      setScrollY(event.currentTarget.scrollTop);\n    }\n    setIgnoreScrollEvent(false);\n  };\n\n  const handleScrollX = (event: SyntheticEvent<HTMLDivElement>) => {\n    if (scrollX !== event.currentTarget.scrollLeft && !ignoreScrollEvent) {\n      setScrollX(event.currentTarget.scrollLeft);\n    }\n    setIgnoreScrollEvent(false);\n  };\n\n  /**\n   * Handles arrow keys events and transform it to new scroll\n   */\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    let newScrollY = scrollY;\n    let newScrollX = scrollX;\n    let isX = true;\n    switch (event.key) {\n      case \"Down\": // IE/Edge specific value\n      case \"ArrowDown\":\n        newScrollY += rowHeight;\n        isX = false;\n        break;\n      case \"Up\": // IE/Edge specific value\n      case \"ArrowUp\":\n        newScrollY -= rowHeight;\n        isX = false;\n        break;\n      case \"Left\":\n      case \"ArrowLeft\":\n        newScrollX -= columnWidth;\n        break;\n      case \"Right\": // IE/Edge specific value\n      case \"ArrowRight\":\n        newScrollX += columnWidth;\n        break;\n    }\n    if (isX) {\n      if (newScrollX < 0) {\n        newScrollX = 0;\n      } else if (newScrollX > svgWidth) {\n        newScrollX = svgWidth;\n      }\n      setScrollX(newScrollX);\n    } else {\n      if (newScrollY < 0) {\n        newScrollY = 0;\n      } else if (newScrollY > ganttFullHeight - ganttHeight) {\n        newScrollY = ganttFullHeight - ganttHeight;\n      }\n      setScrollY(newScrollY);\n    }\n    setIgnoreScrollEvent(true);\n  };\n\n  /**\n   * Task select event\n   */\n  const handleSelectedTask = (taskId: string) => {\n    const newSelectedTask = barTasks.find(t => t.id === taskId);\n    const oldSelectedTask = barTasks.find(\n      t => !!selectedTask && t.id === selectedTask.id\n    );\n    if (onSelect) {\n      if (oldSelectedTask) {\n        onSelect(oldSelectedTask, false);\n      }\n      if (newSelectedTask) {\n        onSelect(newSelectedTask, true);\n      }\n    }\n    setSelectedTask(newSelectedTask);\n  };\n  const handleExpanderClick = (task: Task) => {\n    if (onExpanderClick && task.hideChildren !== undefined) {\n      onExpanderClick({ ...task, hideChildren: !task.hideChildren });\n    }\n  };\n  const gridProps: GridProps = {\n    columnWidth,\n    svgWidth,\n    tasks: tasks,\n    rowHeight,\n    dates: dateSetup.dates,\n    todayColor,\n    rtl,\n  };\n  const calendarProps: CalendarProps = {\n    dateSetup,\n    locale,\n    viewMode,\n    headerHeight,\n    columnWidth,\n    fontFamily,\n    fontSize,\n    rtl,\n  };\n  const barProps: TaskGanttContentProps = {\n    tasks: barTasks,\n    dates: dateSetup.dates,\n    ganttEvent,\n    selectedTask,\n    rowHeight,\n    taskHeight,\n    columnWidth,\n    arrowColor,\n    timeStep,\n    fontFamily,\n    fontSize,\n    arrowIndent,\n    svgWidth,\n    rtl,\n    setGanttEvent,\n    setFailedTask,\n    setSelectedTask: handleSelectedTask,\n    onDateChange,\n    onProgressChange,\n    onDoubleClick,\n    onDelete,\n  };\n\n  const tableProps: TaskListProps = {\n    rowHeight,\n    rowWidth: listCellWidth,\n    fontFamily,\n    fontSize,\n    tasks: barTasks,\n    locale,\n    headerHeight,\n    scrollY,\n    ganttHeight,\n    horizontalContainerClass: styles.horizontalContainer,\n    selectedTask,\n    taskListRef,\n    setSelectedTask: handleSelectedTask,\n    onExpanderClick: handleExpanderClick,\n    TaskListHeader,\n    TaskListTable,\n  };\n\n  const theme = useTheme()\n  return (\n    <div style={{backgroundColor: theme.palette.background.default}}>\n      <div\n        className={styles.wrapper}\n        onKeyDown={handleKeyDown}\n        tabIndex={0}\n        ref={wrapperRef}\n      >\n        {listCellWidth && <TaskList {...tableProps} />}\n        <TaskGantt\n          gridProps={gridProps}\n          calendarProps={calendarProps}\n          barProps={barProps}\n          ganttHeight={ganttHeight}\n          scrollY={scrollY}\n          scrollX={scrollX}\n        />\n        {ganttEvent.changedTask && (\n          <Tooltip\n            arrowIndent={arrowIndent}\n            rowHeight={rowHeight}\n            svgContainerHeight={svgContainerHeight}\n            svgContainerWidth={svgContainerWidth}\n            fontFamily={fontFamily}\n            fontSize={fontSize}\n            scrollX={scrollX}\n            scrollY={scrollY}\n            task={ganttEvent.changedTask}\n            headerHeight={headerHeight}\n            taskListWidth={taskListWidth}\n            TooltipContent={TooltipContent}\n            rtl={rtl}\n            svgWidth={svgWidth}\n          />\n        )}\n        <VerticalScroll\n          ganttFullHeight={ganttFullHeight}\n          ganttHeight={ganttHeight}\n          headerHeight={headerHeight}\n          scroll={scrollY}\n          onScroll={handleScrollY}\n          rtl={rtl}\n        />\n      </div>\n      <HorizontalScroll\n        svgWidth={svgWidth}\n        taskListWidth={taskListWidth}\n        scroll={scrollX}\n        rtl={rtl}\n        onScroll={handleScrollX}\n      />\n    </div>\n  );\n};\n","import { useTheme, styled } from \"@mui/material\"\r\nimport { Typography, Divider, List, ListItem } from \"@mui/material\"\r\nimport { useContext, useEffect, useState } from \"react\"\r\nimport {\r\n  getProjectsUrl,\r\n  MinifiedProject,\r\n  ProjectTaskInterface,\r\n  ProjectWithMetaDataInterface,\r\n} from \"../api/ProjectApi\"\r\nimport ErrorComponent from \"../components/ErrorComponent\"\r\nimport Loading from \"../components/Loading\"\r\nimport {\r\n  InputContainer,\r\n  ScreenContainer,\r\n  StyledInputContainer,\r\n} from \"../components/StyledComponents\"\r\nimport { AuthContext } from \"../contexts/AuthContext\"\r\nimport { ReportsLeftPanel, ReportsRightPanel } from \"./TasksByEmployeeScreen\"\r\nimport noselected from \"../images/no_task_selected.png\"\r\nimport { getGanttInitUrl } from \"../api/GanttApi\"\r\nimport { api, HttpMethods } from \"../api/ApiControllers\"\r\nimport { Gantt, Task, ViewMode } from \"../external_libs\"\r\nimport InlinePill from \"../components/InlinePill\"\r\nimport { getDayFromDate } from \"../utils/formatters\"\r\n\r\nconst GanttGrid = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"1fr 3fr\",\r\n    gap: theme.spacing(1),\r\n    gridTemplateRows: \"1fr 2fr\",\r\n  }\r\n})\r\n\r\nexport default function GanttScreen() {\r\n  const { user } = useContext(AuthContext)!\r\n\r\n  const theme = useTheme()\r\n  // users list state\r\n  const [projects, setProjects] = useState<MinifiedProject[] | null>(null)\r\n  const [isPageLoading, setIsPageLoading] = useState(false)\r\n  const [error, setError] = useState<string | null>(null)\r\n\r\n  // tasks list state\r\n  const [project, setProject] = useState<ProjectWithMetaDataInterface | null>(\r\n    null\r\n  )\r\n  const [isProjectLoading, setProjectLoading] = useState(false)\r\n  const [selectedProjectId, setSelectedProjectId] = useState<number | null>(\r\n    null\r\n  )\r\n  const [projectError, setProjectError] = useState<string | null>(null)\r\n\r\n  // use effect\r\n\r\n  useEffect(() => {\r\n    setError(null)\r\n    setIsPageLoading(true)\r\n    api<MinifiedProject[]>(\r\n      getGanttInitUrl,\r\n      HttpMethods.Get,\r\n      null,\r\n      { Authorization: `Bearer ${user?.tokenStr}` },\r\n      \"Something went wrong\",\r\n      true\r\n    )\r\n      .then((data) => {\r\n        setProjects(data!)\r\n        setError(null)\r\n        setIsPageLoading(false)\r\n      })\r\n      .catch((e: any) => {\r\n        setIsPageLoading(false)\r\n        setError(e.message)\r\n      })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (selectedProjectId) {\r\n      setProjectError(null)\r\n      setProjectLoading(true)\r\n      api<ProjectWithMetaDataInterface>(\r\n        getProjectsUrl(selectedProjectId),\r\n        HttpMethods.Get,\r\n        null,\r\n        { Authorization: `Bearer ${user?.tokenStr}` },\r\n        \"Something went wrong\",\r\n        true\r\n      )\r\n        .then((data) => {\r\n          setProject(data!)\r\n          setProjectLoading(false)\r\n          console.log(data)\r\n        })\r\n        .catch((e: any) => {\r\n          setProjectLoading(false)\r\n          setProjectError(e.message)\r\n        })\r\n    }\r\n  }, [selectedProjectId])\r\n\r\n  let tasks: Task[] = [\r\n    {\r\n      start: new Date(2020, 1, 1),\r\n      end: new Date(2020, 1, 2),\r\n      name: \"Idea\",\r\n      id: \"Task 0\",\r\n      type: \"task\", // TODO: Check Project types\r\n      progress: 45,\r\n      isDisabled: true,\r\n      styles: { progressColor: \"#ffbb54\", progressSelectedColor: \"#ff9e0d\" },\r\n    },\r\n  ]\r\n\r\n  function getFlatTree() {\r\n    const flattenTree = (\r\n      task: ProjectTaskInterface,\r\n      list: ProjectTaskInterface[]\r\n    ) => {\r\n      list.push(task)\r\n\r\n      task.children.forEach((i) => flattenTree(i, list))\r\n    }\r\n\r\n    const flatTree: ProjectTaskInterface[] = []\r\n    if (project) {\r\n      flattenTree(project.project.task_tree, flatTree)\r\n    }\r\n\r\n    return flatTree\r\n  }\r\n\r\n  function getTasks(): Task[] {\r\n    function convertProjectTaskToTask(\r\n      task: ProjectTaskInterface,\r\n      dependencies?: string[]\r\n    ): Task {\r\n      return {\r\n        type: \"task\",\r\n        id: task.id.toString(),\r\n        start: new Date(task.planned_start_date!),\r\n        end: new Date(task.planned_end_date!),\r\n        name: task.task_name,\r\n        progress: task.task_progress,\r\n        dependencies,\r\n      }\r\n    }\r\n\r\n    const flattenTree = (\r\n      task: ProjectTaskInterface,\r\n      list: ProjectTaskInterface[]\r\n    ) => {\r\n      list.push(task)\r\n\r\n      task.children.forEach((i) => flattenTree(i, list))\r\n    }\r\n\r\n    const flatTree: ProjectTaskInterface[] = []\r\n    if (project) {\r\n      flattenTree(project.project.task_tree, flatTree)\r\n    }\r\n\r\n    const buildTasksRecusrively = (\r\n      task: ProjectTaskInterface,\r\n      tasks: Task[]\r\n    ) => {\r\n      if (task.children.length === 0) {\r\n        if (task.parent) {\r\n          const taskParent = flatTree.find((i) => i.parent === task.parent)\r\n\r\n          if (taskParent) {\r\n            const dep: string[] = []\r\n            if (taskParent.parent) {\r\n              // second node task\r\n              if (task.sort_order !== 1) {\r\n                // pred\r\n                const predTask = flatTree.find(\r\n                  (i) =>\r\n                    i.parent === task.parent &&\r\n                    i.sort_order === task.sort_order - 1\r\n                )\r\n\r\n                if (predTask) {\r\n                  dep.push(predTask.id.toString())\r\n                }\r\n              }\r\n            }\r\n\r\n            // predecessor\r\n            if (task.predecessor) {\r\n              dep.push(task.predecessor.id.toString())\r\n            }\r\n\r\n            const t = convertProjectTaskToTask(task, dep)\r\n            tasks.push(t)\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    const newTasks: Task[] = []\r\n    flatTree.forEach((i) => buildTasksRecusrively(i, newTasks))\r\n\r\n    return newTasks\r\n  }\r\n\r\n  function getGanttHeight() {\r\n    const mainHeight = document.getElementById(\"gantt-container\")?.clientHeight\r\n\r\n    if (mainHeight) {\r\n      return mainHeight - 200\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ScreenContainer\r\n      style={{ overflowY: \"hidden\", width: \"100%\", height: \"100%\" }}\r\n      isDataLoaded={!isPageLoading && !error}\r\n    >\r\n      {isPageLoading && <Loading text=\"Loading Schema..\" />}\r\n      {error && <ErrorComponent text={error ?? \"Something went wrong\"} />}\r\n      {!isPageLoading && !error && projects && (\r\n        <GanttGrid\r\n          style={{ overflow: \"hidden\", width: \"100%\", height: \"100%\" }}\r\n        >\r\n          <ReportsLeftPanel delmarginright>\r\n            <Typography\r\n              style={{ margin: theme.spacing(1) }}\r\n              variant=\"h5\"\r\n              gutterBottom\r\n            >\r\n              Projects\r\n            </Typography>\r\n            <Divider style={{ margin: theme.spacing(1) }} />\r\n            <List>\r\n              {projects.map((item) => (\r\n                <ListItem\r\n                  button\r\n                  onClick={() => setSelectedProjectId(item.id)}\r\n                  key={item.user_code}\r\n                >\r\n                  <Typography variant=\"h6\">\r\n                    {item.id}\r\n                    {item.title.length > 0 && ` - ${item.title}`}\r\n                  </Typography>\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </ReportsLeftPanel>\r\n          <ReportsRightPanel center={selectedProjectId === null} delmarginleft>\r\n            {!selectedProjectId && (\r\n              <>\r\n                <img src={noselected} width={200} />\r\n                <Typography\r\n                  style={{ marginTop: theme.spacing(2) }}\r\n                  variant=\"h5\"\r\n                >\r\n                  No Selected Project\r\n                </Typography>\r\n              </>\r\n            )}\r\n            {isProjectLoading && <Loading text=\"Getting Project\" />}\r\n            {projectError && <ErrorComponent text={projectError} />}\r\n            {!isProjectLoading && !projectError && project && (\r\n              <>\r\n                <Typography\r\n                  style={{ margin: theme.spacing(1) }}\r\n                  variant=\"h5\"\r\n                  gutterBottom\r\n                >\r\n                  Info\r\n                </Typography>\r\n                <Divider style={{ margin: theme.spacing(1) }} />\r\n                <div\r\n                  style={{\r\n                    display: \"grid\",\r\n                    gridTemplateColumns: \"1fr 1fr 1fr\",\r\n                  }}\r\n                >\r\n                  <InlinePill title=\"Title\" value={project.project.title} />\r\n                  <InlinePill\r\n                    title=\"Client\"\r\n                    value={project.project.client.description}\r\n                  />\r\n                  <InlinePill\r\n                    title=\"Client\"\r\n                    value={project.project.client.description}\r\n                  />\r\n                  <InlinePill\r\n                    title=\"Order Number\"\r\n                    value={project.project.id.toString()}\r\n                  />\r\n\r\n                  <InlinePill\r\n                    title=\"Project Owner\"\r\n                    value={project.project.user.description ?? \"N/A\"}\r\n                  />\r\n\r\n                  <InlinePill\r\n                    title=\"Expected Delivery\"\r\n                    value={getDayFromDate(\r\n                      new Date(project.project.estimated_delivery!)\r\n                    )}\r\n                  />\r\n                  <InlinePill\r\n                    title=\"No. of Tasks\"\r\n                    value={getFlatTree()\r\n                      .filter((i) => i.children.length === 0)\r\n                      .length.toString()}\r\n                  />\r\n                </div>\r\n              </>\r\n            )}\r\n          </ReportsRightPanel>\r\n          <ReportsRightPanel\r\n            delmarginleft\r\n            id=\"gantt-container\"\r\n            style={{ gridColumn: \"1 / span 2\" }}\r\n            center={selectedProjectId === null}\r\n          >\r\n            {!selectedProjectId && (\r\n              <>\r\n                <img src={noselected} width={260} />\r\n                <Typography\r\n                  style={{ marginTop: theme.spacing(2) }}\r\n                  variant=\"h5\"\r\n                >\r\n                  No Selected Project\r\n                </Typography>\r\n              </>\r\n            )}\r\n            {isProjectLoading && <Loading text=\"Getting Project\" />}\r\n            {projectError && <ErrorComponent text={projectError} />}\r\n            {!isProjectLoading && !projectError && project && (\r\n              <>\r\n                <Typography style={{ margin: theme.spacing(1) }} variant=\"h5\">\r\n                  Gantt Chart For Project &nbsp;\r\n                  <span style={{ color: theme.palette.success.main }}>\r\n                    {projects.find((i) => i.id === selectedProjectId)?.title}\r\n                  </span>\r\n                </Typography>\r\n                <Gantt\r\n                  tasks={getTasks()}\r\n                  viewMode={ViewMode.Day}\r\n                  ganttHeight={getGanttHeight()}\r\n                  barBackgroundColor={theme.palette.primary.main}\r\n                />\r\n              </>\r\n            )}\r\n          </ReportsRightPanel>\r\n        </GanttGrid>\r\n      )}\r\n    </ScreenContainer>\r\n  )\r\n}\r\n","import { useTheme } from \"@emotion/react\"\r\nimport React, { useContext, useEffect, useState } from \"react\"\r\nimport { getPipelineOrdersUrl, IPipelineOrder } from \"../api/PipelineOrdersApi\"\r\nimport ErrorComponent from \"../components/ErrorComponent\"\r\nimport Loading from \"../components/Loading\"\r\nimport { ScreenContainer } from \"../components/StyledComponents\"\r\nimport { AuthContext } from \"../contexts/AuthContext\"\r\nimport { getDayFromDate } from \"../utils/formatters\"\r\nimport {\r\n  ReportsStyledPaper,\r\n  ReportsStyledTypography,\r\n} from \"./TasksByEmployeeScreen\"\r\nimport { styled } from \"@mui/material/styles\"\r\nimport { api, HttpMethods } from \"../api/ApiControllers\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport {\r\n  getProjectsUrl,\r\n  ProjectTaskPredecessor,\r\n  ProjectWithMetaDataInterface,\r\n  RescheduleInterface,\r\n} from \"../api/ProjectApi\"\r\nimport { duration } from \"moment\"\r\nimport { MinifiedUser } from \"../api/UsersApi\"\r\nimport { domainName } from \"../constants/Config\"\r\n\r\nconst MainContainer = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  }\r\n})\r\n\r\ninterface ProjectTaskInterface {\r\n  id: number\r\n  task_name: string\r\n  task_code?: string\r\n  estimated_time: number\r\n  time_unit_id: number\r\n  description?: string\r\n  sort_order: number\r\n  task_status_id: number\r\n  task_progress: number\r\n  parent?: number\r\n  children: ProjectTaskInterface[]\r\n  planned_start_date?: number\r\n  planned_end_date?: number\r\n  actual_start_date?: number\r\n  actual_end_date?: number\r\n  comment?: string\r\n  comment_last_updated?: number\r\n  progress_last_updated?: number\r\n  reschedule?: RescheduleInterface\r\n  predecessor?: ProjectTaskPredecessor\r\n  assigned_to_user_code?: string\r\n  assigned_to?: MinifiedUser\r\n}\r\n\r\nexport interface ITaskDuration {\r\n  taskName: string\r\n  taskCode?: string\r\n  orderNumber: string\r\n  assignedTo?: string\r\n  duration: string\r\n  actual: string\r\n}\r\n\r\nexport default function AvgDurationTaskScreen() {\r\n  const { user } = useContext(AuthContext)!\r\n  const theme = useTheme()\r\n  const { id } = useParams()\r\n\r\n  // state\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const [project, setProject] = useState<ProjectWithMetaDataInterface | null>(\r\n    null\r\n  )\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    setError(null)\r\n    api<ProjectWithMetaDataInterface>(\r\n      domainName + `/api/report/task-duration/${id}`,\r\n      HttpMethods.Get,\r\n      null,\r\n      { Authorization: `Bearer ${user?.tokenStr}` },\r\n      \"Something went wrong\",\r\n      true\r\n    )\r\n      .then((data) => {\r\n        setProject(data!)\r\n        setIsLoading(false)\r\n      })\r\n      .catch((e: any) => {\r\n        setError(e.message)\r\n        setIsLoading(false)\r\n      })\r\n  }, [])\r\n\r\n  function getTasks(): ProjectTaskInterface[] {\r\n    const flattenTree = (\r\n      task: ProjectTaskInterface,\r\n      list: ProjectTaskInterface[]\r\n    ) => {\r\n      list.push(task)\r\n\r\n      task.children.forEach((i) => flattenTree(i, list))\r\n    }\r\n\r\n    const flatTree: ProjectTaskInterface[] = []\r\n    if (project) {\r\n      flattenTree(project.project.task_tree, flatTree)\r\n    }\r\n\r\n    return flatTree.filter((i) => {\r\n      return (\r\n        i.parent &&\r\n        i.children.length === 0 &&\r\n        i.planned_start_date &&\r\n        i.planned_end_date &&\r\n        i.actual_start_date &&\r\n        i.actual_end_date\r\n      )\r\n    })\r\n  }\r\n\r\n  function getTasksWithDuration() {\r\n    return getTasks().map<ITaskDuration>((i) => {\r\n      return {\r\n        taskName: i.task_name,\r\n        taskCode: i.task_code,\r\n        assignedTo: i.assigned_to?.description,\r\n        orderNumber: id!,\r\n        duration: getDuration(i) + \"d\",\r\n        actual: getActual(i) + \"d\",\r\n      }\r\n    })\r\n  }\r\n\r\n  function getDuration(task: ProjectTaskInterface): number {\r\n    return Math.floor(\r\n      (task.planned_end_date! - task.planned_end_date!) / 86400000 + 1\r\n    )\r\n  }\r\n\r\n  function getActual(task: ProjectTaskInterface): number {\r\n    return (\r\n      Math.floor((task.actual_end_date! - task.actual_start_date!) / 86400000) +\r\n      1\r\n    )\r\n  }\r\n\r\n  function getAvgDuration() {\r\n    const t = getTasks()\r\n\r\n    return (\r\n      t.reduce((prev, current) => {\r\n        return prev + getDuration(current)\r\n      }, 0) / t.length\r\n    )\r\n  }\r\n\r\n  function getAvgActual() {\r\n    const t = getTasks()\r\n\r\n    return (\r\n      t.reduce((prev, current) => {\r\n        return prev + getActual(current)\r\n      }, 0) / t.length\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ScreenContainer\r\n      style={{ overflowY: \"hidden\" }}\r\n      isDataLoaded={!isLoading && !error}\r\n    >\r\n      {isLoading && <Loading text=\"Loading Schema..\" />}\r\n      {error && <ErrorComponent text={error ?? \"Something went wrong\"} />}\r\n      {!isLoading && !error && project && (\r\n        <MainContainer>\r\n          <ReportsStyledPaper header>\r\n            <ReportsStyledTypography header>Task Name</ReportsStyledTypography>\r\n            <ReportsStyledTypography header>Task Code</ReportsStyledTypography>\r\n            <ReportsStyledTypography header>\r\n              Order Number\r\n            </ReportsStyledTypography>\r\n            <ReportsStyledTypography header>\r\n              Assigned To\r\n            </ReportsStyledTypography>\r\n            <ReportsStyledTypography header>Duration</ReportsStyledTypography>\r\n            <ReportsStyledTypography header>Actual</ReportsStyledTypography>\r\n          </ReportsStyledPaper>\r\n          {getTasksWithDuration().map((task, index) => (\r\n            <ReportsStyledPaper key={index}>\r\n              <ReportsStyledTypography>{task.taskName}</ReportsStyledTypography>\r\n              <ReportsStyledTypography>\r\n                {task.taskCode ?? \"N/A\"}\r\n              </ReportsStyledTypography>\r\n              <ReportsStyledTypography>\r\n                {task.orderNumber}\r\n              </ReportsStyledTypography>\r\n              <ReportsStyledTypography>\r\n                {task.assignedTo}\r\n              </ReportsStyledTypography>\r\n              <ReportsStyledTypography>{task.duration}</ReportsStyledTypography>\r\n              <ReportsStyledTypography>{task.actual}</ReportsStyledTypography>\r\n            </ReportsStyledPaper>\r\n          ))}\r\n          <ReportsStyledPaper header>\r\n            <ReportsStyledTypography header>Average</ReportsStyledTypography>\r\n            <ReportsStyledTypography header></ReportsStyledTypography>\r\n            <ReportsStyledTypography header></ReportsStyledTypography>\r\n            <ReportsStyledTypography header></ReportsStyledTypography>\r\n            <ReportsStyledTypography header>\r\n              {getAvgDuration().toFixed(2) + \"d\"}\r\n            </ReportsStyledTypography>\r\n            <ReportsStyledTypography header>\r\n              {getAvgActual().toFixed(2) + \"d\"}\r\n            </ReportsStyledTypography>\r\n          </ReportsStyledPaper>\r\n        </MainContainer>\r\n      )}\r\n    </ScreenContainer>\r\n  )\r\n}\r\n","import { Typography, Divider, List, ListItem, useTheme } from \"@mui/material\"\r\nimport { error } from \"console\"\r\nimport React, { useContext, useEffect, useState } from \"react\"\r\nimport ErrorComponent from \"../components/ErrorComponent\"\r\nimport Loading from \"../components/Loading\"\r\nimport { ScreenContainer } from \"../components/StyledComponents\"\r\nimport { formatCurrency, getDayFromDate } from \"../utils/formatters\"\r\nimport { styled } from \"@mui/material/styles\"\r\nimport { AuthContext } from \"../contexts/AuthContext\"\r\nimport { getPipelineOrdersUrl, IPipelineOrder } from \"../api/PipelineOrdersApi\"\r\nimport {\r\n  ReportsStyledPaper,\r\n  ReportsStyledTypography,\r\n} from \"./TasksByEmployeeScreen\"\r\nimport { api, HttpMethods } from \"../api/ApiControllers\"\r\nimport { domainName } from \"../constants/Config\"\r\nimport { Currency } from \"../api/ProjectApi\"\r\n\r\nexport interface ICashForecast {\r\n  project_id: number\r\n  title: string\r\n  total_price: number\r\n  paid_amount: number\r\n  customer_name: string\r\n  customer_account: string\r\n  currency: Currency\r\n}\r\n\r\nconst MainContainer = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    overflow: \"scroll\",\r\n  }\r\n})\r\n\r\nexport default function CashForecastScreen() {\r\n  const { user } = useContext(AuthContext)!\r\n  const theme = useTheme()\r\n\r\n  // state\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const [forecast, setForecast] = useState<ICashForecast[] | null>(null)\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    setError(null)\r\n    api<ICashForecast[]>(\r\n      domainName + \"/api/report/cash-forecast\",\r\n      HttpMethods.Get,\r\n      null,\r\n      { Authorization: `Bearer ${user?.tokenStr}` },\r\n      \"Something went wrong\",\r\n      true\r\n    )\r\n      .then((data) => {\r\n        setForecast(data!)\r\n        setIsLoading(false)\r\n      })\r\n      .catch((e: any) => {\r\n        setError(e.message)\r\n        setIsLoading(false)\r\n      })\r\n  }, [])\r\n  return (\r\n    <ScreenContainer\r\n      style={{ overflowY: \"hidden\" }}\r\n      isDataLoaded={!isLoading && !error}\r\n    >\r\n      {isLoading && <Loading text=\"Loading Schema..\" />}\r\n      {error && <ErrorComponent text={error ?? \"Something went wrong\"} />}\r\n      {!isLoading && !error && forecast && (\r\n        <MainContainer>\r\n          <ReportsStyledPaper margin={0.5} header>\r\n            <ReportsStyledTypography header>\r\n              Order Number\r\n            </ReportsStyledTypography>\r\n            <ReportsStyledTypography header>\r\n              Project Title\r\n            </ReportsStyledTypography>\r\n            <ReportsStyledTypography header>\r\n              Customer Account\r\n            </ReportsStyledTypography>\r\n            <ReportsStyledTypography header>\r\n              Customer Name\r\n            </ReportsStyledTypography>\r\n            <ReportsStyledTypography header>\r\n              Total Price\r\n            </ReportsStyledTypography>\r\n            <ReportsStyledTypography header>\r\n              Amount Paid\r\n            </ReportsStyledTypography>\r\n            <ReportsStyledTypography header>Remaining</ReportsStyledTypography>\r\n          </ReportsStyledPaper>\r\n          {forecast.map((item, index) => (\r\n            <ReportsStyledPaper margin={0.5} key={index}>\r\n              <ReportsStyledTypography>\r\n                {item.project_id}\r\n              </ReportsStyledTypography>\r\n              <ReportsStyledTypography>{item.title}</ReportsStyledTypography>\r\n              <ReportsStyledTypography>\r\n                {item.customer_account}\r\n              </ReportsStyledTypography>\r\n              <ReportsStyledTypography>\r\n                {item.customer_name}\r\n              </ReportsStyledTypography>\r\n              <ReportsStyledTypography\r\n                header\r\n                color={theme.palette.warning.dark}\r\n              >\r\n                {formatCurrency(item.total_price, item.currency.currency_code)}\r\n              </ReportsStyledTypography>\r\n              <ReportsStyledTypography\r\n                header\r\n                color={theme.palette.success.dark}\r\n              >\r\n                {formatCurrency(item.paid_amount, item.currency.currency_code)}\r\n              </ReportsStyledTypography>\r\n              <ReportsStyledTypography header color={theme.palette.error.dark}>\r\n                {formatCurrency(\r\n                  item.total_price - item.paid_amount,\r\n                  item.currency.currency_code\r\n                )}\r\n              </ReportsStyledTypography>\r\n            </ReportsStyledPaper>\r\n          ))}\r\n        </MainContainer>\r\n      )}\r\n    </ScreenContainer>\r\n  )\r\n}\r\n","import { styled, useTheme } from \"@mui/material/styles\"\r\nimport { useContext, useState } from \"react\"\r\nimport AlertDialog from \"../components/dialogs/AlertDialog\"\r\nimport { AuthContext } from \"../contexts/AuthContext\"\r\nimport Loading from \"../components/Loading\"\r\nimport Typography from \"@mui/material/Typography\"\r\nimport Paper from \"@mui/material/Paper\"\r\nimport TextField from \"@mui/material/TextField\"\r\nimport Button from \"@mui/material/Button\"\r\nimport CheckCircleRoundedIcon from \"@mui/icons-material/CheckCircleRounded\"\r\nimport { api, HttpMethods } from \"../api/ApiControllers\"\r\nimport { domainName } from \"../constants/Config\"\r\nimport {\r\n  checkPasswordValidation,\r\n  passwordHint,\r\n} from \"../constants/MenuConstants\"\r\n\r\nconst StyledCard = styled(Paper)(({ theme }) => {\r\n  return {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    width: \"600px\",\r\n    height: \"400px\",\r\n    justifyContent: \"space-between\",\r\n  }\r\n})\r\n\r\nconst MainContainer = styled(\"div\")<{ loaded: boolean }>(\r\n  ({ theme, loaded }) => {\r\n    return {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      height: \"100%\",\r\n      alignItems: \"center\",\r\n      justifyContent: loaded ? \"space-evenly\" : \"center\",\r\n      backgroundColor: theme.palette.background.default,\r\n    }\r\n  }\r\n)\r\n\r\nconst StyledButton = styled(Button)(({ theme }) => {\r\n  return {\r\n    height: theme.spacing(6),\r\n  }\r\n})\r\n\r\nexport default function ChangePasswordScreen() {\r\n  // context\r\n  const { user } = useContext(AuthContext)!\r\n\r\n  // state\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false)\r\n  const [dialogTitle, setDialogTitle] = useState(\"\")\r\n  const [dialogContent, setDialogContent] = useState(\"\")\r\n\r\n  const [isSuccessful, setIsSuccessful] = useState(false)\r\n\r\n  const [oldPassword, setOldPassword] = useState(\"\")\r\n\r\n  const [password1, setPassword1] = useState(\"\")\r\n\r\n  const [password2, setPassword2] = useState(\"\")\r\n\r\n  const submitForm = async () => {\r\n    if (isButtonActive()) {\r\n      try {\r\n        setIsLoading(true)\r\n        await api(\r\n          domainName + \"/api/user/password\",\r\n          HttpMethods.Post,\r\n          { old_password: oldPassword, new_password: password1 },\r\n          { Authorization: `Bearer ${user?.tokenStr}` },\r\n          undefined,\r\n          false\r\n        )\r\n\r\n        setIsLoading(false)\r\n        setIsSuccessful(true)\r\n      } catch (error: any) {\r\n        setIsLoading(false)\r\n        setIsDialogOpen(true)\r\n        setDialogContent(error.message)\r\n        setDialogTitle(\"Oops, something went wrong!\")\r\n      }\r\n    }\r\n  }\r\n\r\n  function isButtonActive() {\r\n    return (\r\n      oldPassword.length > 1 && checkPasswordValidation(password1, password2)\r\n    )\r\n  }\r\n\r\n  const theme = useTheme()\r\n  return (\r\n    <MainContainer loaded={!isLoading}>\r\n      {isLoading && <Loading text=\"Changing Password..\" />}\r\n      {!isLoading && isSuccessful && (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <CheckCircleRoundedIcon\r\n            style={{\r\n              color: theme.palette.success.main,\r\n              height: \"100px\",\r\n              width: \"100px\",\r\n            }}\r\n          />\r\n          <Typography>Password Changed Successfully</Typography>\r\n        </div>\r\n      )}\r\n      {!isLoading && !isSuccessful && (\r\n        <>\r\n          <StyledCard>\r\n            <Typography gutterBottom variant=\"h4\">\r\n              Change Password\r\n            </Typography>\r\n            <Typography gutterBottom variant=\"caption\">\r\n              {passwordHint}\r\n            </Typography>\r\n            <TextField\r\n              label=\"Old Password\"\r\n              value={oldPassword}\r\n              fullWidth\r\n              required\r\n              type=\"password\"\r\n              onChange={(e) => {\r\n                setOldPassword(e.target.value)\r\n              }}\r\n            />\r\n            <TextField\r\n              required\r\n              fullWidth\r\n              label=\"New Password\"\r\n              value={password1}\r\n              type=\"password\"\r\n              onChange={(e) => {\r\n                setPassword1(e.target.value)\r\n              }}\r\n            />\r\n            <TextField\r\n              required\r\n              fullWidth\r\n              label=\"Re-enter Password\"\r\n              value={password2}\r\n              type=\"password\"\r\n              onChange={(e) => {\r\n                setPassword2(e.target.value)\r\n              }}\r\n              onSubmit={submitForm}\r\n              onKeyDown={(e) => {\r\n                if (e.key === \"Enter\") {\r\n                  submitForm()\r\n                }\r\n              }}\r\n            />\r\n            <StyledButton\r\n              onClick={submitForm}\r\n              variant=\"contained\"\r\n              color=\"success\"\r\n              disabled={!isButtonActive()}\r\n            >\r\n              Submit\r\n            </StyledButton>\r\n          </StyledCard>\r\n        </>\r\n      )}\r\n\r\n      <AlertDialog\r\n        isOpen={isDialogOpen}\r\n        onClose={() => setIsDialogOpen(false)}\r\n        content={dialogContent}\r\n        title={dialogTitle}\r\n      />\r\n    </MainContainer>\r\n  )\r\n}\r\n","import { domainName } from \"../constants/Config\"\r\nimport { MinifiedClient } from \"./ClientsApi\"\r\nimport { Currency } from \"./ProjectApi\"\r\nimport { MinifiedUser } from \"./UsersApi\"\r\n\r\nexport const getProjectHeaders = (id: string) =>\r\n  domainName + `/api/project/${id}/headers`\r\n\r\nexport const updateProjectHeadersUrl = (id: string) =>\r\n  domainName + `/api/project/${id}`\r\n\r\nexport interface ProjectHeadersInterface {\r\n  user_code: string\r\n  client_code: string\r\n  total_price: number\r\n  project_currency: string\r\n  estimated_delivery_date: number\r\n  title: string\r\n  lost_sales: string;\r\n  users: MinifiedUser[]\r\n  currencies: Currency[]\r\n  clients: MinifiedClient[]\r\n}\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\nimport { useNavigate, useParams } from \"react-router-dom\"\r\nimport { api, HttpMethods } from \"../api/ApiControllers\"\r\nimport {\r\n  getProjectHeaders,\r\n  ProjectHeadersInterface,\r\n  updateProjectHeadersUrl,\r\n} from \"../api/EditProjectHeadersApi\"\r\nimport { AuthContext } from \"./AuthContext\"\r\n\r\nexport interface EditProjectHeadersState {\r\n  isLoading: boolean\r\n  error: string | null\r\n  headers: ProjectHeadersInterface | null\r\n  setTitle: (newTitle: string) => void\r\n  setProjectOwner: (newOwner: string) => void\r\n  setTotalAmount: (newAmount: number) => void\r\n  setEstimatedDelivery: (newValue: number) => void\r\n  setLostSales: (newTitle: string) => void\r\n  update: () => Promise<void>\r\n}\r\n\r\nexport const EditProjectHeadersContext =\r\n  createContext<EditProjectHeadersState | null>(null)\r\n\r\nfunction EditProjectHeadersContextProvider({\r\n  children,\r\n}: {\r\n  children: JSX.Element\r\n}) {\r\n  // context\r\n  const { user } = useContext(AuthContext)!\r\n\r\n  // param\r\n  const { id } = useParams()\r\n\r\n  // navigate\r\n  const navigate = useNavigate()\r\n\r\n  // state\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const [headers, setHeaders] = useState<ProjectHeadersInterface | null>(null)\r\n\r\n  function refreshHeaders() {\r\n    setHeaders(Object.assign({}, headers))\r\n  }\r\n\r\n  // calllbacks\r\n  const setTitle = (newTitle: string) => {\r\n    if (headers) {\r\n      headers.title = newTitle\r\n      refreshHeaders()\r\n    }\r\n  }\r\n  const setProjectOwner = (newOwner: string) => {\r\n    if (headers) {\r\n      headers.user_code = newOwner\r\n      refreshHeaders()\r\n    }\r\n  }\r\n  const setTotalAmount = (totalAmount: number) => {\r\n    if (headers) {\r\n      headers.total_price = totalAmount\r\n      refreshHeaders()\r\n    }\r\n  }\r\n  const setEstimatedDelivery = (newValue: number) => {\r\n    if (headers) {\r\n      headers.estimated_delivery_date = newValue\r\n      refreshHeaders()\r\n    }\r\n  }\r\n\r\n  const setLostSales = (newValue: string) => {\r\n    if (headers) {\r\n      headers.lost_sales = newValue\r\n      refreshHeaders()\r\n    }\r\n  }\r\n  const update = async () => {\r\n    if (headers) {\r\n      try {\r\n        setIsLoading(true)\r\n        const body = {\r\n          user_code: headers.user_code,\r\n          client_code: headers.client_code,\r\n          total_price: headers.total_price,\r\n          estimated_delivery_date: headers.estimated_delivery_date,\r\n          title: headers.title,\r\n          lost_sales: headers.lost_sales\r\n        }\r\n\r\n        await api(\r\n          updateProjectHeadersUrl(id!),\r\n          HttpMethods.Patch,\r\n          body,\r\n          { Authorization: `Bearer ${user?.tokenStr}` },\r\n          \"Something went wrong\",\r\n          false\r\n        )\r\n\r\n        setError(null)\r\n        setIsLoading(false)\r\n        navigate(`/projects/${id}`)\r\n      } catch (e: any) {\r\n        setError(e.message)\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  const value: EditProjectHeadersState = {\r\n    isLoading,\r\n    error,\r\n    headers,\r\n    setTitle,\r\n    setEstimatedDelivery,\r\n    setProjectOwner,\r\n    setTotalAmount,\r\n    setLostSales,\r\n    update,\r\n  }\r\n\r\n  // useEffect\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    api<ProjectHeadersInterface>(\r\n      getProjectHeaders(id!),\r\n      HttpMethods.Get,\r\n      null,\r\n      {\r\n        Authorization: `Bearer ${user?.tokenStr}`,\r\n      }\r\n    )\r\n      .then((resData) => {\r\n        console.log(\"HEADERS\", resData)\r\n        setHeaders(resData!)\r\n        setIsLoading(false)\r\n        setError(null)\r\n      })\r\n      .catch((e) => {\r\n        setIsLoading(false)\r\n        setError(e.message)\r\n      })\r\n  }, [])\r\n\r\n  return (\r\n    <EditProjectHeadersContext.Provider value={value}>\r\n      {children}\r\n    </EditProjectHeadersContext.Provider>\r\n  )\r\n}\r\n\r\nexport default EditProjectHeadersContextProvider\r\n","import AdapterDateFns from \"@mui/lab/AdapterDateFns\"\r\nimport DatePicker from \"@mui/lab/DatePicker\"\r\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\"\r\nimport Box from \"@mui/material/Box\"\r\nimport Button from \"@mui/material/Button\"\r\nimport grey from \"@mui/material/colors/grey\"\r\nimport Divider from \"@mui/material/Divider\"\r\nimport FormControl from \"@mui/material/FormControl\"\r\nimport InputLabel from \"@mui/material/InputLabel\"\r\nimport MenuItem from \"@mui/material/MenuItem\"\r\nimport Paper from \"@mui/material/Paper\"\r\nimport Select from \"@mui/material/Select\"\r\nimport { styled } from \"@mui/material/styles\"\r\nimport TextField from \"@mui/material/TextField\"\r\nimport Typography from \"@mui/material/Typography\"\r\nimport { useContext } from \"react\"\r\nimport ErrorComponent from \"../components/ErrorComponent\"\r\nimport Loading from \"../components/Loading\"\r\nimport {\r\n  InputContainer,\r\n  ScreenContainer,\r\n  StyledVerticalDivider,\r\n} from \"../components/StyledComponents\"\r\nimport { EditProjectHeadersContext } from \"../contexts/EditProjectHeadersContext\"\r\nimport SaveIcon from \"@mui/icons-material/Save\"\r\n//import frLocale from \"date-fns/locale/fr\"\r\nimport frLocale from \"date-fns/locale/en-CA\"\r\n\r\nconst MainContainer = styled(Paper)(({ theme }) => {\r\n  return {\r\n    backgroundColor:\r\n      theme.palette.mode === \"light\"\r\n        ? grey[200]\r\n        : theme.palette.background.paper,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    padding: theme.spacing(1),\r\n  }\r\n})\r\n\r\nconst HeaderContainer = styled(\"div\")(() => {\r\n  return {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-start\",\r\n  }\r\n})\r\n\r\nconst MainElements = styled(\"div\")(({ theme }) => {\r\n  return {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n  }\r\n})\r\n\r\nexport default function EditProjectHeadersScreen() {\r\n  // context\r\n  const {\r\n    isLoading,\r\n    error,\r\n    headers,\r\n    setTitle,\r\n    setEstimatedDelivery,\r\n    setProjectOwner,\r\n    setTotalAmount,\r\n    setLostSales,\r\n    update,\r\n  } = useContext(EditProjectHeadersContext)!\r\n  const dropSize = 160\r\n  return (\r\n    <ScreenContainer isDataLoaded={!isLoading && !error}>\r\n      {isLoading && <Loading text=\"Loading Schema..\" />}\r\n      {error && <ErrorComponent text={error ?? \"Something went wrong\"} />}\r\n      {!isLoading && !error && headers && (\r\n        <LocalizationProvider dateAdapter={AdapterDateFns} locale={frLocale}>\r\n          <MainContainer>\r\n            <HeaderContainer>\r\n              <Typography gutterBottom variant=\"h5\">\r\n                Edit Project Headers\r\n              </Typography>\r\n            </HeaderContainer>\r\n            <Divider\r\n              style={{ backgroundColor: \"black\", marginBottom: \"1rem\" }}\r\n            />\r\n\r\n            <InputContainer>\r\n              <MainElements>\r\n                <InputContainer>\r\n                  <Typography variant=\"h6\">Title: &nbsp;&nbsp;</Typography>\r\n                  <TextField\r\n                    required\r\n                    type=\"text\"\r\n                    variant=\"outlined\"\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                    value={headers.title}\r\n                    // error={title.error}\r\n                    label=\"Title\"\r\n                  />\r\n                </InputContainer>\r\n                <InputContainer>\r\n                  <Typography variant=\"h6\">Client: &nbsp;&nbsp;</Typography>\r\n                  <Box sx={{ minWidth: dropSize }}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"client-label\">Client</InputLabel>\r\n                      <Select\r\n                        labelId=\"client-label\"\r\n                        id=\"client-select\"\r\n                        value={headers.client_code}\r\n                        label=\"Client\"\r\n                        disabled\r\n                      >\r\n                        {headers.clients.map((client) => (\r\n                          <MenuItem\r\n                            key={client.client_code}\r\n                            value={client.client_code}\r\n                          >\r\n                            {client.description}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Box>\r\n                </InputContainer>\r\n                <StyledVerticalDivider orientation=\"vertical\" flexItem />\r\n                <InputContainer>\r\n                  <Typography variant=\"h6\">\r\n                    Project Owner: &nbsp;&nbsp;\r\n                  </Typography>\r\n                  <Box sx={{ minWidth: dropSize }}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"user-label\">User</InputLabel>\r\n                      <Select\r\n                        labelId=\"user-label\"\r\n                        id=\"user-select\"\r\n                        value={headers.user_code}\r\n                        label=\"User\"\r\n                        onChange={(e) => setProjectOwner(e.target.value)}\r\n                      >\r\n                        {headers.users.map((user) => (\r\n                          <MenuItem key={user.user_code} value={user.user_code}>\r\n                            {user.description}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Box>\r\n                </InputContainer>\r\n                <StyledVerticalDivider orientation=\"vertical\" flexItem />\r\n                <InputContainer>\r\n                  <Typography variant=\"h6\">Currency: &nbsp;&nbsp;</Typography>\r\n                  <Box sx={{ minWidth: dropSize }}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"currency-label\">Currency</InputLabel>\r\n                      <Select\r\n                        labelId=\"currency-label\"\r\n                        id=\"currency-select\"\r\n                        value={headers.project_currency}\r\n                        label=\"Currency\"\r\n                        disabled\r\n                      >\r\n                        {headers.currencies.map((curr) => (\r\n                          <MenuItem\r\n                            key={curr.currency_code}\r\n                            value={curr.currency_code}\r\n                          >\r\n                            {curr.currency_symbol}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Box>\r\n                </InputContainer>\r\n                <StyledVerticalDivider orientation=\"vertical\" flexItem />\r\n                <InputContainer>\r\n                  <Typography variant=\"h6\">Delivery: &nbsp;&nbsp;</Typography>\r\n                  <DatePicker\r\n                    label=\"Estimated Delivery\"\r\n                    openTo=\"month\"\r\n                    views={[\"year\", \"month\", \"day\"]}\r\n                    value={headers.estimated_delivery_date}\r\n                    onChange={(newValue) => {\r\n                      if (newValue) {\r\n                        setEstimatedDelivery(newValue)\r\n                      }\r\n                    }}\r\n                    renderInput={(params) => <TextField {...params} />}\r\n                  />\r\n                </InputContainer>\r\n                <StyledVerticalDivider orientation=\"vertical\" flexItem />\r\n                <InputContainer>\r\n                  <Typography variant=\"h6\">Price: &nbsp;&nbsp;</Typography>\r\n                  <TextField\r\n                    required\r\n                    type=\"number\"\r\n                    variant=\"outlined\"\r\n                    onChange={(e) =>\r\n                      setTotalAmount(Math.abs(Number(e.target.value)))\r\n                    }\r\n                    value={headers.total_price}\r\n                    label=\"Project Price\"\r\n                  />\r\n                </InputContainer>\r\n                <StyledVerticalDivider orientation=\"vertical\" flexItem />\r\n                <InputContainer>\r\n                  <Typography variant=\"h6\">Lost sales: &nbsp;&nbsp;</Typography>\r\n                  <TextField\r\n                    \r\n                    type=\"text\"\r\n                    variant=\"outlined\"\r\n                    onChange={(e) => setLostSales(e.target.value)}\r\n                    value={headers.lost_sales}\r\n                    // error={title.error}\r\n                    label=\"Lost Sales\"\r\n                  />\r\n                </InputContainer>\r\n              </MainElements>\r\n            </InputContainer>\r\n\r\n            <Button\r\n              color=\"success\"\r\n              style={{\r\n                alignSelf: \"flex-end\",\r\n                justifySelf: \"center\",\r\n                margin: \"1rem\",\r\n              }}\r\n              variant=\"contained\"\r\n              onClick={async () => await update()}\r\n              endIcon={<SaveIcon />}\r\n            >\r\n              Update\r\n            </Button>\r\n          </MainContainer>\r\n        </LocalizationProvider>\r\n      )}\r\n    </ScreenContainer>\r\n  )\r\n}\r\n","import \"./App.css\"\r\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\"\r\nimport AuthContextProvider from \"./contexts/AuthContext\"\r\nimport {\r\n  EnsureAuthenticated,\r\n  EnsureUnAuthenticated,\r\n} from \"./components/ProtectedComponents\"\r\nimport HomeScreen from \"./screens/HomeScreen\"\r\nimport LoginScreen from \"./screens/LoginScreen\"\r\nimport ClientsScreen from \"./screens/ClientsScreen\"\r\nimport NewClientScreen from \"./screens/NewClientScreen\"\r\nimport UsersScreen from \"./screens/UsersScreen\"\r\nimport UserDetailsScreen from \"./screens/UserDetailsScreen\"\r\nimport NewUserScreen from \"./screens/NewUserScreen\"\r\nimport ClientDetailsScreen from \"./screens/ClientDetailsScreen\"\r\nimport MainTemplatesScreen from \"./screens/MainTemplatesScreen\"\r\nimport MainTemplateDetailsScreen from \"./screens/MainTemplateDetailsScreen\"\r\n\r\n// Tree\r\nimport NewMainTaskTemplateScreen from \"./screens/NewMainTaskTemplateScreen\"\r\nimport \"@nosferatu500/react-sortable-tree/style.css\"\r\nimport TaskTemplateContextProvider from \"./contexts/TaskTemplateContext\"\r\nimport NotFound from \"./screens/NotFound\"\r\nimport ProjectsScreen from \"./screens/ProjectsScreen\"\r\nimport ProjectContextProvider from \"./contexts/ProjectContext\"\r\nimport ProjectDetailsScreen from \"./screens/ProjectDetailsScreen\"\r\nimport NewProjectScreen from \"./screens/NewProjectScreen\"\r\nimport ProjectTasksEditScreen from \"./screens/ProjectTasksEditScreen\"\r\nimport EditTasksScreenContextProvider from \"./contexts/EditTaskScreenContext\"\r\nimport ProjectPaymentContextProvider from \"./contexts/ProjectPaymentContext\"\r\nimport ProjectPaymentScreen from \"./screens/ProjectPaymentScreen\"\r\nimport CurrenciesScreen from \"./screens/CurrenciesScreen\"\r\nimport CurrenciesContextProvider from \"./contexts/CurrenciesContext\"\r\nimport DropdownValuesScreen from \"./screens/DropdownValuesScreen\"\r\nimport DropdownContextProvider from \"./contexts/DropdownContext\"\r\nimport RescheduleRequestsScreen from \"./screens/RescheduleRequestsScreen\"\r\nimport ThemeContextProvider from \"./contexts/ThemeContext\"\r\nimport ProjectPreviewContextProvider from \"./contexts/ProjectPreviewContext\"\r\nimport ProjectPreviewWithAssignedTasks from \"./screens/ProjectPreviewWithAssignedTasks\"\r\nimport OrderStatusScreen from \"./screens/OrderStatusScreen\"\r\nimport TasksByEmployeeScreen from \"./screens/TasksByEmployeeScreen\"\r\nimport PipelineOrdersScreen from \"./screens/PipelineOrdersScreen\"\r\nimport GanttScreen from \"./screens/GanttScreen\"\r\nimport AvgDurationTaskScreen from \"./screens/AvgDurationTaskScreen\"\r\nimport CashForecastScreen from \"./screens/CashForecastScreen\"\r\nimport ChangePasswordScreen from \"./screens/ChangePasswordScreen\"\r\nimport EditProjectHeadersContextProvider, {\r\n  EditProjectHeadersContext,\r\n} from \"./contexts/EditProjectHeadersContext\"\r\nimport EditProjectHeadersScreen from \"./screens/EditProjectHeadersScreen\"\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeContextProvider>\r\n      <BrowserRouter>\r\n        <AuthContextProvider>\r\n          <div className=\"App\">\r\n            <Routes>\r\n              <Route\r\n                path=\"/\"\r\n                element={<EnsureAuthenticated children={<HomeScreen />} />}\r\n              >\r\n                {/* Clients */}\r\n                <Route\r\n                  path=\"/clients\"\r\n                  element={<EnsureAuthenticated children={<ClientsScreen />} />}\r\n                />\r\n                <Route\r\n                  path=\"/clients/:id\"\r\n                  element={\r\n                    <EnsureAuthenticated children={<ClientDetailsScreen />} />\r\n                  }\r\n                />\r\n                <Route\r\n                  path=\"/clients/new\"\r\n                  element={\r\n                    <EnsureAuthenticated children={<NewClientScreen />} />\r\n                  }\r\n                />\r\n\r\n                {/* Users */}\r\n                <Route\r\n                  path=\"/users\"\r\n                  element={<EnsureAuthenticated children={<UsersScreen />} />}\r\n                />\r\n                <Route\r\n                  path=\"/users/:id\"\r\n                  element={\r\n                    <EnsureAuthenticated children={<UserDetailsScreen />} />\r\n                  }\r\n                />\r\n                <Route\r\n                  path=\"/users/new\"\r\n                  element={<EnsureAuthenticated children={<NewUserScreen />} />}\r\n                />\r\n\r\n                {/* Templ */}\r\n                <Route\r\n                  path=\"/tasks/templates\"\r\n                  element={\r\n                    <EnsureAuthenticated children={<MainTemplatesScreen />} />\r\n                  }\r\n                />\r\n                <Route\r\n                  path=\"/tasks/templates/:id\"\r\n                  element={\r\n                    <EnsureAuthenticated\r\n                      children={\r\n                        <TaskTemplateContextProvider>\r\n                          <MainTemplateDetailsScreen />\r\n                        </TaskTemplateContextProvider>\r\n                      }\r\n                    />\r\n                  }\r\n                />\r\n                <Route\r\n                  path=\"/tasks/templates/new\"\r\n                  element={\r\n                    <EnsureAuthenticated\r\n                      children={<NewMainTaskTemplateScreen />}\r\n                    />\r\n                  }\r\n                />\r\n                {/* Projects */}\r\n                <Route\r\n                  path=\"/projects\"\r\n                  element={\r\n                    <EnsureAuthenticated children={<ProjectsScreen />} />\r\n                  }\r\n                />\r\n                <Route\r\n                  path=\"/projects/:id\"\r\n                  element={\r\n                    <EnsureAuthenticated\r\n                      children={\r\n                        <ProjectContextProvider>\r\n                          <ProjectDetailsScreen />\r\n                        </ProjectContextProvider>\r\n                      }\r\n                    />\r\n                  }\r\n                />\r\n                <Route\r\n                  path=\"/projects/:id/tasks/edit\"\r\n                  element={\r\n                    <EnsureAuthenticated\r\n                      children={\r\n                        <EditTasksScreenContextProvider>\r\n                          <ProjectTasksEditScreen />\r\n                        </EditTasksScreenContextProvider>\r\n                      }\r\n                    />\r\n                  }\r\n                />\r\n                <Route\r\n                  path=\"/projects/:id/tasks/duration/report\"\r\n                  element={\r\n                    <EnsureAuthenticated children={<AvgDurationTaskScreen />} />\r\n                  }\r\n                />\r\n                <Route\r\n                  path=\"/projects/:id/payments\"\r\n                  element={\r\n                    <EnsureAuthenticated\r\n                      children={\r\n                        <ProjectPaymentContextProvider>\r\n                          <ProjectPaymentScreen />\r\n                        </ProjectPaymentContextProvider>\r\n                      }\r\n                    />\r\n                  }\r\n                />\r\n                <Route\r\n                  path=\"/projects/:id/reschedule\"\r\n                  element={\r\n                    <EnsureAuthenticated\r\n                      children={<RescheduleRequestsScreen />}\r\n                    />\r\n                  }\r\n                />\r\n                <Route\r\n                  path=\"/projects/new\"\r\n                  element={\r\n                    <EnsureAuthenticated children={<NewProjectScreen />} />\r\n                  }\r\n                />\r\n                <Route\r\n                  path=\"/projects/:id/preview\"\r\n                  element={\r\n                    <EnsureAuthenticated\r\n                      children={\r\n                        <ProjectPreviewContextProvider>\r\n                          <ProjectPreviewWithAssignedTasks />\r\n                        </ProjectPreviewContextProvider>\r\n                      }\r\n                    />\r\n                  }\r\n                />\r\n                <Route\r\n                  path=\"/projects/:id/edit\"\r\n                  element={\r\n                    <EnsureAuthenticated\r\n                      children={\r\n                        <EditProjectHeadersContextProvider>\r\n                          <EditProjectHeadersScreen />\r\n                        </EditProjectHeadersContextProvider>\r\n                      }\r\n                    />\r\n                  }\r\n                />\r\n                {/* Currencies */}\r\n                <Route\r\n                  path=\"/currencies\"\r\n                  element={\r\n                    <EnsureAuthenticated\r\n                      children={\r\n                        <CurrenciesContextProvider>\r\n                          <CurrenciesScreen />\r\n                        </CurrenciesContextProvider>\r\n                      }\r\n                    />\r\n                  }\r\n                />\r\n                {/* Dropdown */}\r\n                <Route\r\n                  path=\"/settings/dropdown\"\r\n                  element={\r\n                    <EnsureAuthenticated\r\n                      children={\r\n                        <DropdownContextProvider>\r\n                          <DropdownValuesScreen />\r\n                        </DropdownContextProvider>\r\n                      }\r\n                    />\r\n                  }\r\n                />\r\n                {/* Order Status */}\r\n                <Route\r\n                  path=\"/reports/order-status\"\r\n                  element={\r\n                    <EnsureAuthenticated children={<OrderStatusScreen />} />\r\n                  }\r\n                />\r\n                <Route\r\n                  path=\"/reports/tasks-by-employee\"\r\n                  element={\r\n                    <EnsureAuthenticated children={<TasksByEmployeeScreen />} />\r\n                  }\r\n                />\r\n                <Route\r\n                  path=\"/reports/pipeline-orders\"\r\n                  element={\r\n                    <EnsureAuthenticated children={<PipelineOrdersScreen />} />\r\n                  }\r\n                />\r\n                <Route\r\n                  path=\"/reports/gantt\"\r\n                  element={<EnsureAuthenticated children={<GanttScreen />} />}\r\n                />\r\n                <Route\r\n                  path=\"/reports/cash-forecast\"\r\n                  element={\r\n                    <EnsureAuthenticated children={<CashForecastScreen />} />\r\n                  }\r\n                />\r\n                {/* Password */}\r\n                <Route\r\n                  path=\"/change-password\"\r\n                  element={\r\n                    <EnsureAuthenticated children={<ChangePasswordScreen />} />\r\n                  }\r\n                />\r\n              </Route>\r\n              <Route\r\n                path=\"/login\"\r\n                element={<EnsureUnAuthenticated children={<LoginScreen />} />}\r\n              />\r\n              <Route\r\n                path=\"/*\"\r\n                element={<EnsureAuthenticated children={<NotFound />} />}\r\n              />\r\n            </Routes>\r\n          </div>\r\n        </AuthContextProvider>\r\n      </BrowserRouter>\r\n    </ThemeContextProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\n// TODO: check fast-deep-equal\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"barWrapper\":\"bar_barWrapper__3xfTc\",\"barHandle\":\"bar_barHandle__jRs2Z\",\"barBackground\":\"bar_barBackground__aBSU8\"};"],"sourceRoot":""}